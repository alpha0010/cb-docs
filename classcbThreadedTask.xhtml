<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.8"/>
<title>Code::Blocks: cbThreadedTask Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">Code::Blocks
   &#160;<span id="projectnumber">SVN r10078</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.8 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li><a href="files.xhtml"><span>Files</span></a></li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.xhtml"><span>Class&#160;List</span></a></li>
      <li><a href="classes.xhtml"><span>Class&#160;Index</span></a></li>
      <li><a href="inherits.xhtml"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.xhtml"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pro-methods">Protected Member Functions</a> &#124;
<a href="#pri-attribs">Private Attributes</a> &#124;
<a href="classcbThreadedTask-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">cbThreadedTask Class Reference<span class="mlabels"><span class="mlabel">abstract</span></span></div>  </div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;<a class="el" href="cbthreadedtask_8h_source.xhtml">cbthreadedtask.h</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for cbThreadedTask:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="classcbThreadedTask__inherit__graph.svg" width="664" height="742"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Collaboration diagram for cbThreadedTask:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="classcbThreadedTask__coll__graph.svg" width="155" height="162"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a1300f09b9a805d17f4a5451eee117427"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcbThreadedTask.xhtml#a1300f09b9a805d17f4a5451eee117427">cbThreadedTask</a> ()</td></tr>
<tr class="memdesc:a1300f09b9a805d17f4a5451eee117427"><td class="mdescLeft">&#160;</td><td class="mdescRight"><a class="el" href="classcbThreadedTask.xhtml">cbThreadedTask</a> ctor  <a href="#a1300f09b9a805d17f4a5451eee117427">More...</a><br /></td></tr>
<tr class="separator:a1300f09b9a805d17f4a5451eee117427"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a540ecf76d478ef4688395de0fb540068"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcbThreadedTask.xhtml#a540ecf76d478ef4688395de0fb540068">~cbThreadedTask</a> ()=0</td></tr>
<tr class="memdesc:a540ecf76d478ef4688395de0fb540068"><td class="mdescLeft">&#160;</td><td class="mdescRight"><a class="el" href="classcbThreadedTask.xhtml">cbThreadedTask</a> dtor  <a href="#a540ecf76d478ef4688395de0fb540068">More...</a><br /></td></tr>
<tr class="separator:a540ecf76d478ef4688395de0fb540068"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa627c91a6405188001870a4191bf87c7"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcbThreadedTask.xhtml#aa627c91a6405188001870a4191bf87c7">Abort</a> ()</td></tr>
<tr class="memdesc:aa627c91a6405188001870a4191bf87c7"><td class="mdescLeft">&#160;</td><td class="mdescRight">This function is called to tell the task to abort (check <a class="el" href="classcbThreadPool.xhtml#a3477c26b54ed024450576fc3fa7f865f">cbThreadPool::AbortAllTasks</a>)  <a href="#aa627c91a6405188001870a4191bf87c7">More...</a><br /></td></tr>
<tr class="separator:aa627c91a6405188001870a4191bf87c7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a94b971f3b6de85bf5bd12a2bdb47f867"><td class="memItemLeft" align="right" valign="top">virtual int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcbThreadedTask.xhtml#a94b971f3b6de85bf5bd12a2bdb47f867">Execute</a> ()=0</td></tr>
<tr class="separator:a94b971f3b6de85bf5bd12a2bdb47f867"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-methods"></a>
Protected Member Functions</h2></td></tr>
<tr class="memitem:a4df205663364bfc9e5d0a4c4b4e5eb34"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcbThreadedTask.xhtml#a4df205663364bfc9e5d0a4c4b4e5eb34">TestDestroy</a> () const </td></tr>
<tr class="memdesc:a4df205663364bfc9e5d0a4c4b4e5eb34"><td class="mdescLeft">&#160;</td><td class="mdescRight">Be sure to call this function often. If it returns true, quit your task quickly.  <a href="#a4df205663364bfc9e5d0a4c4b4e5eb34">More...</a><br /></td></tr>
<tr class="separator:a4df205663364bfc9e5d0a4c4b4e5eb34"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1d6b3ac80d7cf645408d5cf2eb630b89"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcbThreadedTask.xhtml#a1d6b3ac80d7cf645408d5cf2eb630b89">Aborted</a> () const </td></tr>
<tr class="memdesc:a1d6b3ac80d7cf645408d5cf2eb630b89"><td class="mdescLeft">&#160;</td><td class="mdescRight">Same as <a class="el" href="classcbThreadedTask.xhtml#a4df205663364bfc9e5d0a4c4b4e5eb34" title="Be sure to call this function often. If it returns true, quit your task quickly. ">TestDestroy()</a>  <a href="#a1d6b3ac80d7cf645408d5cf2eb630b89">More...</a><br /></td></tr>
<tr class="separator:a1d6b3ac80d7cf645408d5cf2eb630b89"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pri-attribs"></a>
Private Attributes</h2></td></tr>
<tr class="memitem:a0d87b3430013ad04aa9e9dbaa2cd3583"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcbThreadedTask.xhtml#a0d87b3430013ad04aa9e9dbaa2cd3583">m_abort</a></td></tr>
<tr class="separator:a0d87b3430013ad04aa9e9dbaa2cd3583"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>This is what you have to use instead of wxThread to add tasks to the Thread Pool. It has a reduced, but similar, interface like that of wxThread. Just be sure to override Execute (like wxThread's Entry) and test every now and then for TestDestroy. </p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="a1300f09b9a805d17f4a5451eee117427"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">cbThreadedTask::cbThreadedTask </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p><a class="el" href="classcbThreadedTask.xhtml">cbThreadedTask</a> ctor </p>

</div>
</div>
<a class="anchor" id="a540ecf76d478ef4688395de0fb540068"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">cbThreadedTask::~cbThreadedTask </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p><a class="el" href="classcbThreadedTask.xhtml">cbThreadedTask</a> dtor </p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a class="anchor" id="aa627c91a6405188001870a4191bf87c7"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void cbThreadedTask::Abort </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>This function is called to tell the task to abort (check <a class="el" href="classcbThreadPool.xhtml#a3477c26b54ed024450576fc3fa7f865f">cbThreadPool::AbortAllTasks</a>) </p>

<p>References <a class="el" href="classcbThreadedTask.xhtml#a0d87b3430013ad04aa9e9dbaa2cd3583">m_abort</a>.</p>

</div>
</div>
<a class="anchor" id="a1d6b3ac80d7cf645408d5cf2eb630b89"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool cbThreadedTask::Aborted </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Same as <a class="el" href="classcbThreadedTask.xhtml#a4df205663364bfc9e5d0a4c4b4e5eb34" title="Be sure to call this function often. If it returns true, quit your task quickly. ">TestDestroy()</a> </p>

<p>References <a class="el" href="classcbThreadedTask.xhtml#a0d87b3430013ad04aa9e9dbaa2cd3583">m_abort</a>.</p>

</div>
</div>
<a class="anchor" id="a94b971f3b6de85bf5bd12a2bdb47f867"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual int cbThreadedTask::Execute </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Override this function with the task's job Return value doesn't matter </p>

<p>Implemented in <a class="el" href="classParserThread.xhtml#a37f1420aefc6d522030a93283d965515">ParserThread</a>, <a class="el" href="classMarkFileAsLocalThreadedTask.xhtml#af3aade08483ae0ccdb0497c6dec4bd93">MarkFileAsLocalThreadedTask</a>, and <a class="el" href="classParserThreadedTask.xhtml#a33beca1e291d4fec410297f4356ddb04">ParserThreadedTask</a>.</p>

<p>Referenced by <a class="el" href="classcbThreadPool_1_1cbWorkerThread.xhtml#a2b83f597e4c40785c163648791c695b4">cbThreadPool::cbWorkerThread::Entry()</a>.</p>

</div>
</div>
<a class="anchor" id="a4df205663364bfc9e5d0a4c4b4e5eb34"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool cbThreadedTask::TestDestroy </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Be sure to call this function often. If it returns true, quit your task quickly. </p>

<p>References <a class="el" href="classcbThreadedTask.xhtml#a0d87b3430013ad04aa9e9dbaa2cd3583">m_abort</a>.</p>

<p>Referenced by <a class="el" href="classParserThread.xhtml#a4d7fd6f0ea1cf357f65af69a16a8ef48">ParserThread::IsStillAlive()</a>.</p>

</div>
</div>
<h2 class="groupheader">Member Data Documentation</h2>
<a class="anchor" id="a0d87b3430013ad04aa9e9dbaa2cd3583"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool cbThreadedTask::m_abort</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Referenced by <a class="el" href="classcbThreadedTask.xhtml#aa627c91a6405188001870a4191bf87c7">Abort()</a>, <a class="el" href="classcbThreadedTask.xhtml#a1d6b3ac80d7cf645408d5cf2eb630b89">Aborted()</a>, and <a class="el" href="classcbThreadedTask.xhtml#a4df205663364bfc9e5d0a4c4b4e5eb34">TestDestroy()</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li><a class="el" href="cbthreadedtask_8h_source.xhtml">cbthreadedtask.h</a></li>
</ul>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.8
</small></address>
</body>
</html>
