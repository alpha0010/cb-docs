<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.8"/>
<title>Code::Blocks: searchtree.h File Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">Code::Blocks
   &#160;<span id="projectnumber">SVN r10078</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.8 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li class="current"><a href="files.xhtml"><span>Files</span></a></li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.xhtml"><span>File&#160;List</span></a></li>
      <li><a href="globals.xhtml"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_38c8d24aef3972a7f87b834274e76e31.xhtml">plugins</a></li><li class="navelem"><a class="el" href="dir_5b9772d57d438712a6aae555d46a39df.xhtml">codecompletion</a></li><li class="navelem"><a class="el" href="dir_0d1509cb81559cfbecabf91fcb08b3b7.xhtml">parser</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#nested-classes">Classes</a> &#124;
<a href="#typedef-members">Typedefs</a>  </div>
  <div class="headertitle">
<div class="title">searchtree.h File Reference</div>  </div>
</div><!--header-->
<div class="contents">
<div class="textblock"><code>#include &quot;<a class="el" href="prep_8h_source.xhtml">prep.h</a>&quot;</code><br />
<code>#include &lt;wx/string.h&gt;</code><br />
<code>#include &lt;vector&gt;</code><br />
<code>#include &lt;map&gt;</code><br />
<code>#include &lt;set&gt;</code><br />
</div><div class="textblock"><div class="dynheader">
Include dependency graph for searchtree.h:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="searchtree_8h__incl.svg" width="391" height="112"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
</div><div class="textblock"><div class="dynheader">
This graph shows which files directly or indirectly include this file:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="searchtree_8h__dep__incl.svg" width="2011" height="635"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
</div>
<p><a href="searchtree_8h_source.xhtml">Go to the source code of this file.</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"></a>
Classes</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classBasicSearchTreeIterator.xhtml">BasicSearchTreeIterator</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classSearchTreePoint.xhtml">SearchTreePoint</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classSearchTreeNode.xhtml">SearchTreeNode</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classBasicSearchTree.xhtml">BasicSearchTree</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classSearchTree.xhtml">SearchTree&lt; T &gt;</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="typedef-members"></a>
Typedefs</h2></td></tr>
<tr class="memitem:a9e130e209fbfa5c71f660662679c75cc"><td class="memItemLeft" align="right" valign="top">typedef size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="searchtree_8h.xhtml#a9e130e209fbfa5c71f660662679c75cc">nSearchTreeNode</a></td></tr>
<tr class="separator:a9e130e209fbfa5c71f660662679c75cc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3650946633c4b72c87bf53be88e93db8"><td class="memItemLeft" align="right" valign="top">typedef size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="searchtree_8h.xhtml#a3650946633c4b72c87bf53be88e93db8">nSearchTreeLabel</a></td></tr>
<tr class="separator:a3650946633c4b72c87bf53be88e93db8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a79aa4b8df0c9bc9a816467269f1ea84a"><td class="memItemLeft" align="right" valign="top">typedef std::map&lt; wxChar, <br class="typebreak" />
<a class="el" href="searchtree_8h.xhtml#a9e130e209fbfa5c71f660662679c75cc">nSearchTreeNode</a>, std::less<br class="typebreak" />
&lt; wxChar &gt; &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="searchtree_8h.xhtml#a79aa4b8df0c9bc9a816467269f1ea84a">SearchTreeLinkMap</a></td></tr>
<tr class="separator:a79aa4b8df0c9bc9a816467269f1ea84a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a303a32605d0a8135cb3068ab656ddeb4"><td class="memItemLeft" align="right" valign="top">typedef std::vector<br class="typebreak" />
&lt; <a class="el" href="classSearchTreeNode.xhtml">SearchTreeNode</a> * &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="searchtree_8h.xhtml#a303a32605d0a8135cb3068ab656ddeb4">SearchTreeNodesArray</a></td></tr>
<tr class="separator:a303a32605d0a8135cb3068ab656ddeb4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9a54ae5340e2cf2a5f901f5071029c36"><td class="memItemLeft" align="right" valign="top">typedef std::vector<br class="typebreak" />
&lt; <a class="el" href="classSearchTreePoint.xhtml">SearchTreePoint</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="searchtree_8h.xhtml#a9a54ae5340e2cf2a5f901f5071029c36">SearchTreePointsArray</a></td></tr>
<tr class="separator:a9a54ae5340e2cf2a5f901f5071029c36"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aebc8c9920a7873f6865017ad230023c3"><td class="memItemLeft" align="right" valign="top">typedef std::map&lt; size_t, <br class="typebreak" />
size_t, std::less&lt; size_t &gt; &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="searchtree_8h.xhtml#aebc8c9920a7873f6865017ad230023c3">SearchTreeItemsMap</a></td></tr>
<tr class="separator:aebc8c9920a7873f6865017ad230023c3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad1a5307a08027cd98dcf4d6427ed6639"><td class="memItemLeft" align="right" valign="top">typedef std::vector&lt; wxString &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="searchtree_8h.xhtml#ad1a5307a08027cd98dcf4d6427ed6639">SearchTreeLabelsArray</a></td></tr>
<tr class="separator:ad1a5307a08027cd98dcf4d6427ed6639"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Typedef Documentation</h2>
<a class="anchor" id="a3650946633c4b72c87bf53be88e93db8"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef size_t <a class="el" href="searchtree_8h.xhtml#a3650946633c4b72c87bf53be88e93db8">nSearchTreeLabel</a></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>label index, we put the labels (strings) in a vector, and access them by index </p>

</div>
</div>
<a class="anchor" id="a9e130e209fbfa5c71f660662679c75cc"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef size_t <a class="el" href="searchtree_8h.xhtml#a9e130e209fbfa5c71f660662679c75cc">nSearchTreeNode</a></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>node index, we hold the node address in a vector and reference it by index </p>

</div>
</div>
<a class="anchor" id="aebc8c9920a7873f6865017ad230023c3"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef std::map&lt;size_t,size_t, std::less&lt;size_t&gt; &gt; <a class="el" href="searchtree_8h.xhtml#aebc8c9920a7873f6865017ad230023c3">SearchTreeItemsMap</a></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>SearchTreeItemsMap contains all the items belonging to an node, the key is the depth of the point, which is the string length from the root node to the current point, the value is an index to point array, </p><dl class="section see"><dt>See also</dt><dd><a class="el" href="classSearchTreeNode.xhtml">SearchTreeNode</a> as a reference. </dd></dl>

</div>
</div>
<a class="anchor" id="ad1a5307a08027cd98dcf4d6427ed6639"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef std::vector&lt;wxString&gt; <a class="el" href="searchtree_8h.xhtml#ad1a5307a08027cd98dcf4d6427ed6639">SearchTreeLabelsArray</a></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>SearchTreeLabelsArray contains the labels used by the nodes, each node contains an incoming edge string, to identify the edge string, we need three member variables: 1, a string index in the vector, </p><dl class="section see"><dt>See also</dt><dd>SearchTreeNode::nSearchTreeLabel 2, the edge's start index in the string, </dd>
<dd>
<a class="el" href="classSearchTreeNode.xhtml#a0a9b9ef7eebf416833ff749626418a5a">SearchTreeNode::m_LabelStart</a> 3, the edge's length, </dd>
<dd>
<a class="el" href="classSearchTreeNode.xhtml#a4f0c380a9081b7f0574d06aa55f6dbce">SearchTreeNode::m_LabelLen</a> </dd></dl>

</div>
</div>
<a class="anchor" id="a79aa4b8df0c9bc9a816467269f1ea84a"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef std::map&lt;wxChar, <a class="el" href="searchtree_8h.xhtml#a9e130e209fbfa5c71f660662679c75cc">nSearchTreeNode</a>, std::less&lt;wxChar&gt; &gt; <a class="el" href="searchtree_8h.xhtml#a79aa4b8df0c9bc9a816467269f1ea84a">SearchTreeLinkMap</a></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>SearchTreeLinkMap is the list of the edges towards child nodes. The character is the key, and the child node index is the value, </p><dl class="section see"><dt>See also</dt><dd><a class="el" href="classSearchTreeNode.xhtml">SearchTreeNode</a> for a reference. </dd></dl>

</div>
</div>
<a class="anchor" id="a303a32605d0a8135cb3068ab656ddeb4"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef std::vector&lt;<a class="el" href="classSearchTreeNode.xhtml">SearchTreeNode</a>*&gt; <a class="el" href="searchtree_8h.xhtml#a303a32605d0a8135cb3068ab656ddeb4">SearchTreeNodesArray</a></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>SearchTreeNodesArray contains all the nodes for a search tree, currently the vector should have all the slots filled with a valid node address, so remove a node from the vector is not allowed. </p>

</div>
</div>
<a class="anchor" id="a9a54ae5340e2cf2a5f901f5071029c36"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef std::vector&lt;<a class="el" href="classSearchTreePoint.xhtml">SearchTreePoint</a>&gt; <a class="el" href="searchtree_8h.xhtml#a9a54ae5340e2cf2a5f901f5071029c36">SearchTreePointsArray</a></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>SearchTreePointsArray contains a list of tree points defining strings (keys), </p><dl class="section see"><dt>See also</dt><dd><a class="el" href="classSearchTreePoint.xhtml">SearchTreePoint</a> for details about how unique strings(key) are referenced by <a class="el" href="classSearchTreePoint.xhtml">SearchTreePoint</a>. </dd></dl>

</div>
</div>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.8
</small></address>
</body>
</html>
