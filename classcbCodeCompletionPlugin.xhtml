<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.9.1"/>
<title>Code::Blocks: cbCodeCompletionPlugin Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">Code::Blocks
   &#160;<span id="projectnumber">SVN r10314</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.9.1 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li><a href="files.xhtml"><span>Files</span></a></li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.xhtml"><span>Class&#160;List</span></a></li>
      <li><a href="classes.xhtml"><span>Class&#160;Index</span></a></li>
      <li><a href="inherits.xhtml"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.xhtml"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#nested-classes">Classes</a> &#124;
<a href="#pub-types">Public Types</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pro-methods">Protected Member Functions</a> &#124;
<a href="classcbCodeCompletionPlugin-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">cbCodeCompletionPlugin Class Reference<span class="mlabels"><span class="mlabel">abstract</span></span></div>  </div>
</div><!--header-->
<div class="contents">

<p>Base class for code-completion plugins.  
 <a href="classcbCodeCompletionPlugin.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="cbplugin_8h_source.xhtml">cbplugin.h</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for cbCodeCompletionPlugin:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="classcbCodeCompletionPlugin__inherit__graph.svg" width="222" height="1168"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Collaboration diagram for cbCodeCompletionPlugin:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="classcbCodeCompletionPlugin__coll__graph.svg" width="222" height="676"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"></a>
Classes</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structcbCodeCompletionPlugin_1_1CCCallTip.xhtml">CCCallTip</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structcbCodeCompletionPlugin_1_1CCToken.xhtml">CCToken</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-types"></a>
Public Types</h2></td></tr>
<tr class="memitem:a87282f31636d65e44c775464711a8e30"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcbCodeCompletionPlugin.xhtml#a87282f31636d65e44c775464711a8e30">CCProviderStatus</a> { <a class="el" href="classcbCodeCompletionPlugin.xhtml#a87282f31636d65e44c775464711a8e30ae903856ea743c77057e85cbada029a2a">ccpsInactive</a>, 
<a class="el" href="classcbCodeCompletionPlugin.xhtml#a87282f31636d65e44c775464711a8e30a8c1f949ae2e8600ff7a4eb6b21503e3e">ccpsActive</a>, 
<a class="el" href="classcbCodeCompletionPlugin.xhtml#a87282f31636d65e44c775464711a8e30a503960458fb13c69ddaf9ee42f56a124">ccpsUniversal</a>
 }</td></tr>
<tr class="separator:a87282f31636d65e44c775464711a8e30"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a2f9b2e0f2fc361f811cba52242f9e0e5"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcbCodeCompletionPlugin.xhtml#a2f9b2e0f2fc361f811cba52242f9e0e5">cbCodeCompletionPlugin</a> ()</td></tr>
<tr class="separator:a2f9b2e0f2fc361f811cba52242f9e0e5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaed51dcf7a2df2436225f4f9456f5f0a"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classcbCodeCompletionPlugin.xhtml#a87282f31636d65e44c775464711a8e30">CCProviderStatus</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcbCodeCompletionPlugin.xhtml#aaed51dcf7a2df2436225f4f9456f5f0a">GetProviderStatusFor</a> (<a class="el" href="classcbEditor.xhtml">cbEditor</a> *ed)=0</td></tr>
<tr class="memdesc:aaed51dcf7a2df2436225f4f9456f5f0a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Does this plugin handle code completion for the editor <code>ed</code>?  <a href="#aaed51dcf7a2df2436225f4f9456f5f0a">More...</a><br /></td></tr>
<tr class="separator:aaed51dcf7a2df2436225f4f9456f5f0a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3739e702b860eccb5042bac842ac83d9"><td class="memItemLeft" align="right" valign="top">virtual std::vector&lt; <a class="el" href="structcbCodeCompletionPlugin_1_1CCToken.xhtml">CCToken</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcbCodeCompletionPlugin.xhtml#a3739e702b860eccb5042bac842ac83d9">GetAutocompList</a> (bool isAuto, <a class="el" href="classcbEditor.xhtml">cbEditor</a> *ed, int &amp;tknStart, int &amp;tknEnd)=0</td></tr>
<tr class="memdesc:a3739e702b860eccb5042bac842ac83d9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Supply content for the autocompletion list.  <a href="#a3739e702b860eccb5042bac842ac83d9">More...</a><br /></td></tr>
<tr class="separator:a3739e702b860eccb5042bac842ac83d9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac65b6191cd81ff9e34d00055cfcdc490"><td class="memItemLeft" align="right" valign="top">virtual wxString&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcbCodeCompletionPlugin.xhtml#ac65b6191cd81ff9e34d00055cfcdc490">GetDocumentation</a> (const <a class="el" href="structcbCodeCompletionPlugin_1_1CCToken.xhtml">CCToken</a> &amp;token)=0</td></tr>
<tr class="memdesc:ac65b6191cd81ff9e34d00055cfcdc490"><td class="mdescLeft">&#160;</td><td class="mdescRight">Supply html formatted documentation for the passed token.  <a href="#ac65b6191cd81ff9e34d00055cfcdc490">More...</a><br /></td></tr>
<tr class="separator:ac65b6191cd81ff9e34d00055cfcdc490"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a62144d3398090c62e5c812fb2611d2cd"><td class="memItemLeft" align="right" valign="top">virtual std::vector&lt; <a class="el" href="structcbCodeCompletionPlugin_1_1CCCallTip.xhtml">CCCallTip</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcbCodeCompletionPlugin.xhtml#a62144d3398090c62e5c812fb2611d2cd">GetCallTips</a> (int pos, int style, <a class="el" href="classcbEditor.xhtml">cbEditor</a> *ed, int &amp;argsPos)=0</td></tr>
<tr class="memdesc:a62144d3398090c62e5c812fb2611d2cd"><td class="mdescLeft">&#160;</td><td class="mdescRight">Supply content for the calltip at the specified location.  <a href="#a62144d3398090c62e5c812fb2611d2cd">More...</a><br /></td></tr>
<tr class="separator:a62144d3398090c62e5c812fb2611d2cd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab41a10629def590d7029e126f62d01c4"><td class="memItemLeft" align="right" valign="top">virtual std::vector&lt; <a class="el" href="structcbCodeCompletionPlugin_1_1CCToken.xhtml">CCToken</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcbCodeCompletionPlugin.xhtml#ab41a10629def590d7029e126f62d01c4">GetTokenAt</a> (int pos, <a class="el" href="classcbEditor.xhtml">cbEditor</a> *ed, bool &amp;allowCallTip)=0</td></tr>
<tr class="memdesc:ab41a10629def590d7029e126f62d01c4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Supply the definition of the token at the specified location.  <a href="#ab41a10629def590d7029e126f62d01c4">More...</a><br /></td></tr>
<tr class="separator:ab41a10629def590d7029e126f62d01c4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7295ada27f6538cc47b4bce965ac6b92"><td class="memItemLeft" align="right" valign="top">virtual wxString&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcbCodeCompletionPlugin.xhtml#a7295ada27f6538cc47b4bce965ac6b92">OnDocumentationLink</a> (wxHtmlLinkEvent &amp;event, bool &amp;dismissPopup)=0</td></tr>
<tr class="memdesc:a7295ada27f6538cc47b4bce965ac6b92"><td class="mdescLeft">&#160;</td><td class="mdescRight">Callback to handle a click on a link in the documentation popup.  <a href="#a7295ada27f6538cc47b4bce965ac6b92">More...</a><br /></td></tr>
<tr class="separator:a7295ada27f6538cc47b4bce965ac6b92"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab0c6966851e479efef2d76c52610c657"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcbCodeCompletionPlugin.xhtml#ab0c6966851e479efef2d76c52610c657">DoAutocomplete</a> (const <a class="el" href="structcbCodeCompletionPlugin_1_1CCToken.xhtml">CCToken</a> &amp;token, <a class="el" href="classcbEditor.xhtml">cbEditor</a> *ed)</td></tr>
<tr class="memdesc:ab0c6966851e479efef2d76c52610c657"><td class="mdescLeft">&#160;</td><td class="mdescRight">Callback for inserting the selected autocomplete entry into the editor.  <a href="#ab0c6966851e479efef2d76c52610c657">More...</a><br /></td></tr>
<tr class="separator:ab0c6966851e479efef2d76c52610c657"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af739652161f1867c019c220ffc5f9af7"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcbCodeCompletionPlugin.xhtml#af739652161f1867c019c220ffc5f9af7">DoAutocomplete</a> (const wxString &amp;token, <a class="el" href="classcbEditor.xhtml">cbEditor</a> *ed)</td></tr>
<tr class="memdesc:af739652161f1867c019c220ffc5f9af7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Callback for inserting the selected autocomplete entry into the editor.  <a href="#af739652161f1867c019c220ffc5f9af7">More...</a><br /></td></tr>
<tr class="separator:af739652161f1867c019c220ffc5f9af7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classcbPlugin"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classcbPlugin')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classcbPlugin.xhtml">cbPlugin</a></td></tr>
<tr class="memitem:abcba4dcc8a4b0effeecd45c9a7a35bdc inherit pub_methods_classcbPlugin"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcbPlugin.xhtml#abcba4dcc8a4b0effeecd45c9a7a35bdc">cbPlugin</a> ()</td></tr>
<tr class="separator:abcba4dcc8a4b0effeecd45c9a7a35bdc inherit pub_methods_classcbPlugin"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a36139db2ac938bb33994a951dd2c0a27 inherit pub_methods_classcbPlugin"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcbPlugin.xhtml#a36139db2ac938bb33994a951dd2c0a27">~cbPlugin</a> ()</td></tr>
<tr class="separator:a36139db2ac938bb33994a951dd2c0a27 inherit pub_methods_classcbPlugin"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a18b4a1951ba136a393eaf353cfbaf6f4 inherit pub_methods_classcbPlugin"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="globals_8h.xhtml#a54e0db21fd49ff6e0178b6ebe120a6d2">PluginType</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcbPlugin.xhtml#a18b4a1951ba136a393eaf353cfbaf6f4">GetType</a> () const </td></tr>
<tr class="separator:a18b4a1951ba136a393eaf353cfbaf6f4 inherit pub_methods_classcbPlugin"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8d819171f8cbb8c78b2ab2e59a968750 inherit pub_methods_classcbPlugin"><td class="memItemLeft" align="right" valign="top">virtual int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcbPlugin.xhtml#a8d819171f8cbb8c78b2ab2e59a968750">GetConfigurationPriority</a> () const </td></tr>
<tr class="separator:a8d819171f8cbb8c78b2ab2e59a968750 inherit pub_methods_classcbPlugin"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae6167adad745de4d0cfb3dc5b8ea7b80 inherit pub_methods_classcbPlugin"><td class="memItemLeft" align="right" valign="top">virtual int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcbPlugin.xhtml#ae6167adad745de4d0cfb3dc5b8ea7b80">GetConfigurationGroup</a> () const </td></tr>
<tr class="separator:ae6167adad745de4d0cfb3dc5b8ea7b80 inherit pub_methods_classcbPlugin"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acdb854d50a47dc61104d871cb9e5bbb4 inherit pub_methods_classcbPlugin"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classcbConfigurationPanel.xhtml">cbConfigurationPanel</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcbPlugin.xhtml#acdb854d50a47dc61104d871cb9e5bbb4">GetConfigurationPanel</a> (cb_optional wxWindow *parent)</td></tr>
<tr class="separator:acdb854d50a47dc61104d871cb9e5bbb4 inherit pub_methods_classcbPlugin"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a57aada8a5db8862f27cd0c4a2be33dc3 inherit pub_methods_classcbPlugin"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classcbConfigurationPanel.xhtml">cbConfigurationPanel</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcbPlugin.xhtml#a57aada8a5db8862f27cd0c4a2be33dc3">GetProjectConfigurationPanel</a> (cb_optional wxWindow *parent, cb_optional <a class="el" href="classcbProject.xhtml">cbProject</a> *project)</td></tr>
<tr class="separator:a57aada8a5db8862f27cd0c4a2be33dc3 inherit pub_methods_classcbPlugin"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3ed59bfa47d997fd6c01161f8f5c5695 inherit pub_methods_classcbPlugin"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcbPlugin.xhtml#a3ed59bfa47d997fd6c01161f8f5c5695">BuildMenu</a> (cb_optional wxMenuBar *menuBar)</td></tr>
<tr class="separator:a3ed59bfa47d997fd6c01161f8f5c5695 inherit pub_methods_classcbPlugin"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a40355dcf41514c68b1605afade4eb214 inherit pub_methods_classcbPlugin"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcbPlugin.xhtml#a40355dcf41514c68b1605afade4eb214">BuildModuleMenu</a> (cb_optional const <a class="el" href="globals_8h.xhtml#a224128d35337e2b42cebf846d4d0c6f1">ModuleType</a> type, cb_optional wxMenu *menu, cb_optional const <a class="el" href="classFileTreeData.xhtml">FileTreeData</a> *data=<a class="el" href="nullptr_8cpp.xhtml#aba64803b6b2e4821288e0488d6501a25">nullptr</a>)</td></tr>
<tr class="separator:a40355dcf41514c68b1605afade4eb214 inherit pub_methods_classcbPlugin"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7aa4cb1c33d27d89b89f6e43f4adf049 inherit pub_methods_classcbPlugin"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcbPlugin.xhtml#a7aa4cb1c33d27d89b89f6e43f4adf049">BuildToolBar</a> (cb_optional wxToolBar *toolBar)</td></tr>
<tr class="separator:a7aa4cb1c33d27d89b89f6e43f4adf049 inherit pub_methods_classcbPlugin"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abd78d0dba7cc6d6f4a115a16428f4a9d inherit pub_methods_classcbPlugin"><td class="memItemLeft" align="right" valign="top">virtual int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcbPlugin.xhtml#abd78d0dba7cc6d6f4a115a16428f4a9d">GetToolBarPriority</a> ()</td></tr>
<tr class="separator:abd78d0dba7cc6d6f4a115a16428f4a9d inherit pub_methods_classcbPlugin"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac051857bc14648f3e3e535e181e60587 inherit pub_methods_classcbPlugin"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcbPlugin.xhtml#ac051857bc14648f3e3e535e181e60587">CreateStatusField</a> (<a class="el" href="classcbStatusBar.xhtml">cbStatusBar</a> *statusBar)</td></tr>
<tr class="separator:ac051857bc14648f3e3e535e181e60587 inherit pub_methods_classcbPlugin"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a295a1b1c3ef2f77c3947ec76d3c38363 inherit pub_methods_classcbPlugin"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcbPlugin.xhtml#a295a1b1c3ef2f77c3947ec76d3c38363">IsAttached</a> () const </td></tr>
<tr class="separator:a295a1b1c3ef2f77c3947ec76d3c38363 inherit pub_methods_classcbPlugin"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adbdab814d5669423aa6b1cfe37d8620b inherit pub_methods_classcbPlugin"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcbPlugin.xhtml#adbdab814d5669423aa6b1cfe37d8620b">CanDetach</a> () const </td></tr>
<tr class="separator:adbdab814d5669423aa6b1cfe37d8620b inherit pub_methods_classcbPlugin"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-methods"></a>
Protected Member Functions</h2></td></tr>
<tr class="memitem:aedeba9fa7f6a5c356b06b8ff045062be"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcbCodeCompletionPlugin.xhtml#aedeba9fa7f6a5c356b06b8ff045062be">IsProviderFor</a> (<a class="el" href="classcbEditor.xhtml">cbEditor</a> *ed)</td></tr>
<tr class="memdesc:aedeba9fa7f6a5c356b06b8ff045062be"><td class="mdescLeft">&#160;</td><td class="mdescRight">Has this plugin been selected to provide content for the editor.  <a href="#aedeba9fa7f6a5c356b06b8ff045062be">More...</a><br /></td></tr>
<tr class="separator:aedeba9fa7f6a5c356b06b8ff045062be"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pro_methods_classcbPlugin"><td colspan="2" onclick="javascript:toggleInherit('pro_methods_classcbPlugin')"><img src="closed.png" alt="-"/>&#160;Protected Member Functions inherited from <a class="el" href="classcbPlugin.xhtml">cbPlugin</a></td></tr>
<tr class="memitem:a8e855482f08967387ed20a55f029b3ed inherit pro_methods_classcbPlugin"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcbPlugin.xhtml#a8e855482f08967387ed20a55f029b3ed">OnAttach</a> ()</td></tr>
<tr class="separator:a8e855482f08967387ed20a55f029b3ed inherit pro_methods_classcbPlugin"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8904f93e8ace65efe0795e1a546082c1 inherit pro_methods_classcbPlugin"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcbPlugin.xhtml#a8904f93e8ace65efe0795e1a546082c1">OnRelease</a> (cb_optional bool appShutDown)</td></tr>
<tr class="separator:a8904f93e8ace65efe0795e1a546082c1 inherit pro_methods_classcbPlugin"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a959daef762d9b11907eb2c8e9072a4e0 inherit pro_methods_classcbPlugin"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcbPlugin.xhtml#a959daef762d9b11907eb2c8e9072a4e0">NotImplemented</a> (const wxString &amp;log) const </td></tr>
<tr class="separator:a959daef762d9b11907eb2c8e9072a4e0 inherit pro_methods_classcbPlugin"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="inherited"></a>
Additional Inherited Members</h2></td></tr>
<tr class="inherit_header pro_attribs_classcbPlugin"><td colspan="2" onclick="javascript:toggleInherit('pro_attribs_classcbPlugin')"><img src="closed.png" alt="-"/>&#160;Protected Attributes inherited from <a class="el" href="classcbPlugin.xhtml">cbPlugin</a></td></tr>
<tr class="memitem:ad049ab124064dd4e458c9a1a0821e123 inherit pro_attribs_classcbPlugin"><td class="memItemLeft" align="right" valign="top"><a class="el" href="globals_8h.xhtml#a54e0db21fd49ff6e0178b6ebe120a6d2">PluginType</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcbPlugin.xhtml#ad049ab124064dd4e458c9a1a0821e123">m_Type</a></td></tr>
<tr class="separator:ad049ab124064dd4e458c9a1a0821e123 inherit pro_attribs_classcbPlugin"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac0c8259006d1df113c6385efaf84e387 inherit pro_attribs_classcbPlugin"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcbPlugin.xhtml#ac0c8259006d1df113c6385efaf84e387">m_IsAttached</a></td></tr>
<tr class="separator:ac0c8259006d1df113c6385efaf84e387 inherit pro_attribs_classcbPlugin"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Base class for code-completion plugins. </p>
<p>The main operations of a code-completion plugin are executed by <a class="el" href="classCCManager.xhtml">CCManager</a> at the appropriate times. Smaller CC plugins <em>should</em> not have need to register very many (if any) events/editor hooks. </p>
</div><h2 class="groupheader">Member Enumeration Documentation</h2>
<a class="anchor" id="a87282f31636d65e44c775464711a8e30"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="classcbCodeCompletionPlugin.xhtml#a87282f31636d65e44c775464711a8e30">cbCodeCompletionPlugin::CCProviderStatus</a></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Level of functionality a CC plugin is able to provide. </p>
<table class="fieldtable">
<tr><th colspan="2">Enumerator</th></tr><tr><td class="fieldname"><a class="anchor" id="a87282f31636d65e44c775464711a8e30ae903856ea743c77057e85cbada029a2a"></a>ccpsInactive&#160;</td><td class="fielddoc">
<p>CC plugin provides no functionality. </p>
</td></tr>
<tr><td class="fieldname"><a class="anchor" id="a87282f31636d65e44c775464711a8e30a8c1f949ae2e8600ff7a4eb6b21503e3e"></a>ccpsActive&#160;</td><td class="fielddoc">
<p>CC plugin provides specialized functionality. </p>
</td></tr>
<tr><td class="fieldname"><a class="anchor" id="a87282f31636d65e44c775464711a8e30a503960458fb13c69ddaf9ee42f56a124"></a>ccpsUniversal&#160;</td><td class="fielddoc">
<p>CC plugin provides generic functionality. </p>
</td></tr>
</table>

</div>
</div>
<h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="a2f9b2e0f2fc361f811cba52242f9e0e5"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">cbCodeCompletionPlugin::cbCodeCompletionPlugin </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>References <a class="el" href="classcbPlugin.xhtml#ad049ab124064dd4e458c9a1a0821e123">cbPlugin::m_Type</a>, and <a class="el" href="globals_8h.xhtml#a54e0db21fd49ff6e0178b6ebe120a6d2ac3a574bc7554a90191b8587061e43b7e">ptCodeCompletion</a>.</p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a class="anchor" id="ab0c6966851e479efef2d76c52610c657"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void cbCodeCompletionPlugin::DoAutocomplete </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structcbCodeCompletionPlugin_1_1CCToken.xhtml">CCToken</a> &amp;&#160;</td>
          <td class="paramname"><em>token</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classcbEditor.xhtml">cbEditor</a> *&#160;</td>
          <td class="paramname"><em>ed</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Callback for inserting the selected autocomplete entry into the editor. </p>
<p>The default implementation executes (wx)Scintilla's insert. Override and call <code>ed-&gt;GetControl()-&gt;AutoCompCancel()</code> for different <code>wxEVT_SCI_AUTOCOMP_SELECTION</code> behaviour.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">token</td><td>The <a class="el" href="structcbCodeCompletionPlugin_1_1CCToken.xhtml">CCToken</a> corresponding to the selected entry. </td></tr>
    <tr><td class="paramname">ed</td><td>The editor to operate in. </td></tr>
  </table>
  </dd>
</dl>

<p>Reimplemented in <a class="el" href="classCodeCompletion.xhtml#a3645d1eb4696eb059ee94aa3693929f6">CodeCompletion</a>.</p>

<p>Referenced by <a class="el" href="classcbCodeCompletionPlugin.xhtml#af739652161f1867c019c220ffc5f9af7">DoAutocomplete()</a>, and <a class="el" href="classCCManager.xhtml#a70d0c0edaa90be16e2ec9fcd44a2640f">CCManager::OnEditorHook()</a>.</p>

</div>
</div>
<a class="anchor" id="af739652161f1867c019c220ffc5f9af7"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void cbCodeCompletionPlugin::DoAutocomplete </td>
          <td>(</td>
          <td class="paramtype">const wxString &amp;&#160;</td>
          <td class="paramname"><em>token</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classcbEditor.xhtml">cbEditor</a> *&#160;</td>
          <td class="paramname"><em>ed</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Callback for inserting the selected autocomplete entry into the editor. </p>
<p>This function is only called if <a class="el" href="classCCManager.xhtml">CCManager</a> fails to retrieve the <a class="el" href="structcbCodeCompletionPlugin_1_1CCToken.xhtml">CCToken</a> associated with the selection (which should never happen). The default implementation creates a <a class="el" href="structcbCodeCompletionPlugin_1_1CCToken.xhtml">CCToken</a> and passes it to <code><a class="el" href="classcbCodeCompletionPlugin.xhtml#ab0c6966851e479efef2d76c52610c657" title="Callback for inserting the selected autocomplete entry into the editor. ">DoAutocomplete(const CCToken&amp;, cbEditor*)</a></code><br />
 Override for different behaviour.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">token</td><td>A string corresponding to the selected entry. </td></tr>
    <tr><td class="paramname">ed</td><td>The editor to operate in. </td></tr>
  </table>
  </dd>
</dl>

<p>References <a class="el" href="classcbCodeCompletionPlugin.xhtml#ab0c6966851e479efef2d76c52610c657">DoAutocomplete()</a>.</p>

</div>
</div>
<a class="anchor" id="a3739e702b860eccb5042bac842ac83d9"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual std::vector&lt;<a class="el" href="structcbCodeCompletionPlugin_1_1CCToken.xhtml">CCToken</a>&gt; cbCodeCompletionPlugin::GetAutocompList </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>isAuto</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classcbEditor.xhtml">cbEditor</a> *&#160;</td>
          <td class="paramname"><em>ed</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int &amp;&#160;</td>
          <td class="paramname"><em>tknStart</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int &amp;&#160;</td>
          <td class="paramname"><em>tknEnd</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Supply content for the autocompletion list. </p>
<p><a class="el" href="classCCManager.xhtml">CCManager</a> takes care of calling this during most relevant situations. If the autocompletion mechanism is required at a time that <a class="el" href="classCCManager.xhtml">CCManager</a> does not initiate, call </p><div class="fragment"><div class="line"><a class="code" href="classCodeBlocksEvent.xhtml">CodeBlocksEvent</a> evt(<a class="code" href="sdk__events_8h.xhtml#aa8dd95bb6d3db1bece1f845b2260f6c8">cbEVT_COMPLETE_CODE</a>);</div>
<div class="line"><a class="code" href="classManager.xhtml#acf40c9bf3465914dd64d9fdf3b3dc80a">Manager::Get</a>()-&gt;<a class="code" href="classManager.xhtml#ac087c2921db78af11b3188d1dd093406">ProcessEvent</a>(evt);</div>
</div><!-- fragment --><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir"></td><td class="paramname">isAuto</td><td>Passed as <code>true</code> if autocompletion was launched by typing an 'interesting' character such as '<code>&gt;</code>' (for '<code>-&gt;</code>'). It is the plugin's job to filter out incorrect calls of this. </td></tr>
    <tr><td class="paramdir"></td><td class="paramname">ed</td><td>The context of this codecompletion call. </td></tr>
    <tr><td class="paramdir">[in,out]</td><td class="paramname">tknStart</td><td>The assumed beginning of the token to be autocompleted. Change this variable if the plugin calculates a different starting location. </td></tr>
    <tr><td class="paramdir">[in,out]</td><td class="paramname">tknEnd</td><td>The current position/end of the known part of the token to be completed. The plugin is allowed to change this (but it is not recommended). </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Completable tokens, or empty vector to cancel autocompletion. </dd></dl>

<p>Implemented in <a class="el" href="classCodeCompletion.xhtml#a41503b2f0bbf7bb70fb39bd373446240">CodeCompletion</a>.</p>

<p>Referenced by <a class="el" href="classCCManager.xhtml#a7a65978705235474bd0ecb8fb9176923">CCManager::OnCompleteCode()</a>.</p>

</div>
</div>
<a class="anchor" id="a62144d3398090c62e5c812fb2611d2cd"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual std::vector&lt;<a class="el" href="structcbCodeCompletionPlugin_1_1CCCallTip.xhtml">CCCallTip</a>&gt; cbCodeCompletionPlugin::GetCallTips </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>pos</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>style</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classcbEditor.xhtml">cbEditor</a> *&#160;</td>
          <td class="paramname"><em>ed</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int &amp;&#160;</td>
          <td class="paramname"><em>argsPos</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Supply content for the calltip at the specified location. </p>
<p>The output parameter <code>argsPos</code> is required to be set to the same (but unique) position for each unique calltip. This position is the location corresponding to the beginning of the argument list: </p><div class="fragment"><div class="line"><span class="keywordtype">int</span> endOfWord = stc-&gt;WordEndPosition(pos, <span class="keyword">true</span>);</div>
<div class="line">                                    ^</div>
</div><!-- fragment --><p> Each returned <a class="el" href="structcbCodeCompletionPlugin_1_1CCCallTip.xhtml">CCCallTip</a> is allowed to have embedded '\n' line breaks.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir"></td><td class="paramname">pos</td><td>The location in the editor that the calltip is requested for. </td></tr>
    <tr><td class="paramdir"></td><td class="paramname">style</td><td>The scintilla style of the <a class="el" href="classcbStyledTextCtrl.xhtml">cbStyledTextCtrl</a> at the given location. (TODO: This is unusual, remove it?) </td></tr>
    <tr><td class="paramdir"></td><td class="paramname">ed</td><td>The context of this calltip request. </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">argsPos</td><td>The location in the editor of the beginning of the argument list. <em>Required</em>. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Each entry in this vector is guaranteed either a new line or a separate page in the calltip. <a class="el" href="classCCManager.xhtml">CCManager</a> will decide if lines should be further split (for formatting to fit the monitor). </dd></dl>

<p>Implemented in <a class="el" href="classCodeCompletion.xhtml#a545602ade097b198265727213f909226">CodeCompletion</a>.</p>

<p>Referenced by <a class="el" href="classCCManager.xhtml#a6ceb05acd672045f40df02a684259d72">CCManager::OnEditorTooltip()</a>, and <a class="el" href="classCCManager.xhtml#ab9ec7ff4b2c6f06518312353e049399d">CCManager::OnShowCallTip()</a>.</p>

</div>
</div>
<a class="anchor" id="ac65b6191cd81ff9e34d00055cfcdc490"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual wxString cbCodeCompletionPlugin::GetDocumentation </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structcbCodeCompletionPlugin_1_1CCToken.xhtml">CCToken</a> &amp;&#160;</td>
          <td class="paramname"><em>token</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Supply html formatted documentation for the passed token. </p>
<p>Refer to <a href="http://docs.wxwidgets.org/stable/overview_html.html#overview_html_supptags">http://docs.wxwidgets.org/stable/overview_html.html#overview_html_supptags</a> for the available formatting. When selecting colours, prefer use of the ones <a class="el" href="classCCManager.xhtml">CCManager</a> has registered with <a class="el" href="classColourManager.xhtml">ColourManager</a>, which are (TODO: register colours). Returning an empty string will cancel the documentation popup.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">token</td><td>The token to document. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Either an html document or an empty string (if no documentation available). </dd></dl>

<p>Implemented in <a class="el" href="classCodeCompletion.xhtml#aa1dc259402128e3d1c5d38d727f71ccb">CodeCompletion</a>.</p>

<p>Referenced by <a class="el" href="classCCManager.xhtml#a31c86c019202ac23b88e35ef8b7288f4">CCManager::DoShowDocumentation()</a>.</p>

</div>
</div>
<a class="anchor" id="aaed51dcf7a2df2436225f4f9456f5f0a"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="classcbCodeCompletionPlugin.xhtml#a87282f31636d65e44c775464711a8e30">CCProviderStatus</a> cbCodeCompletionPlugin::GetProviderStatusFor </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classcbEditor.xhtml">cbEditor</a> *&#160;</td>
          <td class="paramname"><em>ed</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Does this plugin handle code completion for the editor <code>ed</code>? </p>
<p>The plugin should check the lexer, the <code>HighlightLanguage</code>, the file extension, or some combination of these. Do <em>not</em> call <code><a class="el" href="classCCManager.xhtml#a4780c06843f22f972340b71e926f134f">CCManager::GetProviderFor()</a></code> from this function.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">ed</td><td>The editor being checked. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The level of functionality this plugin is able to supply. </dd></dl>

<p>Implemented in <a class="el" href="classCodeCompletion.xhtml#ae5b502b99c1c116f009c15a57474826b">CodeCompletion</a>.</p>

</div>
</div>
<a class="anchor" id="ab41a10629def590d7029e126f62d01c4"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual std::vector&lt;<a class="el" href="structcbCodeCompletionPlugin_1_1CCToken.xhtml">CCToken</a>&gt; cbCodeCompletionPlugin::GetTokenAt </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>pos</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classcbEditor.xhtml">cbEditor</a> *&#160;</td>
          <td class="paramname"><em>ed</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool &amp;&#160;</td>
          <td class="paramname"><em>allowCallTip</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Supply the definition of the token at the specified location. </p>
<p>The token(s) returned by this function are used to display tooltips.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir"></td><td class="paramname">pos</td><td>The location being queried. </td></tr>
    <tr><td class="paramdir"></td><td class="paramname">ed</td><td>The context of the request. </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">allowCallTip</td><td>Allow <a class="el" href="classCCManager.xhtml">CCManager</a> to consider displaying a calltip if the results from this function are unsuitable/empty. True by default. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>A list of the token(s) that match the specified location, an empty vector if none. </dd></dl>

<p>Implemented in <a class="el" href="classCodeCompletion.xhtml#ac0078946b54d3cf30e529889fec6f944">CodeCompletion</a>.</p>

<p>Referenced by <a class="el" href="classCCManager.xhtml#a6ceb05acd672045f40df02a684259d72">CCManager::OnEditorTooltip()</a>.</p>

</div>
</div>
<a class="anchor" id="aedeba9fa7f6a5c356b06b8ff045062be"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool cbCodeCompletionPlugin::IsProviderFor </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classcbEditor.xhtml">cbEditor</a> *&#160;</td>
          <td class="paramname"><em>ed</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Has this plugin been selected to provide content for the editor. </p>
<p>Convenience function; asks <a class="el" href="classCCManager.xhtml">CCManager</a> if this plugin is granted jurisdiction over the editor.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">ed</td><td>The editor to check. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Is provider for the editor. </dd></dl>

<p>References <a class="el" href="classManager.xhtml#acf40c9bf3465914dd64d9fdf3b3dc80a">Manager::Get()</a>.</p>

<p>Referenced by <a class="el" href="classCodeCompletion.xhtml#a169f3a1f0d12859f1bb74c846e062b09">CodeCompletion::BuildModuleMenu()</a>, and <a class="el" href="classCodeCompletion.xhtml#a1847c30d00469f2ea08d0dafe2be20fb">CodeCompletion::EditorEventHook()</a>.</p>

</div>
</div>
<a class="anchor" id="a7295ada27f6538cc47b4bce965ac6b92"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual wxString cbCodeCompletionPlugin::OnDocumentationLink </td>
          <td>(</td>
          <td class="paramtype">wxHtmlLinkEvent &amp;&#160;</td>
          <td class="paramname"><em>event</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool &amp;&#160;</td>
          <td class="paramname"><em>dismissPopup</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Callback to handle a click on a link in the documentation popup. </p>
<p>Handle a link command by, for example, showing the definition of a member function, or opening an editor to the location of the declaration.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir"></td><td class="paramname">event</td><td>The generated event (it is the plugin's responsibility to Skip(), if desired). </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">dismissPopup</td><td>If set to true, the popup will be hidden. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>If non-empty, the popup's content will be set to this html formatted string. </dd></dl>

<p>Implemented in <a class="el" href="classCodeCompletion.xhtml#a6981ec8517916d83ba12295386413bc0">CodeCompletion</a>.</p>

<p>Referenced by <a class="el" href="classCCManager.xhtml#a6457f49d22711d027cee2c7aa35b2b03">CCManager::OnHtmlLink()</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li><a class="el" href="cbplugin_8h_source.xhtml">cbplugin.h</a></li>
<li><a class="el" href="cbplugin_8cpp.xhtml">cbplugin.cpp</a></li>
</ul>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.9.1
</small></address>
</body>
</html>
