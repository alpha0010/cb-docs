<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.9.1"/>
<title>Code::Blocks: prefix.cpp File Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">Code::Blocks
   &#160;<span id="projectnumber">SVN r10314</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.9.1 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li class="current"><a href="files.xhtml"><span>Files</span></a></li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.xhtml"><span>File&#160;List</span></a></li>
      <li><a href="globals.xhtml"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#define-members">Macros</a> &#124;
<a href="#func-members">Functions</a> &#124;
<a href="#var-members">Variables</a>  </div>
  <div class="headertitle">
<div class="title">prefix.cpp File Reference</div>  </div>
</div><!--header-->
<div class="contents">
<div class="textblock"><code>#include &lt;stdlib.h&gt;</code><br />
<code>#include &lt;stdio.h&gt;</code><br />
<code>#include &lt;limits.h&gt;</code><br />
<code>#include &lt;string.h&gt;</code><br />
<code>#include &quot;<a class="el" href="prefix_8h_source.xhtml">prefix.h</a>&quot;</code><br />
<code>#include &lt;pthread.h&gt;</code><br />
</div><div class="textblock"><div class="dynheader">
Include dependency graph for prefix.cpp:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="prefix_8cpp__incl.svg" width="518" height="112"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
</div><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="define-members"></a>
Macros</h2></td></tr>
<tr class="memitem:a41f4108885131c7aabd4aa164c8a1dc9"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="prefix_8cpp.xhtml#a41f4108885131c7aabd4aa164c8a1dc9">_PREFIX_C_</a></td></tr>
<tr class="separator:a41f4108885131c7aabd4aa164c8a1dc9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaf438829cb1b1d5be6d04e16ab1950e3"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="prefix_8cpp.xhtml#aaf438829cb1b1d5be6d04e16ab1950e3">BR_PTHREADS</a>&#160;&#160;&#160;1</td></tr>
<tr class="separator:aaf438829cb1b1d5be6d04e16ab1950e3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a070d2ce7b6bb7e5c05602aa8c308d0c4"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="prefix_8cpp.xhtml#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>&#160;&#160;&#160;((void *) 0)</td></tr>
<tr class="separator:a070d2ce7b6bb7e5c05602aa8c308d0c4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a99089dcf80025999f303a94a70148ae2"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="prefix_8cpp.xhtml#a99089dcf80025999f303a94a70148ae2">br_return_val_if_fail</a>(expr,  val)&#160;&#160;&#160;if (!(expr)) return val</td></tr>
<tr class="separator:a99089dcf80025999f303a94a70148ae2"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:a1efcb13d787b23b1c56f6e8c4fddee42"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="prefix_8cpp.xhtml#a1efcb13d787b23b1c56f6e8c4fddee42">br_thread_local_store_fini</a> ()</td></tr>
<tr class="separator:a1efcb13d787b23b1c56f6e8c4fddee42"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7694017ea42575725112438f0e8815b3"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="prefix_8cpp.xhtml#a7694017ea42575725112438f0e8815b3">br_str_free</a> (void *str)</td></tr>
<tr class="separator:a7694017ea42575725112438f0e8815b3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af121b1b3bc70e869059a10407b76738f"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="prefix_8cpp.xhtml#af121b1b3bc70e869059a10407b76738f">br_thread_local_store_init</a> ()</td></tr>
<tr class="separator:af121b1b3bc70e869059a10407b76738f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad7c34ca8988ee7d9958686d19e71a7ef"><td class="memItemLeft" align="right" valign="top">const char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="prefix_8cpp.xhtml#ad7c34ca8988ee7d9958686d19e71a7ef">br_thread_local_store</a> (char *str)</td></tr>
<tr class="separator:ad7c34ca8988ee7d9958686d19e71a7ef"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0e2feafbf640e9023012f668a417d83d"><td class="memItemLeft" align="right" valign="top">char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="prefix_8cpp.xhtml#a0e2feafbf640e9023012f668a417d83d">br_strcat</a> (const char *str1, const char *str2)</td></tr>
<tr class="separator:a0e2feafbf640e9023012f668a417d83d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a58871130b7a920d5cfc10e273e03cd16"><td class="memItemLeft" align="right" valign="top">static char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="prefix_8cpp.xhtml#a58871130b7a920d5cfc10e273e03cd16">br_strndup</a> (char *str, size_t size)</td></tr>
<tr class="separator:a58871130b7a920d5cfc10e273e03cd16"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a505d970cffa8aa32a9a71e3dc4d18ab4"><td class="memItemLeft" align="right" valign="top">char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="prefix_8cpp.xhtml#a505d970cffa8aa32a9a71e3dc4d18ab4">br_extract_dir</a> (const char *path)</td></tr>
<tr class="separator:a505d970cffa8aa32a9a71e3dc4d18ab4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a188c9c0ad384fb5272c8eea42fdd9e12"><td class="memItemLeft" align="right" valign="top">char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="prefix_8cpp.xhtml#a188c9c0ad384fb5272c8eea42fdd9e12">br_extract_prefix</a> (const char *path)</td></tr>
<tr class="separator:a188c9c0ad384fb5272c8eea42fdd9e12"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="var-members"></a>
Variables</h2></td></tr>
<tr class="memitem:a752595c0bdf7ec6b3a6806a2b989004f"><td class="memItemLeft" align="right" valign="top">static pthread_key_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="prefix_8cpp.xhtml#a752595c0bdf7ec6b3a6806a2b989004f">br_thread_key</a></td></tr>
<tr class="separator:a752595c0bdf7ec6b3a6806a2b989004f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab85e940d584042f245fd41af73b82c0d"><td class="memItemLeft" align="right" valign="top">static pthread_once_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="prefix_8cpp.xhtml#ab85e940d584042f245fd41af73b82c0d">br_thread_key_once</a> = PTHREAD_ONCE_INIT</td></tr>
<tr class="separator:ab85e940d584042f245fd41af73b82c0d"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Macro Definition Documentation</h2>
<a class="anchor" id="a41f4108885131c7aabd4aa164c8a1dc9"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define _PREFIX_C_</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="aaf438829cb1b1d5be6d04e16ab1950e3"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define BR_PTHREADS&#160;&#160;&#160;1</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a99089dcf80025999f303a94a70148ae2"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define br_return_val_if_fail</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">expr, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">val&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td>&#160;&#160;&#160;if (!(expr)) return val</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Referenced by <a class="el" href="prefix_8h.xhtml#a505d970cffa8aa32a9a71e3dc4d18ab4">br_extract_dir()</a>, <a class="el" href="prefix_8h.xhtml#a188c9c0ad384fb5272c8eea42fdd9e12">br_extract_prefix()</a>, and <a class="el" href="prefix_8cpp.xhtml#a58871130b7a920d5cfc10e273e03cd16">br_strndup()</a>.</p>

</div>
</div>
<a class="anchor" id="a070d2ce7b6bb7e5c05602aa8c308d0c4"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define NULL&#160;&#160;&#160;((void *) 0)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Referenced by <a class="el" href="sqstdstring_8cpp.xhtml#aa18d43e00f54e3cb1f0cb77918111f85">_string_format()</a>, <a class="el" href="sqstdstring_8cpp.xhtml#a85ba57c7499156570d1fbfcc07f69d4c">_string_split()</a>, <a class="el" href="classcbStatusBar.xhtml#a89024c4fd2d1eeefbf04bf7fcaf58b15">cbStatusBar::AddField()</a>, <a class="el" href="classNativeParser.xhtml#a088968f121d7de28b0f5dab821dd80da">NativeParser::AddProjectDefinedMacros()</a>, <a class="el" href="sqbaselib_8cpp.xhtml#a8547c5fea72ae5e0b06acd5ebd7dd734">base_compilestring()</a>, <a class="el" href="sqbaselib_8cpp.xhtml#aa10c72ac9b1f81b30a57ccf27ea9e272">base_getstackinfos()</a>, <a class="el" href="prefix_8cpp.xhtml#a1efcb13d787b23b1c56f6e8c4fddee42">br_thread_local_store_fini()</a>, <a class="el" href="classCompilerGCC.xhtml#a0526f9762cba30afcca6dda22776d4c3">CompilerGCC::BuildMenu()</a>, <a class="el" href="classwxDialogHelper.xhtml#afcbfdf25687253f82f3d709363b31158">wxDialogHelper::CanDoLayoutAdaptation()</a>, <a class="el" href="structSQFile.xhtml#a57d9fcbb863b97cbe159608be8a3727e">SQFile::Close()</a>, <a class="el" href="classSQCompiler.xhtml#a77a8db2b1019cdebc75b19af93d0882e">SQCompiler::Compile()</a>, <a class="el" href="crashhandler_8cpp.xhtml#a64fc8a65a58b38beb5e707b5f5e82e76">CrashHandlerSaveEditorFiles()</a>, <a class="el" href="SquirrelBindingsUtils_8cpp.xhtml#a6ee4056b252f90cfb37f5de09e13bfd2">CreateClass()</a>, <a class="el" href="sqstate_8cpp.xhtml#a251024b8c687f358c0a9d46ec2be40c5">CreateDefaultDelegate()</a>, <a class="el" href="SquirrelBindingsUtils_8cpp.xhtml#aa3c46a1146d452ca1586155f55ca0b03">CreateStaticNamespace()</a>, <a class="el" href="classGDB__driver.xhtml#a42fffb66567956d2ce4662c45aeb37aa">GDB_driver::DetectCygwinMount()</a>, <a class="el" href="classDebuggerGDB.xhtml#a811c350b971fe99ef0519416c8b965c8">DebuggerGDB::DoBreak()</a>, <a class="el" href="namespaceAssociations.xhtml#aed276d5d5c28370c8d0e7b059689eb1d">Associations::DoClearAssociation()</a>, <a class="el" href="classwxToolBarAddOnXmlHandler.xhtml#a9be0d2b3f2d128981f37ac81b1a2be47">wxToolBarAddOnXmlHandler::DoCreateResource()</a>, <a class="el" href="classwxStandardDialogLayoutAdapter.xhtml#a567ae13828b5dc8bcafd1efe290bd1b5">wxStandardDialogLayoutAdapter::DoLayoutAdaptation()</a>, <a class="el" href="classUnfocusablePopupWindow.xhtml#a27651fa2ce4bf604bdaf467a76f3d653">UnfocusablePopupWindow::DoSetSize()</a>, <a class="el" href="classSystemHeadersThread.xhtml#a8be795f97badd3e8f6489a02e87a1f79">SystemHeadersThread::Entry()</a>, <a class="el" href="classwxStandardDialogLayoutAdapter.xhtml#afcbd871b7ec5476105a06e23ed377ef5">wxStandardDialogLayoutAdapter::FindButtonSizer()</a>, <a class="el" href="namespacewxCrc32.xhtml#a85c202bfa493914fb4d298001cb893e5">wxCrc32::FromString()</a>, <a class="el" href="classwxDialogHelper.xhtml#afe3d5bfad710fb548ee890e536b0943f">wxDialogHelper::GetContentWindow()</a>, <a class="el" href="classDebuggerManager.xhtml#a355ec78443eff4125d276d19a3ebd11c">DebuggerManager::GetDebuggerHavingWatch()</a>, <a class="el" href="classDebuggerState.xhtml#aae859b38908f01b5a71c23d60d5abecd">DebuggerState::GetDriver()</a>, <a class="el" href="classMainFrame.xhtml#a41f2f39d8ea85d732af96d5e03e2f121">MainFrame::GetEditorDescription()</a>, <a class="el" href="classProjectBuildTarget.xhtml#ad6abbd73ec4a79f5dced77a44d2cfb69">ProjectBuildTarget::GetFile()</a>, <a class="el" href="classcbProject.xhtml#afb275b19599c695696714fe88b310362">cbProject::GetFile()</a>, <a class="el" href="classInfoPane.xhtml#a6df6cdce7a87fcad984a30e44c3bb842">InfoPane::GetLogger()</a>, <a class="el" href="classDebuggerManager.xhtml#a696eefa74e959a37ee2b4e4fc9d90dbd">DebuggerManager::GetMenu()</a>, <a class="el" href="classBasicSearchTree.xhtml#ab04e9bd41aff3c0dd0e20a319937d050">BasicSearchTree::GetNode()</a>, <a class="el" href="classEditorManager.xhtml#a47fa75740d06cc7a8871876e6ae0c68a">EditorManager::GetNotebookStack()</a>, <a class="el" href="classSearchTreeNode.xhtml#aca16c36919815311fb5770c3d0aa93f3">SearchTreeNode::GetParent()</a>, <a class="el" href="classNativeParser.xhtml#aa6f3ec76b092116eb75c7d9e2bf700c5">NativeParser::GetProjectByParser()</a>, <a class="el" href="classConfigManager.xhtml#ac704d2983dae8a310bcd26e1cfd0e35e">ConfigManager::GetUserDataFolder()</a>, <a class="el" href="classInfoPane.xhtml#ac7f7d108ca286969c81d9d1807c64fa4">InfoPane::GetWindow()</a>, <a class="el" href="classParserThread.xhtml#a11bacf859a9b5a1a02c161331b0278f4">ParserThread::HandleNamespace()</a>, <a class="el" href="classDebuggerState.xhtml#a48312c1e1b25b1e151181fef09ac5d62">DebuggerState::HasDriver()</a>, <a class="el" href="sqobject_8cpp.xhtml#a78ef28cbbb04549f60f588184eca335c">IdType2Name()</a>, <a class="el" href="classwxSwitcherItem.xhtml#aac920567cf089810e6435c0e728df0e9">wxSwitcherItem::Init()</a>, <a class="el" href="classwxSwitcherDialog.xhtml#a69b6f9de0b00d73ca60d4ecdb095fb4c">wxSwitcherDialog::Init()</a>, <a class="el" href="classConfigManager.xhtml#a97462de25821d312f467ca835def9e80">ConfigManager::InitPaths()</a>, <a class="el" href="classEditorManager.xhtml#a88ba15ee31690e944d1d435620b6d28c">EditorManager::IsOpen()</a>, <a class="el" href="classCompilerGCC.xhtml#a8274a8163a73849a014634e80be2d3bd">CompilerGCC::KillProcess()</a>, <a class="el" href="debuggergdb__test__main_8cpp.xhtml#ae66f6b31b5ad750f1fe042a706a4e3d4">main()</a>, <a class="el" href="classConfigManager.xhtml#a69e8e367a32762be7e64f244433a2734">ConfigManager::MigrateFolders()</a>, <a class="el" href="classTemplateManager.xhtml#a9a0db66e32879fad67db5deaeedfbaf1">TemplateManager::New()</a>, <a class="el" href="classTemplateManager.xhtml#a71e293045daaeac51f79f2f554ffce84">TemplateManager::NewFromTemplate()</a>, <a class="el" href="classTemplateManager.xhtml#a8639e9f00aff1a44d1a066dadf6064df">TemplateManager::NewProjectFromUserTemplate()</a>, <a class="el" href="classCompilerGCC.xhtml#af7b1574a00524fb8a1103b9e5e77f2de">CompilerGCC::NotifyJobDone()</a>, <a class="el" href="classCompilerGCC.xhtml#a81fec58815042449778c18e9a48c63ea">CompilerGCC::OnConfig()</a>, <a class="el" href="classMainFrame.xhtml#ab9c0307f55464c5fe3a7be464bd27183">MainFrame::OnEditMenuUpdateUI()</a>, <a class="el" href="classNativeParser.xhtml#a6015f6263678e9f11fb9ab8ca14d13a2">NativeParser::OnEditorActivated()</a>, <a class="el" href="classNativeParser.xhtml#a49a62e9804e1416506db28f0cc78ec53">NativeParser::OnEditorClosed()</a>, <a class="el" href="classwxDialogLayoutAdapterModule.xhtml#aab0a194b626dcd6044cf1500cc86db2d">wxDialogLayoutAdapterModule::OnExit()</a>, <a class="el" href="classCodeCompletion.xhtml#a54c8675c8871e91c7ef4d26debd0ded0">CodeCompletion::OnGotoDeclaration()</a>, <a class="el" href="classDebuggerGDB.xhtml#a28dd0ed73fd6aecaf07b14e7204aa533">DebuggerGDB::OnMenuWatchDereference()</a>, <a class="el" href="classCodeCompletion.xhtml#a5cb20dfc6596d2c3fc7eae556c08680d">CodeCompletion::OnProjectSavedTimer()</a>, <a class="el" href="classMainFrame.xhtml#ad458a009b1cce95e0cfc9179b115fcd4">MainFrame::OnSwitchTabs()</a>, <a class="el" href="classMainFrame.xhtml#a26ce35e2db2501f6722586ae924298c2">MainFrame::OnToggleStartPage()</a>, <a class="el" href="classDebuggerMenuHandler.xhtml#a051c090a50ca81b4fa04e884b9b28374">DebuggerMenuHandler::OnUpdateUI()</a>, <a class="el" href="classDebuggerToolbarHandler.xhtml#af01b57227bc97a800438d799e51ae08e">DebuggerToolbarHandler::OnUpdateUI()</a>, <a class="el" href="classMainFrame.xhtml#a4025e91aceb55932b89f7801e52eacf8">MainFrame::OnViewMenuUpdateUI()</a>, <a class="el" href="parsewatchvalue_8h.xhtml#a092ffc1bdf2aa19f1c1a8eda157aee1e">ParseCDBWatchValue()</a>, <a class="el" href="classNativeParser.xhtml#a4a8a205cec95ccd80ab11a2194de6aa2">NativeParser::RemoveClassBrowser()</a>, <a class="el" href="classFindReplace.xhtml#aa72b4ade1d0e234c7cf4763b12842e20">FindReplace::ReplaceInFiles()</a>, <a class="el" href="classDebuggerGDB.xhtml#a84800ddb6fd594bdbc546ef3880cec60">DebuggerGDB::ResetProject()</a>, <a class="el" href="classWiz.xhtml#ae93af7feb452bb91db36744a03f9a72f">Wiz::RunProjectWizard()</a>, <a class="el" href="sqapi_8cpp.xhtml#a4243d4b670ac5e2beed34c76c03c548d">sq_createinstance()</a>, <a class="el" href="sqapi_8cpp.xhtml#af8bfea10d6163ea947c695ac4dff6f0a">sq_getattributes()</a>, <a class="el" href="sqapi_8cpp.xhtml#a0b353ac85ca080338fe67069bbf9e2ce">sq_getbase()</a>, <a class="el" href="sqapi_8cpp.xhtml#a0749e706f61f2746ada42a9473cb902a">sq_getclass()</a>, <a class="el" href="sqapi_8cpp.xhtml#a0a041e61a57fc98c44270510e409677b">sq_getfreevariable()</a>, <a class="el" href="sqapi_8cpp.xhtml#ade8bec2e5e558d5e7b8a771ba5141d7f">sq_getinstanceup()</a>, <a class="el" href="sqapi_8cpp.xhtml#a11f431c3bdbeeab059b8614fef318c8c">sq_getlocal()</a>, <a class="el" href="sqapi_8cpp.xhtml#a9d7290d97028e4d95065fe8b41de83e6">sq_getstring()</a>, <a class="el" href="sqapi_8cpp.xhtml#a71ca34adea1a97e7e9c3c2f6cc0f6cc1">sq_getthread()</a>, <a class="el" href="sqapi_8cpp.xhtml#af1a8af99c45ea7e1fc93727e121d9446">sq_getuserdata()</a>, <a class="el" href="sqapi_8cpp.xhtml#af21e809c97ed16c170fd038052840c06">sq_getuserpointer()</a>, <a class="el" href="sqapi_8cpp.xhtml#a4608ab1d8c7bad624ec8ebd9edfe2240">sq_newclass()</a>, <a class="el" href="sqapi_8cpp.xhtml#aca95873be4112a953f27d5e30e850580">sq_newthread()</a>, <a class="el" href="sqapi_8cpp.xhtml#ab42ffa5e299d1b4992825585cfb9f987">sq_objtostring()</a>, <a class="el" href="sqapi_8cpp.xhtml#a300fe1d3e75e2eec585c03d07020367f">sq_open()</a>, <a class="el" href="sqapi_8cpp.xhtml#a462ba48f0c422926120cf2372aec07ab">sq_resetobject()</a>, <a class="el" href="sqapi_8cpp.xhtml#ae2d7456fcc4ac8fec96ba9e037ba7ea2">sq_setattributes()</a>, <a class="el" href="sqapi_8cpp.xhtml#adfd43ecffc7bba7fa00b1f3aa01c8446">sq_setdelegate()</a>, <a class="el" href="sqapi_8cpp.xhtml#af99ae6b21dc59b0649fbf05cab04aa6d">sq_writeclosure()</a>, <a class="el" href="classSQCompiler.xhtml#a70b5da16126b868ed56de4dacc541c6e">SQCompiler::SQCompiler()</a>, <a class="el" href="structSQFile.xhtml#a3e81ae9731056c83c0edf50e7c32ae3b">SQFile::SQFile()</a>, <a class="el" href="sqstdblob_8cpp.xhtml#a16f7cad8b4a8c288591b6b89d520d27a">sqstd_createblob()</a>, <a class="el" href="sqstdio_8cpp.xhtml#a1de6c945ceeef23b271c446565897fda">sqstd_getfile()</a>, <a class="el" href="sqstdrex_8cpp.xhtml#aaeb00169d811f205aa5c149553078965">sqstd_rex_compile()</a>, <a class="el" href="sqstdrex_8cpp.xhtml#a5fee521b1c4bb1d2cafe57865f1e7acb">sqstd_rex_match()</a>, <a class="el" href="sqstdrex_8cpp.xhtml#aec349a3e1e83f19d6a143e0f8c8a7d25">sqstd_rex_matchnode()</a>, <a class="el" href="sqstdrex_8cpp.xhtml#ab853f0842416671ca9a6561bdbbc7822">sqstd_rex_searchrange()</a>, <a class="el" href="classSearchTree.xhtml#ab921b0bedde98c6fda1ba4bedeba29e1">SearchTree&lt; wxString &gt;::UnserializeItem()</a>, <a class="el" href="classCodeCompletion.xhtml#ae8167455101c9ff7b7ab2fb2ed87a19a">CodeCompletion::UpdateToolBar()</a>, <a class="el" href="classwxScintilla.xhtml#a4a197715adda8b3e4f56bb05130c09b0">wxScintilla::wxScintilla()</a>, and <a class="el" href="classClassBrowser.xhtml#ab427e24955159e2cfbd9e073e4407db1">ClassBrowser::~ClassBrowser()</a>.</p>

</div>
</div>
<h2 class="groupheader">Function Documentation</h2>
<a class="anchor" id="a505d970cffa8aa32a9a71e3dc4d18ab4"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">char* br_extract_dir </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>path</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>br_extract_dir: path: A path. Returns: A directory name. This string should be freed when no longer needed.</p>
<p>Extracts the directory component of path. Similar to g_dirname() or the dirname commandline application.</p>
<p>Example: br_extract_dir ("/usr/local/foobar"); &ndash;&gt; Returns: "/usr/local" </p>

<p>References <a class="el" href="prefix_8cpp.xhtml#a99089dcf80025999f303a94a70148ae2">br_return_val_if_fail</a>, and <a class="el" href="prefix_8cpp.xhtml#a58871130b7a920d5cfc10e273e03cd16">br_strndup()</a>.</p>

</div>
</div>
<a class="anchor" id="a188c9c0ad384fb5272c8eea42fdd9e12"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">char* br_extract_prefix </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>path</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>br_extract_prefix: path: The full path of an executable or library. Returns: The prefix, or NULL on error. This string should be freed when no longer needed.</p>
<p>Extracts the prefix from path. This function assumes that your executable or library is installed in an LSB-compatible directory structure.</p>
<p>Example: br_extract_prefix ("/usr/bin/gnome-panel"); &ndash;&gt; Returns "/usr" br_extract_prefix ("/usr/local/lib/libfoo.so"); &ndash;&gt; Returns "/usr/local" br_extract_prefix ("/usr/local/libfoo.so"); &ndash;&gt; Returns "/usr" </p>

<p>References <a class="el" href="prefix_8cpp.xhtml#a99089dcf80025999f303a94a70148ae2">br_return_val_if_fail</a>, and <a class="el" href="prefix_8cpp.xhtml#a58871130b7a920d5cfc10e273e03cd16">br_strndup()</a>.</p>

</div>
</div>
<a class="anchor" id="a7694017ea42575725112438f0e8815b3"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static void br_str_free </td>
          <td>(</td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>str</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Referenced by <a class="el" href="prefix_8cpp.xhtml#ad7c34ca8988ee7d9958686d19e71a7ef">br_thread_local_store()</a>, and <a class="el" href="prefix_8cpp.xhtml#af121b1b3bc70e869059a10407b76738f">br_thread_local_store_init()</a>.</p>

</div>
</div>
<a class="anchor" id="a0e2feafbf640e9023012f668a417d83d"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">char* br_strcat </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>str1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>str2</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>br_strcat: str1: A string. str2: Another string. Returns: A newly-allocated string. This string should be freed when no longer needed.</p>
<p>Concatenate str1 and str2 to a newly allocated string. </p>

</div>
</div>
<a class="anchor" id="a58871130b7a920d5cfc10e273e03cd16"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static char* br_strndup </td>
          <td>(</td>
          <td class="paramtype">char *&#160;</td>
          <td class="paramname"><em>str</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">size_t&#160;</td>
          <td class="paramname"><em>size</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>References <a class="el" href="prefix_8cpp.xhtml#a99089dcf80025999f303a94a70148ae2">br_return_val_if_fail</a>.</p>

<p>Referenced by <a class="el" href="prefix_8h.xhtml#a505d970cffa8aa32a9a71e3dc4d18ab4">br_extract_dir()</a>, and <a class="el" href="prefix_8h.xhtml#a188c9c0ad384fb5272c8eea42fdd9e12">br_extract_prefix()</a>.</p>

</div>
</div>
<a class="anchor" id="ad7c34ca8988ee7d9958686d19e71a7ef"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const char* br_thread_local_store </td>
          <td>(</td>
          <td class="paramtype">char *&#160;</td>
          <td class="paramname"><em>str</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>br_thread_local_store: str: A dynamically allocated string. Returns: str. This return value must not be freed.</p>
<p>Store str in a thread-local variable and return str. The next you run this function, that variable is freed too. This function is created so you don't have to worry about freeing strings.</p>
<p>Example: char *foo; foo = thread_local_store (strdup ("hello")); &ndash;&gt; foo == "hello" foo = thread_local_store (strdup ("world")); &ndash;&gt; foo == "world"; "hello" is now freed. </p>

<p>References <a class="el" href="prefix_8cpp.xhtml#a7694017ea42575725112438f0e8815b3">br_str_free()</a>, and <a class="el" href="prefix_8cpp.xhtml#af121b1b3bc70e869059a10407b76738f">br_thread_local_store_init()</a>.</p>

</div>
</div>
<a class="anchor" id="a1efcb13d787b23b1c56f6e8c4fddee42"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static void br_thread_local_store_fini </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>References <a class="el" href="prefix_8cpp.xhtml#a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</a>.</p>

<p>Referenced by <a class="el" href="prefix_8cpp.xhtml#af121b1b3bc70e869059a10407b76738f">br_thread_local_store_init()</a>.</p>

</div>
</div>
<a class="anchor" id="af121b1b3bc70e869059a10407b76738f"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static void br_thread_local_store_init </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>References <a class="el" href="prefix_8cpp.xhtml#a7694017ea42575725112438f0e8815b3">br_str_free()</a>, and <a class="el" href="prefix_8cpp.xhtml#a1efcb13d787b23b1c56f6e8c4fddee42">br_thread_local_store_fini()</a>.</p>

<p>Referenced by <a class="el" href="prefix_8cpp.xhtml#ad7c34ca8988ee7d9958686d19e71a7ef">br_thread_local_store()</a>.</p>

</div>
</div>
<h2 class="groupheader">Variable Documentation</h2>
<a class="anchor" id="a752595c0bdf7ec6b3a6806a2b989004f"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">pthread_key_t br_thread_key</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="ab85e940d584042f245fd41af73b82c0d"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">pthread_once_t br_thread_key_once = PTHREAD_ONCE_INIT</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.9.1
</small></address>
</body>
</html>
