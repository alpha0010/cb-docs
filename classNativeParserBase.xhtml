<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.8"/>
<title>Code::Blocks: NativeParserBase Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">Code::Blocks
   &#160;<span id="projectnumber">SVN r10078</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.8 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li><a href="files.xhtml"><span>Files</span></a></li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.xhtml"><span>Class&#160;List</span></a></li>
      <li><a href="classes.xhtml"><span>Class&#160;Index</span></a></li>
      <li><a href="inherits.xhtml"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.xhtml"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#nested-classes">Classes</a> &#124;
<a href="#pub-types">Public Types</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pro-methods">Protected Member Functions</a> &#124;
<a href="#pro-static-methods">Static Protected Member Functions</a> &#124;
<a href="#pri-methods">Private Member Functions</a> &#124;
<a href="#pri-attribs">Private Attributes</a> &#124;
<a href="classNativeParserBase-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">NativeParserBase Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;<a class="el" href="nativeparser__base_8h_source.xhtml">nativeparser_base.h</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for NativeParserBase:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="classNativeParserBase__inherit__graph.svg" width="235" height="1152"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Collaboration diagram for NativeParserBase:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="classNativeParserBase__coll__graph.svg" width="346" height="698"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"></a>
Classes</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structNativeParserBase_1_1ParserComponent.xhtml">ParserComponent</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">a long statement can be divided to a <a class="el" href="structNativeParserBase_1_1ParserComponent.xhtml" title="a long statement can be divided to a ParserComponent chain. ">ParserComponent</a> chain.  <a href="structNativeParserBase_1_1ParserComponent.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-types"></a>
Public Types</h2></td></tr>
<tr class="memitem:a12aae162661ce9aa643d40552d38b155"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classNativeParserBase.xhtml#a12aae162661ce9aa643d40552d38b155">ParserTokenType</a> { <br />
&#160;&#160;<a class="el" href="classNativeParserBase.xhtml#a12aae162661ce9aa643d40552d38b155a1d846f7a84d0eec5dc760e406e20efa3">pttUndefined</a> = 0, 
<a class="el" href="classNativeParserBase.xhtml#a12aae162661ce9aa643d40552d38b155a3a570ba6912abaae180ec08aacc6d6cc">pttSearchText</a>, 
<a class="el" href="classNativeParserBase.xhtml#a12aae162661ce9aa643d40552d38b155a8a13933956c950d133e3feb897e058d0">pttClass</a>, 
<a class="el" href="classNativeParserBase.xhtml#a12aae162661ce9aa643d40552d38b155ae4697edb3786b3cc445eb37c00ef89b3">pttNamespace</a>, 
<br />
&#160;&#160;<a class="el" href="classNativeParserBase.xhtml#a12aae162661ce9aa643d40552d38b155ade77216b9ec7507ba754fd14605516e5">pttFunction</a>
<br />
 }</td></tr>
<tr class="separator:a12aae162661ce9aa643d40552d38b155"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0e249f14e7e08e05d829924e5f4a0563"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classNativeParserBase.xhtml#a0e249f14e7e08e05d829924e5f4a0563">OperatorType</a> { <br />
&#160;&#160;<a class="el" href="classNativeParserBase.xhtml#a0e249f14e7e08e05d829924e5f4a0563a49f9faaddddd4b054d84ab57dbfa98a6">otOperatorUndefined</a> = 0, 
<a class="el" href="classNativeParserBase.xhtml#a0e249f14e7e08e05d829924e5f4a0563af7502ae8810958998fbb492128325d36">otOperatorSquare</a>, 
<a class="el" href="classNativeParserBase.xhtml#a0e249f14e7e08e05d829924e5f4a0563a58514c87e1f017ad4860130de3d7fe86">otOperatorParentheses</a>, 
<a class="el" href="classNativeParserBase.xhtml#a0e249f14e7e08e05d829924e5f4a0563a210fa66c199df8da96f17e6f833ba40b">otOperatorPointer</a>, 
<br />
&#160;&#160;<a class="el" href="classNativeParserBase.xhtml#a0e249f14e7e08e05d829924e5f4a0563ad6dd6ba4590df41d0613d5fb8c980e9d">otOperatorStar</a>
<br />
 }</td></tr>
<tr class="separator:a0e249f14e7e08e05d829924e5f4a0563"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a70b951898f29e41229b74e2e3f72b909"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classNativeParserBase.xhtml#a70b951898f29e41229b74e2e3f72b909">NativeParserBase</a> ()</td></tr>
<tr class="separator:a70b951898f29e41229b74e2e3f72b909"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1292a0c0d4abc43681f3cd9b5e3d1381"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classNativeParserBase.xhtml#a1292a0c0d4abc43681f3cd9b5e3d1381">~NativeParserBase</a> ()</td></tr>
<tr class="separator:a1292a0c0d4abc43681f3cd9b5e3d1381"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-methods"></a>
Protected Member Functions</h2></td></tr>
<tr class="memitem:a93d5aa593e2432de7e3b5cf7629d5465"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classNativeParserBase.xhtml#a93d5aa593e2432de7e3b5cf7629d5465">Reset</a> ()</td></tr>
<tr class="separator:a93d5aa593e2432de7e3b5cf7629d5465"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a19e3a08fe55e65fa023d885bc2457fdc"><td class="memItemLeft" align="right" valign="top">size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classNativeParserBase.xhtml#a19e3a08fe55e65fa023d885bc2457fdc">FindAIMatches</a> (<a class="el" href="classTokenTree.xhtml">TokenTree</a> *tree, std::queue&lt; <a class="el" href="structNativeParserBase_1_1ParserComponent.xhtml">ParserComponent</a> &gt; components, <a class="el" href="token_8h.xhtml#a10e4417d2285abddb9d4c2e97cddcec4">TokenIdxSet</a> &amp;result, int parentTokenIdx=-1, bool isPrefix=false, bool caseSensitive=false, bool use_inheritance=true, short int kindMask=0xFFFF, TokenIdxSet *search_scope=0)</td></tr>
<tr class="memdesc:a19e3a08fe55e65fa023d885bc2457fdc"><td class="mdescLeft">&#160;</td><td class="mdescRight">Artificial Intelligence Matching.  <a href="#a19e3a08fe55e65fa023d885bc2457fdc">More...</a><br /></td></tr>
<tr class="separator:a19e3a08fe55e65fa023d885bc2457fdc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a94874c741ccf2fe009d4ff13aca2e93c"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classNativeParserBase.xhtml#a94874c741ccf2fe009d4ff13aca2e93c">FindCurrentFunctionScope</a> (<a class="el" href="classTokenTree.xhtml">TokenTree</a> *tree, const <a class="el" href="token_8h.xhtml#a10e4417d2285abddb9d4c2e97cddcec4">TokenIdxSet</a> &amp;procResult, <a class="el" href="token_8h.xhtml#a10e4417d2285abddb9d4c2e97cddcec4">TokenIdxSet</a> &amp;scopeResult)</td></tr>
<tr class="separator:a94874c741ccf2fe009d4ff13aca2e93c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad0076378dbf40e41ae66bd04876fd795"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classNativeParserBase.xhtml#ad0076378dbf40e41ae66bd04876fd795">CleanupSearchScope</a> (<a class="el" href="classTokenTree.xhtml">TokenTree</a> *tree, <a class="el" href="token_8h.xhtml#a10e4417d2285abddb9d4c2e97cddcec4">TokenIdxSet</a> *searchScope)</td></tr>
<tr class="separator:ad0076378dbf40e41ae66bd04876fd795"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a72af340580b2d53ce914aec86a4d875b"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classNativeParserBase.xhtml#a72af340580b2d53ce914aec86a4d875b">GetCallTipHighlight</a> (const wxString &amp;calltip, int *start, int *end, int typedCommas)</td></tr>
<tr class="separator:a72af340580b2d53ce914aec86a4d875b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abcdfe0f5a07b39cd7353d8779540efa4"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classNativeParserBase.xhtml#abcdfe0f5a07b39cd7353d8779540efa4">FindFunctionOpenParenthesis</a> (const wxString &amp;calltip)</td></tr>
<tr class="separator:abcdfe0f5a07b39cd7353d8779540efa4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1a43838220e3b8e85a3e2e632e9f5e5e"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classNativeParserBase.xhtml#a1a43838220e3b8e85a3e2e632e9f5e5e">BelongsToParentOrItsAncestors</a> (<a class="el" href="classTokenTree.xhtml">TokenTree</a> *tree, const <a class="el" href="classToken.xhtml">Token</a> *token, int parentIdx, bool use_inheritance=true)</td></tr>
<tr class="separator:a1a43838220e3b8e85a3e2e632e9f5e5e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a41a37e7e5c205f2316ca530675f25bd1"><td class="memItemLeft" align="right" valign="top">wxString&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classNativeParserBase.xhtml#a41a37e7e5c205f2316ca530675f25bd1">GetCCToken</a> (wxString &amp;line, <a class="el" href="classNativeParserBase.xhtml#a12aae162661ce9aa643d40552d38b155">ParserTokenType</a> &amp;tokenType, <a class="el" href="classNativeParserBase.xhtml#a0e249f14e7e08e05d829924e5f4a0563">OperatorType</a> &amp;tokenOperatorType)</td></tr>
<tr class="separator:a41a37e7e5c205f2316ca530675f25bd1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a70232a4a2168f656abe4c53ec9e0d9fc"><td class="memItemLeft" align="right" valign="top">unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classNativeParserBase.xhtml#a70232a4a2168f656abe4c53ec9e0d9fc">FindCCTokenStart</a> (const wxString &amp;line)</td></tr>
<tr class="separator:a70232a4a2168f656abe4c53ec9e0d9fc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a35e7c059bb20010170ea4cfa79331e4b"><td class="memItemLeft" align="right" valign="top">wxString&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classNativeParserBase.xhtml#a35e7c059bb20010170ea4cfa79331e4b">GetNextCCToken</a> (const wxString &amp;line, unsigned int &amp;startAt, <a class="el" href="classNativeParserBase.xhtml#a0e249f14e7e08e05d829924e5f4a0563">OperatorType</a> &amp;tokenOperatorType)</td></tr>
<tr class="separator:a35e7c059bb20010170ea4cfa79331e4b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad30855bda279972bc74fcce358984c0b"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classNativeParserBase.xhtml#ad30855bda279972bc74fcce358984c0b">RemoveLastFunctionChildren</a> (<a class="el" href="classTokenTree.xhtml">TokenTree</a> *tree, int &amp;lastFuncTokenIdx)</td></tr>
<tr class="separator:ad30855bda279972bc74fcce358984c0b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a22419effe0b8f2d1b6b40ffb4d24c22e"><td class="memItemLeft" align="right" valign="top">size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classNativeParserBase.xhtml#a22419effe0b8f2d1b6b40ffb4d24c22e">BreakUpComponents</a> (const wxString &amp;actual, std::queue&lt; <a class="el" href="structNativeParserBase_1_1ParserComponent.xhtml">ParserComponent</a> &gt; &amp;components)</td></tr>
<tr class="memdesc:a22419effe0b8f2d1b6b40ffb4d24c22e"><td class="mdescLeft">&#160;</td><td class="mdescRight">break a statement to several ParserComponents, and store them in a queue.  <a href="#a22419effe0b8f2d1b6b40ffb4d24c22e">More...</a><br /></td></tr>
<tr class="separator:a22419effe0b8f2d1b6b40ffb4d24c22e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6aa4aad75ff50dcf5eec5882728a337b"><td class="memItemLeft" align="right" valign="top">size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classNativeParserBase.xhtml#a6aa4aad75ff50dcf5eec5882728a337b">ResolveExpression</a> (<a class="el" href="classTokenTree.xhtml">TokenTree</a> *tree, std::queue&lt; <a class="el" href="structNativeParserBase_1_1ParserComponent.xhtml">ParserComponent</a> &gt; components, const <a class="el" href="token_8h.xhtml#a10e4417d2285abddb9d4c2e97cddcec4">TokenIdxSet</a> &amp;searchScope, <a class="el" href="token_8h.xhtml#a10e4417d2285abddb9d4c2e97cddcec4">TokenIdxSet</a> &amp;result, bool caseSense=true, bool isPrefix=false)</td></tr>
<tr class="separator:a6aa4aad75ff50dcf5eec5882728a337b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2d1f66cf93ed2a22beb09db81cfc1fdf"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classNativeParserBase.xhtml#a2d1f66cf93ed2a22beb09db81cfc1fdf">ResolveOperator</a> (<a class="el" href="classTokenTree.xhtml">TokenTree</a> *tree, const <a class="el" href="classNativeParserBase.xhtml#a0e249f14e7e08e05d829924e5f4a0563">OperatorType</a> &amp;tokenOperatorType, const <a class="el" href="token_8h.xhtml#a10e4417d2285abddb9d4c2e97cddcec4">TokenIdxSet</a> &amp;tokens, const <a class="el" href="token_8h.xhtml#a10e4417d2285abddb9d4c2e97cddcec4">TokenIdxSet</a> &amp;searchScope, <a class="el" href="token_8h.xhtml#a10e4417d2285abddb9d4c2e97cddcec4">TokenIdxSet</a> &amp;result)</td></tr>
<tr class="separator:a2d1f66cf93ed2a22beb09db81cfc1fdf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2f413ee746298a9b4078470f12cd622d"><td class="memItemLeft" align="right" valign="top">size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classNativeParserBase.xhtml#a2f413ee746298a9b4078470f12cd622d">ResolveActualType</a> (<a class="el" href="classTokenTree.xhtml">TokenTree</a> *tree, wxString searchText, const <a class="el" href="token_8h.xhtml#a10e4417d2285abddb9d4c2e97cddcec4">TokenIdxSet</a> &amp;searchScope, <a class="el" href="token_8h.xhtml#a10e4417d2285abddb9d4c2e97cddcec4">TokenIdxSet</a> &amp;result)</td></tr>
<tr class="separator:a2f413ee746298a9b4078470f12cd622d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a20c4e8a051ef3ff1777a6d193c69366e"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classNativeParserBase.xhtml#a20c4e8a051ef3ff1777a6d193c69366e">ResolveTemplateMap</a> (<a class="el" href="classTokenTree.xhtml">TokenTree</a> *tree, const wxString &amp;searchStr, const <a class="el" href="token_8h.xhtml#a10e4417d2285abddb9d4c2e97cddcec4">TokenIdxSet</a> &amp;actualTypeScope, <a class="el" href="token_8h.xhtml#a10e4417d2285abddb9d4c2e97cddcec4">TokenIdxSet</a> &amp;initialScope)</td></tr>
<tr class="separator:a20c4e8a051ef3ff1777a6d193c69366e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a47bf1cda3eab2a2921e9f82c1cc0adb3"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classNativeParserBase.xhtml#a47bf1cda3eab2a2921e9f82c1cc0adb3">AddTemplateAlias</a> (<a class="el" href="classTokenTree.xhtml">TokenTree</a> *tree, const int &amp;id, const <a class="el" href="token_8h.xhtml#a10e4417d2285abddb9d4c2e97cddcec4">TokenIdxSet</a> &amp;actualTypeScope, <a class="el" href="token_8h.xhtml#a10e4417d2285abddb9d4c2e97cddcec4">TokenIdxSet</a> &amp;initialScope)</td></tr>
<tr class="separator:a47bf1cda3eab2a2921e9f82c1cc0adb3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a730bf4ebbf118d7c5707ee7f2023d519"><td class="memItemLeft" align="right" valign="top">size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classNativeParserBase.xhtml#a730bf4ebbf118d7c5707ee7f2023d519">GenerateResultSet</a> (<a class="el" href="classTokenTree.xhtml">TokenTree</a> *tree, const wxString &amp;target, int parentIdx, <a class="el" href="token_8h.xhtml#a10e4417d2285abddb9d4c2e97cddcec4">TokenIdxSet</a> &amp;result, bool caseSens=true, bool isPrefix=false, short int kindMask=0xFFFF)</td></tr>
<tr class="separator:a730bf4ebbf118d7c5707ee7f2023d519"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a37cffba54c45dcc79de4e205387224b5"><td class="memItemLeft" align="right" valign="top">size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classNativeParserBase.xhtml#a37cffba54c45dcc79de4e205387224b5">GenerateResultSet</a> (<a class="el" href="classTokenTree.xhtml">TokenTree</a> *tree, const wxString &amp;target, const <a class="el" href="token_8h.xhtml#a10e4417d2285abddb9d4c2e97cddcec4">TokenIdxSet</a> &amp;ptrParentID, <a class="el" href="token_8h.xhtml#a10e4417d2285abddb9d4c2e97cddcec4">TokenIdxSet</a> &amp;result, bool caseSens=true, bool isPrefix=false, short int kindMask=0xFFFF)</td></tr>
<tr class="separator:a37cffba54c45dcc79de4e205387224b5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a41940b0d68082c9c64067e6068e1d8ad"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classNativeParserBase.xhtml#a41940b0d68082c9c64067e6068e1d8ad">CollectSearchScopes</a> (const <a class="el" href="token_8h.xhtml#a10e4417d2285abddb9d4c2e97cddcec4">TokenIdxSet</a> &amp;searchScope, <a class="el" href="token_8h.xhtml#a10e4417d2285abddb9d4c2e97cddcec4">TokenIdxSet</a> &amp;actualTypeScope, <a class="el" href="classTokenTree.xhtml">TokenTree</a> *tree)</td></tr>
<tr class="separator:a41940b0d68082c9c64067e6068e1d8ad"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a327bd9b943cb9cc7a5a45142e5c4bd12"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classNativeParserBase.xhtml#a327bd9b943cb9cc7a5a45142e5c4bd12">GetTokenFromCurrentLine</a> (<a class="el" href="classTokenTree.xhtml">TokenTree</a> *tree, const <a class="el" href="token_8h.xhtml#a10e4417d2285abddb9d4c2e97cddcec4">TokenIdxSet</a> &amp;tokens, size_t curLine, const wxString &amp;file)</td></tr>
<tr class="separator:a327bd9b943cb9cc7a5a45142e5c4bd12"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac41cce829ef11e3f5807abc9c1ae9c3f"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classNativeParserBase.xhtml#ac41cce829ef11e3f5807abc9c1ae9c3f">ComputeCallTip</a> (<a class="el" href="classTokenTree.xhtml">TokenTree</a> *tree, const <a class="el" href="token_8h.xhtml#a10e4417d2285abddb9d4c2e97cddcec4">TokenIdxSet</a> &amp;tokens, wxArrayString &amp;items)</td></tr>
<tr class="separator:ac41cce829ef11e3f5807abc9c1ae9c3f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad87da701be8c83eb4b8128af5186e9b5"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classNativeParserBase.xhtml#ad87da701be8c83eb4b8128af5186e9b5">PrettyPrintToken</a> (const <a class="el" href="classTokenTree.xhtml">TokenTree</a> *tree, const <a class="el" href="classToken.xhtml">Token</a> *token, wxString &amp;result, bool isRoot=true)</td></tr>
<tr class="separator:ad87da701be8c83eb4b8128af5186e9b5"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-static-methods"></a>
Static Protected Member Functions</h2></td></tr>
<tr class="memitem:a515db7dbc6e50f2817d19126d751bf8b"><td class="memItemLeft" align="right" valign="top">static int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classNativeParserBase.xhtml#a515db7dbc6e50f2817d19126d751bf8b">CountCommas</a> (const wxString &amp;lineText, int start)</td></tr>
<tr class="separator:a515db7dbc6e50f2817d19126d751bf8b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8fc2c501707603f10de6fc381ecb5ad7"><td class="memItemLeft" align="right" valign="top">static bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classNativeParserBase.xhtml#a8fc2c501707603f10de6fc381ecb5ad7">InsideToken</a> (int startAt, const wxString &amp;line)</td></tr>
<tr class="separator:a8fc2c501707603f10de6fc381ecb5ad7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af3474165096e398ed6dabff30a5c7a9f"><td class="memItemLeft" align="right" valign="top">static int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classNativeParserBase.xhtml#af3474165096e398ed6dabff30a5c7a9f">BeginOfToken</a> (int startAt, const wxString &amp;line)</td></tr>
<tr class="separator:af3474165096e398ed6dabff30a5c7a9f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad0f663db3c8703fbab998cb1a2b83690"><td class="memItemLeft" align="right" valign="top">static int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classNativeParserBase.xhtml#ad0f663db3c8703fbab998cb1a2b83690">BeforeToken</a> (int startAt, const wxString &amp;line)</td></tr>
<tr class="separator:ad0f663db3c8703fbab998cb1a2b83690"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acb7cbe0b971470fc583bb9da6fb5d86b"><td class="memItemLeft" align="right" valign="top">static bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classNativeParserBase.xhtml#acb7cbe0b971470fc583bb9da6fb5d86b">IsOperatorEnd</a> (int startAt, const wxString &amp;line)</td></tr>
<tr class="separator:acb7cbe0b971470fc583bb9da6fb5d86b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a18fe560152e0b824a8ad2b0990972923"><td class="memItemLeft" align="right" valign="top">static bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classNativeParserBase.xhtml#a18fe560152e0b824a8ad2b0990972923">IsOperatorPointer</a> (int startAt, const wxString &amp;line)</td></tr>
<tr class="separator:a18fe560152e0b824a8ad2b0990972923"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa46c34016b62f4f48eb71338395ab604"><td class="memItemLeft" align="right" valign="top">static bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classNativeParserBase.xhtml#aa46c34016b62f4f48eb71338395ab604">IsOperatorBegin</a> (int startAt, const wxString &amp;line)</td></tr>
<tr class="separator:aa46c34016b62f4f48eb71338395ab604"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aee2ec25f284973e0eabd9e85214123da"><td class="memItemLeft" align="right" valign="top">static bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classNativeParserBase.xhtml#aee2ec25f284973e0eabd9e85214123da">IsOperatorDot</a> (int startAt, const wxString &amp;line)</td></tr>
<tr class="separator:aee2ec25f284973e0eabd9e85214123da"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a508eda25d5019c70067848b32b9f3aa3"><td class="memItemLeft" align="right" valign="top">static int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classNativeParserBase.xhtml#a508eda25d5019c70067848b32b9f3aa3">BeforeWhitespace</a> (int startAt, const wxString &amp;line)</td></tr>
<tr class="separator:a508eda25d5019c70067848b32b9f3aa3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae561e148ddf33a1b12f2bcc207b0bbf5"><td class="memItemLeft" align="right" valign="top">static int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classNativeParserBase.xhtml#ae561e148ddf33a1b12f2bcc207b0bbf5">AfterWhitespace</a> (int startAt, const wxString &amp;line)</td></tr>
<tr class="separator:ae561e148ddf33a1b12f2bcc207b0bbf5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab4e29d422cd3ecf6a5fb028d56236248"><td class="memItemLeft" align="right" valign="top">static bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classNativeParserBase.xhtml#ab4e29d422cd3ecf6a5fb028d56236248">IsOpeningBracket</a> (int startAt, const wxString &amp;line)</td></tr>
<tr class="separator:ab4e29d422cd3ecf6a5fb028d56236248"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a133feced460dcdd2baae780d8361cd79"><td class="memItemLeft" align="right" valign="top">static bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classNativeParserBase.xhtml#a133feced460dcdd2baae780d8361cd79">IsClosingBracket</a> (int startAt, const wxString &amp;line)</td></tr>
<tr class="separator:a133feced460dcdd2baae780d8361cd79"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pri-methods"></a>
Private Member Functions</h2></td></tr>
<tr class="memitem:ac96ea37f147376e6727d37b649c9c5c4"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classNativeParserBase.xhtml#ac96ea37f147376e6727d37b649c9c5c4">AddChildrenOfUnnamed</a> (<a class="el" href="classTokenTree.xhtml">TokenTree</a> *tree, const <a class="el" href="classToken.xhtml">Token</a> *parent, <a class="el" href="token_8h.xhtml#a10e4417d2285abddb9d4c2e97cddcec4">TokenIdxSet</a> &amp;result)</td></tr>
<tr class="memdesc:ac96ea37f147376e6727d37b649c9c5c4"><td class="mdescLeft">&#160;</td><td class="mdescRight">collect child tokens of the specified token, the specified token must be unnamed.  <a href="#ac96ea37f147376e6727d37b649c9c5c4">More...</a><br /></td></tr>
<tr class="separator:ac96ea37f147376e6727d37b649c9c5c4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4247e13f3d453b6b9c7b4e2c408bcb01"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classNativeParserBase.xhtml#a4247e13f3d453b6b9c7b4e2c408bcb01">AddChildrenOfEnum</a> (<a class="el" href="classTokenTree.xhtml">TokenTree</a> *tree, const <a class="el" href="classToken.xhtml">Token</a> *parent, <a class="el" href="token_8h.xhtml#a10e4417d2285abddb9d4c2e97cddcec4">TokenIdxSet</a> &amp;result)</td></tr>
<tr class="separator:a4247e13f3d453b6b9c7b4e2c408bcb01"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1470d04a041cc280dae90a5838fe87a6"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classNativeParserBase.xhtml#a1470d04a041cc280dae90a5838fe87a6">IsChildOfUnnamedOrEnum</a> (<a class="el" href="classTokenTree.xhtml">TokenTree</a> *tree, const int targetIdx, const int parentIdx)</td></tr>
<tr class="memdesc:a1470d04a041cc280dae90a5838fe87a6"><td class="mdescLeft">&#160;</td><td class="mdescRight">check to see if the token is an unnamed class or enum under the parent token  <a href="#a1470d04a041cc280dae90a5838fe87a6">More...</a><br /></td></tr>
<tr class="separator:a1470d04a041cc280dae90a5838fe87a6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2bc72779b9b888d91aec47f7ca943170"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classNativeParserBase.xhtml#a2bc72779b9b888d91aec47f7ca943170">AddConstructors</a> (<a class="el" href="classTokenTree.xhtml">TokenTree</a> *tree, const <a class="el" href="token_8h.xhtml#a10e4417d2285abddb9d4c2e97cddcec4">TokenIdxSet</a> &amp;source, <a class="el" href="token_8h.xhtml#a10e4417d2285abddb9d4c2e97cddcec4">TokenIdxSet</a> &amp;dest)</td></tr>
<tr class="separator:a2bc72779b9b888d91aec47f7ca943170"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa6a65f399a92022167ca261d5b9bd8cb"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classNativeParserBase.xhtml#aa6a65f399a92022167ca261d5b9bd8cb">MatchText</a> (const wxString &amp;text, const wxString &amp;target, bool caseSens, bool isPrefix)</td></tr>
<tr class="separator:aa6a65f399a92022167ca261d5b9bd8cb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab21edecad63324030d937d837b807aa2"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classNativeParserBase.xhtml#ab21edecad63324030d937d837b807aa2">MatchType</a> (<a class="el" href="token_8h.xhtml#a7a47dce04185ce6008048622cc792f25">TokenKind</a> kind, short int kindMask)</td></tr>
<tr class="separator:ab21edecad63324030d937d837b807aa2"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pri-attribs"></a>
Private Attributes</h2></td></tr>
<tr class="memitem:a92e847fa872207cf3dcffb1eabd6682f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structNativeParserBase_1_1ParserComponent.xhtml">ParserComponent</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classNativeParserBase.xhtml#a92e847fa872207cf3dcffb1eabd6682f">m_LastComponent</a></td></tr>
<tr class="separator:a92e847fa872207cf3dcffb1eabd6682f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a44f138ba5a521aabb08770f53f2c4c25"><td class="memItemLeft" align="right" valign="top">std::map&lt; wxString, wxString &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classNativeParserBase.xhtml#a44f138ba5a521aabb08770f53f2c4c25">m_TemplateMap</a></td></tr>
<tr class="separator:a44f138ba5a521aabb08770f53f2c4c25"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Member Enumeration Documentation</h2>
<a class="anchor" id="a0e249f14e7e08e05d829924e5f4a0563"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="classNativeParserBase.xhtml#a0e249f14e7e08e05d829924e5f4a0563">NativeParserBase::OperatorType</a></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>the delimiter separating two <a class="el" href="classParser.xhtml" title="Parser class holds all the tokens of a C::B project. ">Parser</a> Component, See <a class="el" href="structNativeParserBase_1_1ParserComponent.xhtml" title="a long statement can be divided to a ParserComponent chain. ">ParserComponent</a> struct for more details </p>
<table class="fieldtable">
<tr><th colspan="2">Enumerator</th></tr><tr><td class="fieldname"><a class="anchor" id="a0e249f14e7e08e05d829924e5f4a0563a49f9faaddddd4b054d84ab57dbfa98a6"></a>otOperatorUndefined&#160;</td><td class="fielddoc">
</td></tr>
<tr><td class="fieldname"><a class="anchor" id="a0e249f14e7e08e05d829924e5f4a0563af7502ae8810958998fbb492128325d36"></a>otOperatorSquare&#160;</td><td class="fielddoc">
</td></tr>
<tr><td class="fieldname"><a class="anchor" id="a0e249f14e7e08e05d829924e5f4a0563a58514c87e1f017ad4860130de3d7fe86"></a>otOperatorParentheses&#160;</td><td class="fielddoc">
</td></tr>
<tr><td class="fieldname"><a class="anchor" id="a0e249f14e7e08e05d829924e5f4a0563a210fa66c199df8da96f17e6f833ba40b"></a>otOperatorPointer&#160;</td><td class="fielddoc">
</td></tr>
<tr><td class="fieldname"><a class="anchor" id="a0e249f14e7e08e05d829924e5f4a0563ad6dd6ba4590df41d0613d5fb8c980e9d"></a>otOperatorStar&#160;</td><td class="fielddoc">
</td></tr>
</table>

</div>
</div>
<a class="anchor" id="a12aae162661ce9aa643d40552d38b155"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="classNativeParserBase.xhtml#a12aae162661ce9aa643d40552d38b155">NativeParserBase::ParserTokenType</a></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>divide a statement to several pieces(parser component), each component has a type member </p>
<table class="fieldtable">
<tr><th colspan="2">Enumerator</th></tr><tr><td class="fieldname"><a class="anchor" id="a12aae162661ce9aa643d40552d38b155a1d846f7a84d0eec5dc760e406e20efa3"></a>pttUndefined&#160;</td><td class="fielddoc">
</td></tr>
<tr><td class="fieldname"><a class="anchor" id="a12aae162661ce9aa643d40552d38b155a3a570ba6912abaae180ec08aacc6d6cc"></a>pttSearchText&#160;</td><td class="fielddoc">
</td></tr>
<tr><td class="fieldname"><a class="anchor" id="a12aae162661ce9aa643d40552d38b155a8a13933956c950d133e3feb897e058d0"></a>pttClass&#160;</td><td class="fielddoc">
</td></tr>
<tr><td class="fieldname"><a class="anchor" id="a12aae162661ce9aa643d40552d38b155ae4697edb3786b3cc445eb37c00ef89b3"></a>pttNamespace&#160;</td><td class="fielddoc">
</td></tr>
<tr><td class="fieldname"><a class="anchor" id="a12aae162661ce9aa643d40552d38b155ade77216b9ec7507ba754fd14605516e5"></a>pttFunction&#160;</td><td class="fielddoc">
</td></tr>
</table>

</div>
</div>
<h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="a70b951898f29e41229b74e2e3f72b909"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">NativeParserBase::NativeParserBase </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Constructor </p>

</div>
</div>
<a class="anchor" id="a1292a0c0d4abc43681f3cd9b5e3d1381"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">NativeParserBase::~NativeParserBase </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Destructor </p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a class="anchor" id="a4247e13f3d453b6b9c7b4e2c408bcb01"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool NativeParserBase::AddChildrenOfEnum </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classTokenTree.xhtml">TokenTree</a> *&#160;</td>
          <td class="paramname"><em>tree</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classToken.xhtml">Token</a> *&#160;</td>
          <td class="paramname"><em>parent</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="token_8h.xhtml#a10e4417d2285abddb9d4c2e97cddcec4">TokenIdxSet</a> &amp;&#160;</td>
          <td class="paramname"><em>result</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>References <a class="el" href="classTokenTree.xhtml#a27fc4ea2842b026514e7b7f92a5e578e">TokenTree::at()</a>, <a class="el" href="classToken.xhtml#a7b5dce935f88261f7e20580a599aeee2">Token::m_Children</a>, <a class="el" href="classToken.xhtml#afb74e3ed595b693bb171d53daf226dc7">Token::m_Scope</a>, <a class="el" href="classToken.xhtml#aae52d5bca7a44fcd03345e405ab979b6">Token::m_TokenKind</a>, <a class="el" href="token_8h.xhtml#a7a47dce04185ce6008048622cc792f25a5bf7196b13ca1ae329ed8a409c1c41c0">tkEnum</a>, and <a class="el" href="token_8h.xhtml#a51914652d471a4b2e79baaa727cef729a935af98e116660761ab579df64af700c">tsPrivate</a>.</p>

<p>Referenced by <a class="el" href="classNativeParserBase.xhtml#ac96ea37f147376e6727d37b649c9c5c4">AddChildrenOfUnnamed()</a>.</p>

</div>
</div>
<a class="anchor" id="ac96ea37f147376e6727d37b649c9c5c4"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool NativeParserBase::AddChildrenOfUnnamed </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classTokenTree.xhtml">TokenTree</a> *&#160;</td>
          <td class="paramname"><em>tree</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classToken.xhtml">Token</a> *&#160;</td>
          <td class="paramname"><em>parent</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="token_8h.xhtml#a10e4417d2285abddb9d4c2e97cddcec4">TokenIdxSet</a> &amp;&#160;</td>
          <td class="paramname"><em>result</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>collect child tokens of the specified token, the specified token must be unnamed. </p>
<p>used for <a class="el" href="classNativeParserBase.xhtml#a730bf4ebbf118d7c5707ee7f2023d519">GenerateResultSet()</a> function </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">tree</td><td><a class="el" href="classTokenTree.xhtml">TokenTree</a> pointer </td></tr>
    <tr><td class="paramname">parent</td><td>we need to collect the children of this token </td></tr>
    <tr><td class="paramname">result</td><td>collected tokens </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>bool true if parent is an unnamed class or enum </dd></dl>

<p>References <a class="el" href="classNativeParserBase.xhtml#a4247e13f3d453b6b9c7b4e2c408bcb01">AddChildrenOfEnum()</a>, <a class="el" href="classTokenTree.xhtml#a27fc4ea2842b026514e7b7f92a5e578e">TokenTree::at()</a>, <a class="el" href="classToken.xhtml#a7b5dce935f88261f7e20580a599aeee2">Token::m_Children</a>, <a class="el" href="classToken.xhtml#acdc09e733cf2a6342767e714e8f86bc7">Token::m_IsAnonymous</a>, <a class="el" href="classToken.xhtml#afb74e3ed595b693bb171d53daf226dc7">Token::m_Scope</a>, <a class="el" href="classToken.xhtml#aae52d5bca7a44fcd03345e405ab979b6">Token::m_TokenKind</a>, <a class="el" href="token_8h.xhtml#a7a47dce04185ce6008048622cc792f25a36d9f3721a93b1c4a60b1d50d0198af2">tkClass</a>, <a class="el" href="token_8h.xhtml#a7a47dce04185ce6008048622cc792f25a5bf7196b13ca1ae329ed8a409c1c41c0">tkEnum</a>, and <a class="el" href="token_8h.xhtml#a51914652d471a4b2e79baaa727cef729a935af98e116660761ab579df64af700c">tsPrivate</a>.</p>

</div>
</div>
<a class="anchor" id="a2bc72779b9b888d91aec47f7ca943170"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void NativeParserBase::AddConstructors </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classTokenTree.xhtml">TokenTree</a> *&#160;</td>
          <td class="paramname"><em>tree</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="token_8h.xhtml#a10e4417d2285abddb9d4c2e97cddcec4">TokenIdxSet</a> &amp;&#160;</td>
          <td class="paramname"><em>source</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="token_8h.xhtml#a10e4417d2285abddb9d4c2e97cddcec4">TokenIdxSet</a> &amp;&#160;</td>
          <td class="paramname"><em>dest</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>loop on the input <a class="el" href="classToken.xhtml">Token</a> index set (source), add all its public constructors to output <a class="el" href="classToken.xhtml">Token</a> index set (dest) </p>

<p>References <a class="el" href="classTokenTree.xhtml#a27fc4ea2842b026514e7b7f92a5e578e">TokenTree::at()</a>, <a class="el" href="classToken.xhtml#a7b5dce935f88261f7e20580a599aeee2">Token::m_Children</a>, <a class="el" href="classToken.xhtml#a817f77f62e9a1fa23035e8209cfdc0ba">Token::m_IsOperator</a>, <a class="el" href="classToken.xhtml#a66d4391491a9244d9c0e060045d9cdee">Token::m_Name</a>, <a class="el" href="classToken.xhtml#afb74e3ed595b693bb171d53daf226dc7">Token::m_Scope</a>, <a class="el" href="classToken.xhtml#aae52d5bca7a44fcd03345e405ab979b6">Token::m_TokenKind</a>, <a class="el" href="token_8h.xhtml#a7a47dce04185ce6008048622cc792f25a36d9f3721a93b1c4a60b1d50d0198af2">tkClass</a>, <a class="el" href="token_8h.xhtml#a7a47dce04185ce6008048622cc792f25a40d27978e246bbd62cdee00497bdc5f2">tkConstructor</a>, <a class="el" href="token_8h.xhtml#a51914652d471a4b2e79baaa727cef729a7cc0bbbfe40c2ce141c7d3c5d8a12f5a">tsPublic</a>, and <a class="el" href="token_8h.xhtml#a51914652d471a4b2e79baaa727cef729aa4ba3943f169a9cb787bb6a275b1c47f">tsUndefined</a>.</p>

<p>Referenced by <a class="el" href="classNativeParserBase.xhtml#a6aa4aad75ff50dcf5eec5882728a337b">ResolveExpression()</a>.</p>

</div>
</div>
<a class="anchor" id="a47bf1cda3eab2a2921e9f82c1cc0adb3"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void NativeParserBase::AddTemplateAlias </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classTokenTree.xhtml">TokenTree</a> *&#160;</td>
          <td class="paramname"><em>tree</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int &amp;&#160;</td>
          <td class="paramname"><em>id</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="token_8h.xhtml#a10e4417d2285abddb9d4c2e97cddcec4">TokenIdxSet</a> &amp;&#160;</td>
          <td class="paramname"><em>actualTypeScope</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="token_8h.xhtml#a10e4417d2285abddb9d4c2e97cddcec4">TokenIdxSet</a> &amp;&#160;</td>
          <td class="paramname"><em>initialScope</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>add template parameter, get the actual parameter from the formal parameter list </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">id</td><td>template token id </td></tr>
    <tr><td class="paramname">actualTypeScope</td><td>search scope </td></tr>
    <tr><td class="paramname">initialScope</td><td>resolved result </td></tr>
    <tr><td class="paramname">tree</td><td><a class="el" href="classToken.xhtml">Token</a> tree pointer. </td></tr>
  </table>
  </dd>
</dl>

<p>References <a class="el" href="classTokenTree.xhtml#a27fc4ea2842b026514e7b7f92a5e578e">TokenTree::at()</a>, <a class="el" href="cclogger_8h.xhtml#abeaaa24b840507a2dce16ea2306b7995">CC_LOCKER_TRACK_TT_MTX_LOCK</a>, <a class="el" href="cclogger_8h.xhtml#a12481e66c0dee266f5a45a7ba7565a17">CC_LOCKER_TRACK_TT_MTX_UNLOCK</a>, <a class="el" href="classTokenTree.xhtml#a47cda80c0a725b341cc79d228dda4bfa">TokenTree::empty()</a>, <a class="el" href="classToken.xhtml#aed5368035aa74832d3512ca90049f62d">Token::m_TemplateAlias</a>, <a class="el" href="classNativeParserBase.xhtml#a44f138ba5a521aabb08770f53f2c4c25">m_TemplateMap</a>, <a class="el" href="classToken.xhtml#aae52d5bca7a44fcd03345e405ab979b6">Token::m_TokenKind</a>, <a class="el" href="classNativeParserBase.xhtml#a2f413ee746298a9b4078470f12cd622d">ResolveActualType()</a>, <a class="el" href="tokentree_8cpp.xhtml#a9280aad984604fac23895e7805450781">s_TokenTreeMutex</a>, and <a class="el" href="token_8h.xhtml#a7a47dce04185ce6008048622cc792f25acbcda253ac64b42fec3a2e9183dbbd4a">tkTypedef</a>.</p>

<p>Referenced by <a class="el" href="classNativeParserBase.xhtml#a6aa4aad75ff50dcf5eec5882728a337b">ResolveExpression()</a>, and <a class="el" href="classNativeParserBase.xhtml#a2d1f66cf93ed2a22beb09db81cfc1fdf">ResolveOperator()</a>.</p>

</div>
</div>
<a class="anchor" id="ae561e148ddf33a1b12f2bcc207b0bbf5"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static int NativeParserBase::AfterWhitespace </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>startAt</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const wxString &amp;&#160;</td>
          <td class="paramname"><em>line</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>search from left to right, move to the first character of the space "       ::   f" ^begin ^end </p>

<p>Referenced by <a class="el" href="classNativeParserBase.xhtml#a70232a4a2168f656abe4c53ec9e0d9fc">FindCCTokenStart()</a>, <a class="el" href="classNativeParserBase.xhtml#a41a37e7e5c205f2316ca530675f25bd1">GetCCToken()</a>, and <a class="el" href="classNativeParserBase.xhtml#a35e7c059bb20010170ea4cfa79331e4b">GetNextCCToken()</a>.</p>

</div>
</div>
<a class="anchor" id="ad0f663db3c8703fbab998cb1a2b83690"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static int NativeParserBase::BeforeToken </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>startAt</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const wxString &amp;&#160;</td>
          <td class="paramname"><em>line</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Referenced by <a class="el" href="classNativeParserBase.xhtml#a70232a4a2168f656abe4c53ec9e0d9fc">FindCCTokenStart()</a>.</p>

</div>
</div>
<a class="anchor" id="a508eda25d5019c70067848b32b9f3aa3"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static int NativeParserBase::BeforeWhitespace </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>startAt</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const wxString &amp;&#160;</td>
          <td class="paramname"><em>line</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>move to the char before whitespace and tabs, e.g. SomeNameSpace :: SomeClass ^end ^begin note if there some spaces in the begging like "       f::" ^end ^begin the returned index is -1. </p>

<p>Referenced by <a class="el" href="classNativeParserBase.xhtml#a70232a4a2168f656abe4c53ec9e0d9fc">FindCCTokenStart()</a>.</p>

</div>
</div>
<a class="anchor" id="af3474165096e398ed6dabff30a5c7a9f"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static int NativeParserBase::BeginOfToken </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>startAt</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const wxString &amp;&#160;</td>
          <td class="paramname"><em>line</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>go to the first character of the identifier, e.g "    f(SomeNameSpace::SomeClass.SomeMethod" return value^ ^begin this is the index before the first character of the identifier </p>

<p>Referenced by <a class="el" href="classNativeParserBase.xhtml#a70232a4a2168f656abe4c53ec9e0d9fc">FindCCTokenStart()</a>.</p>

</div>
</div>
<a class="anchor" id="a1a43838220e3b8e85a3e2e632e9f5e5e"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool NativeParserBase::BelongsToParentOrItsAncestors </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classTokenTree.xhtml">TokenTree</a> *&#160;</td>
          <td class="paramname"><em>tree</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classToken.xhtml">Token</a> *&#160;</td>
          <td class="paramname"><em>token</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>parentIdx</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>use_inheritance</em> = <code>true</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Decides if the token belongs to its parent or one of its ancestors </p>

<p>References <a class="el" href="classTokenTree.xhtml#a27fc4ea2842b026514e7b7f92a5e578e">TokenTree::at()</a>, <a class="el" href="cclogger_8h.xhtml#abeaaa24b840507a2dce16ea2306b7995">CC_LOCKER_TRACK_TT_MTX_LOCK</a>, <a class="el" href="cclogger_8h.xhtml#a12481e66c0dee266f5a45a7ba7565a17">CC_LOCKER_TRACK_TT_MTX_UNLOCK</a>, <a class="el" href="classToken.xhtml#a1cc284f3c062eb969350acef5130e24b">Token::m_Ancestors</a>, <a class="el" href="classToken.xhtml#ace8e68140906dd748fcc64ebf95bc014">Token::m_ParentIndex</a>, <a class="el" href="classTokenTree.xhtml#af642138bc989d4d2f6699a0aca086aec">TokenTree::RecalcInheritanceChain()</a>, and <a class="el" href="tokentree_8cpp.xhtml#a9280aad984604fac23895e7805450781">s_TokenTreeMutex</a>.</p>

</div>
</div>
<a class="anchor" id="a22419effe0b8f2d1b6b40ffb4d24c22e"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">size_t NativeParserBase::BreakUpComponents </td>
          <td>(</td>
          <td class="paramtype">const wxString &amp;&#160;</td>
          <td class="paramname"><em>actual</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::queue&lt; <a class="el" href="structNativeParserBase_1_1ParserComponent.xhtml">ParserComponent</a> &gt; &amp;&#160;</td>
          <td class="paramname"><em>components</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>break a statement to several ParserComponents, and store them in a queue. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">actual</td><td>a statement string to be divided. </td></tr>
    <tr><td class="paramname">components</td><td>output variable containing the queue. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>number of <a class="el" href="structNativeParserBase_1_1ParserComponent.xhtml" title="a long statement can be divided to a ParserComponent chain. ">ParserComponent</a> </dd></dl>

<p>References <a class="el" href="structNativeParserBase_1_1ParserComponent.xhtml#a9dbbe530bb70590c982d8000aa593e40">NativeParserBase::ParserComponent::component</a>, <a class="el" href="classCCLogger.xhtml#aa64a8ddd35ee6847500ee8afa9905d07">CCLogger::DebugLog()</a>, <a class="el" href="logmanager_8h.xhtml#afcd50562b2d380a60ad9e8b56dddc72d">F()</a>, <a class="el" href="classCCLogger.xhtml#a8026c2410c4373264868a80352638508">CCLogger::Get()</a>, <a class="el" href="classNativeParserBase.xhtml#a41a37e7e5c205f2316ca530675f25bd1">GetCCToken()</a>, <a class="el" href="classNativeParserBase.xhtml#a12aae162661ce9aa643d40552d38b155a8a13933956c950d133e3feb897e058d0">pttClass</a>, <a class="el" href="classNativeParserBase.xhtml#a12aae162661ce9aa643d40552d38b155ade77216b9ec7507ba754fd14605516e5">pttFunction</a>, <a class="el" href="classNativeParserBase.xhtml#a12aae162661ce9aa643d40552d38b155ae4697edb3786b3cc445eb37c00ef89b3">pttNamespace</a>, <a class="el" href="classNativeParserBase.xhtml#a12aae162661ce9aa643d40552d38b155a3a570ba6912abaae180ec08aacc6d6cc">pttSearchText</a>, <a class="el" href="classNativeParserBase.xhtml#a12aae162661ce9aa643d40552d38b155a1d846f7a84d0eec5dc760e406e20efa3">pttUndefined</a>, <a class="el" href="nativeparser_8cpp.xhtml#aae6889eb5da84bada7b9f050d803c61d">s_DebugSmartSense</a>, <a class="el" href="structNativeParserBase_1_1ParserComponent.xhtml#a7a2d91111918c78d37d6f6ad0d9a0469">NativeParserBase::ParserComponent::tokenOperatorType</a>, <a class="el" href="structNativeParserBase_1_1ParserComponent.xhtml#a14bf6b65cf68e34acf4b1f32f0b664a7">NativeParserBase::ParserComponent::tokenType</a>, and <a class="el" href="nativeparser__base_8cpp.xhtml#a1c9f8c7ecc64a760dc3ac03706556ea9">TRACE</a>.</p>

<p>Referenced by <a class="el" href="classNativeParser.xhtml#a5903f8934267e168fda25f8415cbed67">NativeParser::AI()</a>, <a class="el" href="classNativeParserBase.xhtml#a19e3a08fe55e65fa023d885bc2457fdc">FindAIMatches()</a>, <a class="el" href="classNativeParser.xhtml#afd2bc6413a7fbee65ac58583002a7a5b">NativeParser::FindCurrentFunctionToken()</a>, <a class="el" href="classNativeParser.xhtml#a3a697b4ddafa22ec87915c0681be15a2">NativeParser::ParseBufferForUsingNamespace()</a>, and <a class="el" href="classNativeParserBase.xhtml#a2f413ee746298a9b4078470f12cd622d">ResolveActualType()</a>.</p>

</div>
</div>
<a class="anchor" id="ad0076378dbf40e41ae66bd04876fd795"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void NativeParserBase::CleanupSearchScope </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classTokenTree.xhtml">TokenTree</a> *&#160;</td>
          <td class="paramname"><em>tree</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="token_8h.xhtml#a10e4417d2285abddb9d4c2e97cddcec4">TokenIdxSet</a> *&#160;</td>
          <td class="paramname"><em>searchScope</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>References <a class="el" href="classTokenTree.xhtml#a27fc4ea2842b026514e7b7f92a5e578e">TokenTree::at()</a>, <a class="el" href="cclogger_8h.xhtml#abeaaa24b840507a2dce16ea2306b7995">CC_LOCKER_TRACK_TT_MTX_LOCK</a>, <a class="el" href="cclogger_8h.xhtml#a12481e66c0dee266f5a45a7ba7565a17">CC_LOCKER_TRACK_TT_MTX_UNLOCK</a>, <a class="el" href="classToken.xhtml#aae52d5bca7a44fcd03345e405ab979b6">Token::m_TokenKind</a>, <a class="el" href="tokentree_8cpp.xhtml#a9280aad984604fac23895e7805450781">s_TokenTreeMutex</a>, <a class="el" href="token_8h.xhtml#a7a47dce04185ce6008048622cc792f25a41b6019cea50c68b09d3aa4e927327aa">tkAnyFunction</a>, <a class="el" href="token_8h.xhtml#a7a47dce04185ce6008048622cc792f25a36d9f3721a93b1c4a60b1d50d0198af2">tkClass</a>, <a class="el" href="token_8h.xhtml#a7a47dce04185ce6008048622cc792f25aa38450654b481800ad6cd006ebb0e98a">tkNamespace</a>, and <a class="el" href="token_8h.xhtml#a7a47dce04185ce6008048622cc792f25acbcda253ac64b42fec3a2e9183dbbd4a">tkTypedef</a>.</p>

<p>Referenced by <a class="el" href="classNativeParser.xhtml#a5903f8934267e168fda25f8415cbed67">NativeParser::AI()</a>.</p>

</div>
</div>
<a class="anchor" id="a41940b0d68082c9c64067e6068e1d8ad"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void NativeParserBase::CollectSearchScopes </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="token_8h.xhtml#a10e4417d2285abddb9d4c2e97cddcec4">TokenIdxSet</a> &amp;&#160;</td>
          <td class="paramname"><em>searchScope</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="token_8h.xhtml#a10e4417d2285abddb9d4c2e97cddcec4">TokenIdxSet</a> &amp;&#160;</td>
          <td class="paramname"><em>actualTypeScope</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classTokenTree.xhtml">TokenTree</a> *&#160;</td>
          <td class="paramname"><em>tree</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Collect search scopes, add the searchScopes's parent scope </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">searchScope</td><td>input search scope </td></tr>
    <tr><td class="paramname">actualTypeScope</td><td>returned search scope </td></tr>
    <tr><td class="paramname">tree</td><td><a class="el" href="classTokenTree.xhtml">TokenTree</a> pointer </td></tr>
  </table>
  </dd>
</dl>

<p>References <a class="el" href="classTokenTree.xhtml#a27fc4ea2842b026514e7b7f92a5e578e">TokenTree::at()</a>, <a class="el" href="cclogger_8h.xhtml#abeaaa24b840507a2dce16ea2306b7995">CC_LOCKER_TRACK_TT_MTX_LOCK</a>, <a class="el" href="cclogger_8h.xhtml#a12481e66c0dee266f5a45a7ba7565a17">CC_LOCKER_TRACK_TT_MTX_UNLOCK</a>, <a class="el" href="classToken.xhtml#ad3a46f07f6d3d8851188695914a79907">Token::m_Index</a>, <a class="el" href="classToken.xhtml#ace8e68140906dd748fcc64ebf95bc014">Token::m_ParentIndex</a>, and <a class="el" href="tokentree_8cpp.xhtml#a9280aad984604fac23895e7805450781">s_TokenTreeMutex</a>.</p>

<p>Referenced by <a class="el" href="classNativeParserBase.xhtml#a6aa4aad75ff50dcf5eec5882728a337b">ResolveExpression()</a>, and <a class="el" href="classNativeParserBase.xhtml#a2d1f66cf93ed2a22beb09db81cfc1fdf">ResolveOperator()</a>.</p>

</div>
</div>
<a class="anchor" id="ac41cce829ef11e3f5807abc9c1ae9c3f"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void NativeParserBase::ComputeCallTip </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classTokenTree.xhtml">TokenTree</a> *&#160;</td>
          <td class="paramname"><em>tree</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="token_8h.xhtml#a10e4417d2285abddb9d4c2e97cddcec4">TokenIdxSet</a> &amp;&#160;</td>
          <td class="paramname"><em>tokens</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">wxArrayString &amp;&#160;</td>
          <td class="paramname"><em>items</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>call tips are tips when you are entering some functions, such as you have a class definition class A { public: void A() {}; void test() { }; }; when you are entering some text like A(| or objA.test(| then there will be a tip window show the function prototype of the function </p>

<p>References <a class="el" href="classTokenTree.xhtml#a27fc4ea2842b026514e7b7f92a5e578e">TokenTree::at()</a>, <a class="el" href="cclogger_8h.xhtml#abeaaa24b840507a2dce16ea2306b7995">CC_LOCKER_TRACK_TT_MTX_LOCK</a>, <a class="el" href="cclogger_8h.xhtml#a12481e66c0dee266f5a45a7ba7565a17">CC_LOCKER_TRACK_TT_MTX_UNLOCK</a>, <a class="el" href="classTokenTree.xhtml#ae91196dfdd19d71f08e38ea94a7b4998">TokenTree::FindMatches()</a>, <a class="el" href="classTokenizer.xhtml#ac7addae7ad10df1c1550739eaf786d89">Tokenizer::GetToken()</a>, <a class="el" href="classTokenizer.xhtml#ad9e5082fade9bdcc47bf90f483a37f69">Tokenizer::InitFromBuffer()</a>, <a class="el" href="classToken.xhtml#a083cc36fabdd1fe73c8887314594c240">Token::m_Args</a>, <a class="el" href="classToken.xhtml#ad993bc78fb9aab6105daca3c104d7b5c">Token::m_BaseType</a>, <a class="el" href="classToken.xhtml#a7b5dce935f88261f7e20580a599aeee2">Token::m_Children</a>, <a class="el" href="classToken.xhtml#a1b939df520f020469a4023c9e121040f">Token::m_FullType</a>, <a class="el" href="classToken.xhtml#a817f77f62e9a1fa23035e8209cfdc0ba">Token::m_IsOperator</a>, <a class="el" href="classToken.xhtml#a66d4391491a9244d9c0e060045d9cdee">Token::m_Name</a>, <a class="el" href="classToken.xhtml#ace8e68140906dd748fcc64ebf95bc014">Token::m_ParentIndex</a>, <a class="el" href="classToken.xhtml#afb74e3ed595b693bb171d53daf226dc7">Token::m_Scope</a>, <a class="el" href="classToken.xhtml#aae52d5bca7a44fcd03345e405ab979b6">Token::m_TokenKind</a>, <a class="el" href="classTokenizer.xhtml#a736574152ebabf5ab26241104780c775">Tokenizer::PeekToken()</a>, <a class="el" href="classNativeParserBase.xhtml#ad87da701be8c83eb4b8128af5186e9b5">PrettyPrintToken()</a>, <a class="el" href="classTokenizer.xhtml#a1586b3f6ef6979c9938f1205a9749e47">Tokenizer::ReplaceMacroUsage()</a>, <a class="el" href="tokentree_8cpp.xhtml#a9280aad984604fac23895e7805450781">s_TokenTreeMutex</a>, <a class="el" href="token_8h.xhtml#a7a47dce04185ce6008048622cc792f25a36d9f3721a93b1c4a60b1d50d0198af2">tkClass</a>, <a class="el" href="token_8h.xhtml#a7a47dce04185ce6008048622cc792f25a40d27978e246bbd62cdee00497bdc5f2">tkConstructor</a>, <a class="el" href="token_8h.xhtml#a7a47dce04185ce6008048622cc792f25a97f801385ef65b6be37004f93a75010c">tkFunction</a>, <a class="el" href="token_8h.xhtml#a7a47dce04185ce6008048622cc792f25aa0ca06d013acd15e8fd2be8cb57c2f20">tkMacroDef</a>, <a class="el" href="token_8h.xhtml#a7a47dce04185ce6008048622cc792f25acbcda253ac64b42fec3a2e9183dbbd4a">tkTypedef</a>, <a class="el" href="token_8h.xhtml#a7a47dce04185ce6008048622cc792f25ae8e186b68231e5889c97c05a22bde507">tkVariable</a>, <a class="el" href="classTokenTree.xhtml#a17bd02412b63df67ac246f89c4ad7997">TokenTree::TokenExists()</a>, <a class="el" href="token_8h.xhtml#a51914652d471a4b2e79baaa727cef729a7cc0bbbfe40c2ce141c7d3c5d8a12f5a">tsPublic</a>, and <a class="el" href="token_8h.xhtml#a51914652d471a4b2e79baaa727cef729aa4ba3943f169a9cb787bb6a275b1c47f">tsUndefined</a>.</p>

<p>Referenced by <a class="el" href="classNativeParser.xhtml#abe807622f77b9024bfdbb04bd3be4033">NativeParser::GetCallTips()</a>.</p>

</div>
</div>
<a class="anchor" id="a515db7dbc6e50f2817d19126d751bf8b"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static int NativeParserBase::CountCommas </td>
          <td>(</td>
          <td class="paramtype">const wxString &amp;&#160;</td>
          <td class="paramname"><em>lineText</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>start</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Referenced by <a class="el" href="classCodeCompletion.xhtml#a545602ade097b198265727213f909226">CodeCompletion::GetCallTips()</a>.</p>

</div>
</div>
<a class="anchor" id="a19e3a08fe55e65fa023d885bc2457fdc"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">size_t NativeParserBase::FindAIMatches </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classTokenTree.xhtml">TokenTree</a> *&#160;</td>
          <td class="paramname"><em>tree</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::queue&lt; <a class="el" href="structNativeParserBase_1_1ParserComponent.xhtml">ParserComponent</a> &gt;&#160;</td>
          <td class="paramname"><em>components</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="token_8h.xhtml#a10e4417d2285abddb9d4c2e97cddcec4">TokenIdxSet</a> &amp;&#160;</td>
          <td class="paramname"><em>result</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>parentTokenIdx</em> = <code>-1</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>isPrefix</em> = <code>false</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>caseSensitive</em> = <code>false</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>use_inheritance</em> = <code>true</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">short int&#160;</td>
          <td class="paramname"><em>kindMask</em> = <code>0xFFFF</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="token_8h.xhtml#a10e4417d2285abddb9d4c2e97cddcec4">TokenIdxSet</a> *&#160;</td>
          <td class="paramname"><em>search_scope</em> = <code>0</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Artificial Intelligence Matching. </p>
<p>All functions that call this recursive function, should already entered a critical section or a mutex to protect the <a class="el" href="classTokenTree.xhtml">TokenTree</a>.</p>
<p>match (consume) the <a class="el" href="structNativeParserBase_1_1ParserComponent.xhtml" title="a long statement can be divided to a ParserComponent chain. ">ParserComponent</a> queue from left to right, the output result becomes the search scope of the next match. finally, give the results which match the last <a class="el" href="structNativeParserBase_1_1ParserComponent.xhtml" title="a long statement can be divided to a ParserComponent chain. ">ParserComponent</a>. </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">components</td><td>input <a class="el" href="structNativeParserBase_1_1ParserComponent.xhtml" title="a long statement can be divided to a ParserComponent chain. ">ParserComponent</a> queue </td></tr>
    <tr><td class="paramname">parentTokenIdx,initial</td><td>search scope of the left most component </td></tr>
    <tr><td class="paramname">fullMatch</td><td>the result should be a full text match or prefix match </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>matching token number, it is the size of result </dd></dl>

<p>References <a class="el" href="classTokenTree.xhtml#a27fc4ea2842b026514e7b7f92a5e578e">TokenTree::at()</a>, <a class="el" href="classNativeParserBase.xhtml#a22419effe0b8f2d1b6b40ffb4d24c22e">BreakUpComponents()</a>, <a class="el" href="structNativeParserBase_1_1ParserComponent.xhtml#a9dbbe530bb70590c982d8000aa593e40">NativeParserBase::ParserComponent::component</a>, <a class="el" href="classCCLogger.xhtml#aa64a8ddd35ee6847500ee8afa9905d07">CCLogger::DebugLog()</a>, <a class="el" href="logmanager_8h.xhtml#afcd50562b2d380a60ad9e8b56dddc72d">F()</a>, <a class="el" href="classNativeParserBase.xhtml#a730bf4ebbf118d7c5707ee7f2023d519">GenerateResultSet()</a>, <a class="el" href="classCCLogger.xhtml#a8026c2410c4373264868a80352638508">CCLogger::Get()</a>, <a class="el" href="classToken.xhtml#ad993bc78fb9aab6105daca3c104d7b5c">Token::m_BaseType</a>, <a class="el" href="classToken.xhtml#a7b5dce935f88261f7e20580a599aeee2">Token::m_Children</a>, <a class="el" href="classToken.xhtml#ad3a46f07f6d3d8851188695914a79907">Token::m_Index</a>, <a class="el" href="classToken.xhtml#a817f77f62e9a1fa23035e8209cfdc0ba">Token::m_IsOperator</a>, <a class="el" href="classToken.xhtml#a66d4391491a9244d9c0e060045d9cdee">Token::m_Name</a>, <a class="el" href="classToken.xhtml#ace8e68140906dd748fcc64ebf95bc014">Token::m_ParentIndex</a>, <a class="el" href="classToken.xhtml#aae52d5bca7a44fcd03345e405ab979b6">Token::m_TokenKind</a>, <a class="el" href="classNativeParserBase.xhtml#a12aae162661ce9aa643d40552d38b155a3a570ba6912abaae180ec08aacc6d6cc">pttSearchText</a>, <a class="el" href="nativeparser_8cpp.xhtml#aae6889eb5da84bada7b9f050d803c61d">s_DebugSmartSense</a>, <a class="el" href="token_8h.xhtml#a7a47dce04185ce6008048622cc792f25a36d9f3721a93b1c4a60b1d50d0198af2">tkClass</a>, <a class="el" href="token_8h.xhtml#a7a47dce04185ce6008048622cc792f25a5bf7196b13ca1ae329ed8a409c1c41c0">tkEnum</a>, <a class="el" href="token_8h.xhtml#a7a47dce04185ce6008048622cc792f25aa38450654b481800ad6cd006ebb0e98a">tkNamespace</a>, <a class="el" href="token_8h.xhtml#a7a47dce04185ce6008048622cc792f25acbcda253ac64b42fec3a2e9183dbbd4a">tkTypedef</a>, <a class="el" href="structNativeParserBase_1_1ParserComponent.xhtml#a14bf6b65cf68e34acf4b1f32f0b664a7">NativeParserBase::ParserComponent::tokenType</a>, and <a class="el" href="nativeparser__base_8cpp.xhtml#a1c9f8c7ecc64a760dc3ac03706556ea9">TRACE</a>.</p>

<p>Referenced by <a class="el" href="classNativeParser.xhtml#afd2bc6413a7fbee65ac58583002a7a5b">NativeParser::FindCurrentFunctionToken()</a>.</p>

</div>
</div>
<a class="anchor" id="a70232a4a2168f656abe4c53ec9e0d9fc"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int NativeParserBase::FindCCTokenStart </td>
          <td>(</td>
          <td class="paramtype">const wxString &amp;&#160;</td>
          <td class="paramname"><em>line</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>helper function to split the statement "    SomeNameSpace::SomeClass.SomeMethod|" ^ should stop here &lt;---------&mdash; ^ start from here, go backward(right to left) "    f(SomeNameSpace::SomeClass.SomeMethod|" ^ should stop here so, brace level should be considered </p>

<p>References <a class="el" href="classNativeParserBase.xhtml#ae561e148ddf33a1b12f2bcc207b0bbf5">AfterWhitespace()</a>, <a class="el" href="classNativeParserBase.xhtml#ad0f663db3c8703fbab998cb1a2b83690">BeforeToken()</a>, <a class="el" href="classNativeParserBase.xhtml#a508eda25d5019c70067848b32b9f3aa3">BeforeWhitespace()</a>, <a class="el" href="classNativeParserBase.xhtml#af3474165096e398ed6dabff30a5c7a9f">BeginOfToken()</a>, <a class="el" href="classNativeParserBase.xhtml#a133feced460dcdd2baae780d8361cd79">IsClosingBracket()</a>, <a class="el" href="classNativeParserBase.xhtml#ab4e29d422cd3ecf6a5fb028d56236248">IsOpeningBracket()</a>, <a class="el" href="classNativeParserBase.xhtml#aee2ec25f284973e0eabd9e85214123da">IsOperatorDot()</a>, <a class="el" href="classNativeParserBase.xhtml#acb7cbe0b971470fc583bb9da6fb5d86b">IsOperatorEnd()</a>, and <a class="el" href="nativeparser__base_8cpp.xhtml#a1c9f8c7ecc64a760dc3ac03706556ea9">TRACE</a>.</p>

<p>Referenced by <a class="el" href="classNativeParserBase.xhtml#a41a37e7e5c205f2316ca530675f25bd1">GetCCToken()</a>.</p>

</div>
</div>
<a class="anchor" id="a94874c741ccf2fe009d4ff13aca2e93c"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void NativeParserBase::FindCurrentFunctionScope </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classTokenTree.xhtml">TokenTree</a> *&#160;</td>
          <td class="paramname"><em>tree</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="token_8h.xhtml#a10e4417d2285abddb9d4c2e97cddcec4">TokenIdxSet</a> &amp;&#160;</td>
          <td class="paramname"><em>procResult</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="token_8h.xhtml#a10e4417d2285abddb9d4c2e97cddcec4">TokenIdxSet</a> &amp;&#160;</td>
          <td class="paramname"><em>scopeResult</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>References <a class="el" href="classTokenTree.xhtml#a27fc4ea2842b026514e7b7f92a5e578e">TokenTree::at()</a>, <a class="el" href="cclogger_8h.xhtml#abeaaa24b840507a2dce16ea2306b7995">CC_LOCKER_TRACK_TT_MTX_LOCK</a>, <a class="el" href="cclogger_8h.xhtml#a12481e66c0dee266f5a45a7ba7565a17">CC_LOCKER_TRACK_TT_MTX_UNLOCK</a>, <a class="el" href="classCCLogger.xhtml#aa64a8ddd35ee6847500ee8afa9905d07">CCLogger::DebugLog()</a>, <a class="el" href="classCCLogger.xhtml#a8026c2410c4373264868a80352638508">CCLogger::Get()</a>, <a class="el" href="classToken.xhtml#a86f46c0134869fb97590f32258980a25">Token::HasChildren()</a>, <a class="el" href="classToken.xhtml#a66d4391491a9244d9c0e060045d9cdee">Token::m_Name</a>, <a class="el" href="classToken.xhtml#ace8e68140906dd748fcc64ebf95bc014">Token::m_ParentIndex</a>, <a class="el" href="classToken.xhtml#aae52d5bca7a44fcd03345e405ab979b6">Token::m_TokenKind</a>, <a class="el" href="nativeparser_8cpp.xhtml#aae6889eb5da84bada7b9f050d803c61d">s_DebugSmartSense</a>, <a class="el" href="tokentree_8cpp.xhtml#a9280aad984604fac23895e7805450781">s_TokenTreeMutex</a>, <a class="el" href="token_8h.xhtml#a7a47dce04185ce6008048622cc792f25a41b6019cea50c68b09d3aa4e927327aa">tkAnyFunction</a>, and <a class="el" href="token_8h.xhtml#a7a47dce04185ce6008048622cc792f25a36d9f3721a93b1c4a60b1d50d0198af2">tkClass</a>.</p>

<p>Referenced by <a class="el" href="classNativeParser.xhtml#a5903f8934267e168fda25f8415cbed67">NativeParser::AI()</a>.</p>

</div>
</div>
<a class="anchor" id="abcdfe0f5a07b39cd7353d8779540efa4"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int NativeParserBase::FindFunctionOpenParenthesis </td>
          <td>(</td>
          <td class="paramtype">const wxString &amp;&#160;</td>
          <td class="paramname"><em>calltip</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>for <a class="el" href="classNativeParserBase.xhtml#a72af340580b2d53ce914aec86a4d875b">GetCallTipHighlight()</a> Finds the position of the opening parenthesis marking the beginning of the params. </p>

<p>Referenced by <a class="el" href="classNativeParserBase.xhtml#a72af340580b2d53ce914aec86a4d875b">GetCallTipHighlight()</a>.</p>

</div>
</div>
<a class="anchor" id="a730bf4ebbf118d7c5707ee7f2023d519"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">size_t NativeParserBase::GenerateResultSet </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classTokenTree.xhtml">TokenTree</a> *&#160;</td>
          <td class="paramname"><em>tree</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const wxString &amp;&#160;</td>
          <td class="paramname"><em>target</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>parentIdx</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="token_8h.xhtml#a10e4417d2285abddb9d4c2e97cddcec4">TokenIdxSet</a> &amp;&#160;</td>
          <td class="paramname"><em>result</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>caseSens</em> = <code>true</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>isPrefix</em> = <code>false</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">short int&#160;</td>
          <td class="paramname"><em>kindMask</em> = <code>0xFFFF</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Generate the matching results under the Parent <a class="el" href="classToken.xhtml">Token</a> index set</p>
<p>All functions that call this recursive function, should already entered a critical section.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">tree</td><td><a class="el" href="classTokenTree.xhtml">TokenTree</a> pointer </td></tr>
    <tr><td class="paramname">target</td><td>Scope (defined in TokenIdxSet) </td></tr>
    <tr><td class="paramname">result</td><td>result token index set </td></tr>
    <tr><td class="paramname">isPrefix</td><td>whether a full match is used or only do a prefix match </td></tr>
    <tr><td class="paramname">kindMask</td><td>define the result tokens filter, such as only class type is OK </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>result token set number </dd></dl>

<p>References <a class="el" href="classTokenTree.xhtml#a27fc4ea2842b026514e7b7f92a5e578e">TokenTree::at()</a>, <a class="el" href="classCCLogger.xhtml#aa64a8ddd35ee6847500ee8afa9905d07">CCLogger::DebugLog()</a>, <a class="el" href="logmanager_8h.xhtml#afcd50562b2d380a60ad9e8b56dddc72d">F()</a>, <a class="el" href="classCCLogger.xhtml#a8026c2410c4373264868a80352638508">CCLogger::Get()</a>, <a class="el" href="classToken.xhtml#a9d00b5c2951b1e718688fb22cafdff0a">Token::GetTokenKindString()</a>, <a class="el" href="classTokenTree.xhtml#ab6be3501beab17d4807973ce75fe5357">TokenTree::GetTokens()</a>, <a class="el" href="classToken.xhtml#a04fc0199cad56059310d8620e6620c17">Token::m_Aliases</a>, <a class="el" href="classToken.xhtml#a1cc284f3c062eb969350acef5130e24b">Token::m_Ancestors</a>, <a class="el" href="classToken.xhtml#a7b5dce935f88261f7e20580a599aeee2">Token::m_Children</a>, <a class="el" href="classToken.xhtml#ad3a46f07f6d3d8851188695914a79907">Token::m_Index</a>, <a class="el" href="classToken.xhtml#a66d4391491a9244d9c0e060045d9cdee">Token::m_Name</a>, <a class="el" href="classToken.xhtml#ace8e68140906dd748fcc64ebf95bc014">Token::m_ParentIndex</a>, <a class="el" href="classToken.xhtml#aae52d5bca7a44fcd03345e405ab979b6">Token::m_TokenKind</a>, <a class="el" href="classNativeParserBase.xhtml#aa6a65f399a92022167ca261d5b9bd8cb">MatchText()</a>, <a class="el" href="classNativeParserBase.xhtml#ab21edecad63324030d937d837b807aa2">MatchType()</a>, <a class="el" href="classTokenTree.xhtml#af642138bc989d4d2f6699a0aca086aec">TokenTree::RecalcInheritanceChain()</a>, <a class="el" href="nativeparser_8cpp.xhtml#aae6889eb5da84bada7b9f050d803c61d">s_DebugSmartSense</a>, <a class="el" href="token_8h.xhtml#a7a47dce04185ce6008048622cc792f25a5bf7196b13ca1ae329ed8a409c1c41c0">tkEnum</a>, <a class="el" href="token_8h.xhtml#a7a47dce04185ce6008048622cc792f25aa38450654b481800ad6cd006ebb0e98a">tkNamespace</a>, and <a class="el" href="nativeparser__base_8cpp.xhtml#a1c9f8c7ecc64a760dc3ac03706556ea9">TRACE</a>.</p>

<p>Referenced by <a class="el" href="classNativeParserBase.xhtml#a19e3a08fe55e65fa023d885bc2457fdc">FindAIMatches()</a>, <a class="el" href="classNativeParser.xhtml#afd2bc6413a7fbee65ac58583002a7a5b">NativeParser::FindCurrentFunctionToken()</a>, <a class="el" href="classNativeParserBase.xhtml#a2f413ee746298a9b4078470f12cd622d">ResolveActualType()</a>, <a class="el" href="classNativeParserBase.xhtml#a6aa4aad75ff50dcf5eec5882728a337b">ResolveExpression()</a>, and <a class="el" href="classNativeParserBase.xhtml#a2d1f66cf93ed2a22beb09db81cfc1fdf">ResolveOperator()</a>.</p>

</div>
</div>
<a class="anchor" id="a37cffba54c45dcc79de4e205387224b5"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">size_t NativeParserBase::GenerateResultSet </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classTokenTree.xhtml">TokenTree</a> *&#160;</td>
          <td class="paramname"><em>tree</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const wxString &amp;&#160;</td>
          <td class="paramname"><em>target</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="token_8h.xhtml#a10e4417d2285abddb9d4c2e97cddcec4">TokenIdxSet</a> &amp;&#160;</td>
          <td class="paramname"><em>ptrParentID</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="token_8h.xhtml#a10e4417d2285abddb9d4c2e97cddcec4">TokenIdxSet</a> &amp;&#160;</td>
          <td class="paramname"><em>result</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>caseSens</em> = <code>true</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>isPrefix</em> = <code>false</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">short int&#160;</td>
          <td class="paramname"><em>kindMask</em> = <code>0xFFFF</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>This function is just like the one above, especially that no <a class="el" href="classToken.xhtml">Token</a> tree information is used So, it use the current parser's <a class="el" href="classToken.xhtml">Token</a> tree.</p>
<p>All functions that call this recursive function, should already entered a critical section. </p>

</div>
</div>
<a class="anchor" id="a72af340580b2d53ce914aec86a4d875b"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void NativeParserBase::GetCallTipHighlight </td>
          <td>(</td>
          <td class="paramtype">const wxString &amp;&#160;</td>
          <td class="paramname"><em>calltip</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int *&#160;</td>
          <td class="paramname"><em>start</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int *&#160;</td>
          <td class="paramname"><em>end</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>typedCommas</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Returns the start and end of the call-tip highlight region. </p>

<p>References <a class="el" href="classNativeParserBase.xhtml#abcdfe0f5a07b39cd7353d8779540efa4">FindFunctionOpenParenthesis()</a>, and <a class="el" href="nativeparser__base_8cpp.xhtml#a1c9f8c7ecc64a760dc3ac03706556ea9">TRACE</a>.</p>

<p>Referenced by <a class="el" href="classCodeCompletion.xhtml#a545602ade097b198265727213f909226">CodeCompletion::GetCallTips()</a>.</p>

</div>
</div>
<a class="anchor" id="a41a37e7e5c205f2316ca530675f25bd1"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">wxString NativeParserBase::GetCCToken </td>
          <td>(</td>
          <td class="paramtype">wxString &amp;&#160;</td>
          <td class="paramname"><em>line</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classNativeParserBase.xhtml#a12aae162661ce9aa643d40552d38b155">ParserTokenType</a> &amp;&#160;</td>
          <td class="paramname"><em>tokenType</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classNativeParserBase.xhtml#a0e249f14e7e08e05d829924e5f4a0563">OperatorType</a> &amp;&#160;</td>
          <td class="paramname"><em>tokenOperatorType</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>helper function to split the statement line contains a string on the following form: "    char* mychar = SomeNamespace::m_SomeVar.SomeMeth" first we locate the first non-space char starting from the <em>end</em>:</p>
<p>"    char* mychar = SomeNamespace::m_SomeVar.SomeMeth" ^ then we remove everything before it. after it, what we do here, is (by this example) return "SomeNamespace" <em>and</em> modify line to become: m_SomeVar.SomeMeth so that if we 're called again with the (modified) line, we 'll return "m_SomeVar" and modify line (again) to become: SomeMeth and so on and so forth until we return an empty string... NOTE: if we find () args or [] arrays in our way, we skip them (done in GetNextCCToken)... </p>

<p>References <a class="el" href="classNativeParserBase.xhtml#ae561e148ddf33a1b12f2bcc207b0bbf5">AfterWhitespace()</a>, <a class="el" href="classNativeParserBase.xhtml#a70232a4a2168f656abe4c53ec9e0d9fc">FindCCTokenStart()</a>, <a class="el" href="classNativeParserBase.xhtml#a35e7c059bb20010170ea4cfa79331e4b">GetNextCCToken()</a>, <a class="el" href="classNativeParserBase.xhtml#aee2ec25f284973e0eabd9e85214123da">IsOperatorDot()</a>, <a class="el" href="classNativeParserBase.xhtml#acb7cbe0b971470fc583bb9da6fb5d86b">IsOperatorEnd()</a>, <a class="el" href="classNativeParserBase.xhtml#a18fe560152e0b824a8ad2b0990972923">IsOperatorPointer()</a>, <a class="el" href="classNativeParserBase.xhtml#a0e249f14e7e08e05d829924e5f4a0563a58514c87e1f017ad4860130de3d7fe86">otOperatorParentheses</a>, <a class="el" href="classNativeParserBase.xhtml#a0e249f14e7e08e05d829924e5f4a0563a210fa66c199df8da96f17e6f833ba40b">otOperatorPointer</a>, <a class="el" href="classNativeParserBase.xhtml#a0e249f14e7e08e05d829924e5f4a0563a49f9faaddddd4b054d84ab57dbfa98a6">otOperatorUndefined</a>, <a class="el" href="classNativeParserBase.xhtml#a12aae162661ce9aa643d40552d38b155a8a13933956c950d133e3feb897e058d0">pttClass</a>, <a class="el" href="classNativeParserBase.xhtml#a12aae162661ce9aa643d40552d38b155ade77216b9ec7507ba754fd14605516e5">pttFunction</a>, <a class="el" href="classNativeParserBase.xhtml#a12aae162661ce9aa643d40552d38b155ae4697edb3786b3cc445eb37c00ef89b3">pttNamespace</a>, <a class="el" href="classNativeParserBase.xhtml#a12aae162661ce9aa643d40552d38b155a3a570ba6912abaae180ec08aacc6d6cc">pttSearchText</a>, and <a class="el" href="nativeparser__base_8cpp.xhtml#a1c9f8c7ecc64a760dc3ac03706556ea9">TRACE</a>.</p>

<p>Referenced by <a class="el" href="classNativeParserBase.xhtml#a22419effe0b8f2d1b6b40ffb4d24c22e">BreakUpComponents()</a>.</p>

</div>
</div>
<a class="anchor" id="a35e7c059bb20010170ea4cfa79331e4b"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">wxString NativeParserBase::GetNextCCToken </td>
          <td>(</td>
          <td class="paramtype">const wxString &amp;&#160;</td>
          <td class="paramname"><em>line</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int &amp;&#160;</td>
          <td class="paramname"><em>startAt</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classNativeParserBase.xhtml#a0e249f14e7e08e05d829924e5f4a0563">OperatorType</a> &amp;&#160;</td>
          <td class="paramname"><em>tokenOperatorType</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>helper function to read the next CCToken, begin from the startAt, this point to a non-space character, and fetch the beginning identifier </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">startAt</td><td>this will be updated to the char after the identifier </td></tr>
    <tr><td class="paramname">tokenOperatorType</td><td>the type of the operator E.g. SomeMethod()-&gt; ^begin the returned wxString is "SomeMethod", the tokenOperatorType is pointer member access </td></tr>
  </table>
  </dd>
</dl>

<p>References <a class="el" href="classNativeParserBase.xhtml#ae561e148ddf33a1b12f2bcc207b0bbf5">AfterWhitespace()</a>, <a class="el" href="classNativeParserBase.xhtml#a8fc2c501707603f10de6fc381ecb5ad7">InsideToken()</a>, <a class="el" href="classNativeParserBase.xhtml#a133feced460dcdd2baae780d8361cd79">IsClosingBracket()</a>, <a class="el" href="classNativeParserBase.xhtml#ab4e29d422cd3ecf6a5fb028d56236248">IsOpeningBracket()</a>, <a class="el" href="classNativeParserBase.xhtml#aa46c34016b62f4f48eb71338395ab604">IsOperatorBegin()</a>, <a class="el" href="classNativeParserBase.xhtml#a0e249f14e7e08e05d829924e5f4a0563a58514c87e1f017ad4860130de3d7fe86">otOperatorParentheses</a>, <a class="el" href="classNativeParserBase.xhtml#a0e249f14e7e08e05d829924e5f4a0563af7502ae8810958998fbb492128325d36">otOperatorSquare</a>, <a class="el" href="classNativeParserBase.xhtml#a0e249f14e7e08e05d829924e5f4a0563ad6dd6ba4590df41d0613d5fb8c980e9d">otOperatorStar</a>, and <a class="el" href="nativeparser__base_8cpp.xhtml#a1c9f8c7ecc64a760dc3ac03706556ea9">TRACE</a>.</p>

<p>Referenced by <a class="el" href="classNativeParserBase.xhtml#a41a37e7e5c205f2316ca530675f25bd1">GetCCToken()</a>.</p>

</div>
</div>
<a class="anchor" id="a327bd9b943cb9cc7a5a45142e5c4bd12"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int NativeParserBase::GetTokenFromCurrentLine </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classTokenTree.xhtml">TokenTree</a> *&#160;</td>
          <td class="paramname"><em>tree</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="token_8h.xhtml#a10e4417d2285abddb9d4c2e97cddcec4">TokenIdxSet</a> &amp;&#160;</td>
          <td class="paramname"><em>tokens</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">size_t&#160;</td>
          <td class="paramname"><em>curLine</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const wxString &amp;&#160;</td>
          <td class="paramname"><em>file</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>used to get the correct token index in current line, e.g. class A { void test() { // start of the function body | }; // end of the function body }; </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">tokens</td><td>all current file's function and class, which cover the current line </td></tr>
    <tr><td class="paramname">curLine</td><td>the line of the current caret position </td></tr>
    <tr><td class="paramname">file</td><td>editor file name </td></tr>
  </table>
  </dd>
</dl>

<p>References <a class="el" href="classTokenTree.xhtml#a27fc4ea2842b026514e7b7f92a5e578e">TokenTree::at()</a>, <a class="el" href="classToken.xhtml#a3855e51abc37275ab7a16cfc6d666820">Token::DisplayName()</a>, <a class="el" href="classToken.xhtml#a28138312729e1a48abbd4473a30d0895">Token::GetFilename()</a>, <a class="el" href="classTokenTree.xhtml#aafddf7763095b77d63b2f289724876a5">TokenTree::InsertFileOrGetIndex()</a>, <a class="el" href="classToken.xhtml#ab01f001b0ff015f374c3631aba65bd57">Token::m_ImplFileIdx</a>, <a class="el" href="classToken.xhtml#a8ae34ce001ad24cd7e1d761be8feb61a">Token::m_ImplLine</a>, <a class="el" href="classToken.xhtml#a49474c5087079ad605f493b5bdf323d4">Token::m_ImplLineEnd</a>, <a class="el" href="classToken.xhtml#aefee5e6bc190532d7df5ef5c71c27928">Token::m_ImplLineStart</a>, <a class="el" href="classToken.xhtml#ad3a46f07f6d3d8851188695914a79907">Token::m_Index</a>, <a class="el" href="classToken.xhtml#aae52d5bca7a44fcd03345e405ab979b6">Token::m_TokenKind</a>, <a class="el" href="token_8h.xhtml#a7a47dce04185ce6008048622cc792f25a41b6019cea50c68b09d3aa4e927327aa">tkAnyFunction</a>, <a class="el" href="token_8h.xhtml#a7a47dce04185ce6008048622cc792f25a36d9f3721a93b1c4a60b1d50d0198af2">tkClass</a>, <a class="el" href="token_8h.xhtml#a7a47dce04185ce6008048622cc792f25a40d27978e246bbd62cdee00497bdc5f2">tkConstructor</a>, and <a class="el" href="nativeparser__base_8cpp.xhtml#a1c9f8c7ecc64a760dc3ac03706556ea9">TRACE</a>.</p>

<p>Referenced by <a class="el" href="classNativeParser.xhtml#a5e50f0d32a83f225645abf3173acfcb6">NativeParser::FindCurrentFunctionStart()</a>.</p>

</div>
</div>
<a class="anchor" id="a8fc2c501707603f10de6fc381ecb5ad7"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static bool NativeParserBase::InsideToken </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>startAt</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const wxString &amp;&#160;</td>
          <td class="paramname"><em>line</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>check whether the line[startAt] point to the identifier SomeMethod(arg1, arg2)-&gt;Method2() ^^^^^^^^^^ those index will return true </p>

<p>Referenced by <a class="el" href="classNativeParserBase.xhtml#a35e7c059bb20010170ea4cfa79331e4b">GetNextCCToken()</a>.</p>

</div>
</div>
<a class="anchor" id="a1470d04a041cc280dae90a5838fe87a6"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool NativeParserBase::IsChildOfUnnamedOrEnum </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classTokenTree.xhtml">TokenTree</a> *&#160;</td>
          <td class="paramname"><em>tree</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int&#160;</td>
          <td class="paramname"><em>targetIdx</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const int&#160;</td>
          <td class="paramname"><em>parentIdx</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>check to see if the token is an unnamed class or enum under the parent token </p>
<p>This function will internally recursive call itself. </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">tree</td><td>pointer to the <a class="el" href="classTokenTree.xhtml">TokenTree</a> </td></tr>
    <tr><td class="paramname">targetIdx</td><td>the checked token index </td></tr>
    <tr><td class="paramname">parentIdx</td><td>the search scope </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>bool true if success </dd></dl>

<p>References <a class="el" href="classTokenTree.xhtml#a27fc4ea2842b026514e7b7f92a5e578e">TokenTree::at()</a>, <a class="el" href="classToken.xhtml#a7b5dce935f88261f7e20580a599aeee2">Token::m_Children</a>, <a class="el" href="classToken.xhtml#acdc09e733cf2a6342767e714e8f86bc7">Token::m_IsAnonymous</a>, <a class="el" href="classToken.xhtml#aae52d5bca7a44fcd03345e405ab979b6">Token::m_TokenKind</a>, <a class="el" href="token_8h.xhtml#a7a47dce04185ce6008048622cc792f25a36d9f3721a93b1c4a60b1d50d0198af2">tkClass</a>, and <a class="el" href="token_8h.xhtml#a7a47dce04185ce6008048622cc792f25a5bf7196b13ca1ae329ed8a409c1c41c0">tkEnum</a>.</p>

</div>
</div>
<a class="anchor" id="a133feced460dcdd2baae780d8361cd79"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static bool NativeParserBase::IsClosingBracket </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>startAt</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const wxString &amp;&#160;</td>
          <td class="paramname"><em>line</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>check the current char (line[startAt]) is either ')' or ']' </p>

<p>Referenced by <a class="el" href="classNativeParserBase.xhtml#a70232a4a2168f656abe4c53ec9e0d9fc">FindCCTokenStart()</a>, and <a class="el" href="classNativeParserBase.xhtml#a35e7c059bb20010170ea4cfa79331e4b">GetNextCCToken()</a>.</p>

</div>
</div>
<a class="anchor" id="ab4e29d422cd3ecf6a5fb028d56236248"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static bool NativeParserBase::IsOpeningBracket </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>startAt</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const wxString &amp;&#160;</td>
          <td class="paramname"><em>line</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Referenced by <a class="el" href="classNativeParserBase.xhtml#a70232a4a2168f656abe4c53ec9e0d9fc">FindCCTokenStart()</a>, and <a class="el" href="classNativeParserBase.xhtml#a35e7c059bb20010170ea4cfa79331e4b">GetNextCCToken()</a>.</p>

</div>
</div>
<a class="anchor" id="aa46c34016b62f4f48eb71338395ab604"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static bool NativeParserBase::IsOperatorBegin </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>startAt</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const wxString &amp;&#160;</td>
          <td class="paramname"><em>line</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>check if startAt point to "-&gt;" or "::" operator </p>

<p>Referenced by <a class="el" href="classNativeParserBase.xhtml#a35e7c059bb20010170ea4cfa79331e4b">GetNextCCToken()</a>.</p>

</div>
</div>
<a class="anchor" id="aee2ec25f284973e0eabd9e85214123da"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static bool NativeParserBase::IsOperatorDot </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>startAt</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const wxString &amp;&#160;</td>
          <td class="paramname"><em>line</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>check whether line[startAt] is a dot character </p>

<p>Referenced by <a class="el" href="classNativeParserBase.xhtml#a70232a4a2168f656abe4c53ec9e0d9fc">FindCCTokenStart()</a>, and <a class="el" href="classNativeParserBase.xhtml#a41a37e7e5c205f2316ca530675f25bd1">GetCCToken()</a>.</p>

</div>
</div>
<a class="anchor" id="acb7cbe0b971470fc583bb9da6fb5d86b"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static bool NativeParserBase::IsOperatorEnd </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>startAt</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const wxString &amp;&#160;</td>
          <td class="paramname"><em>line</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>check startAt is at some character like: SomeNameSpace::SomeClass ^ here is a double colon SomeObject-&gt;SomeMethod ^ here is a pointer member access operator </p>

<p>Referenced by <a class="el" href="classNativeParserBase.xhtml#a70232a4a2168f656abe4c53ec9e0d9fc">FindCCTokenStart()</a>, and <a class="el" href="classNativeParserBase.xhtml#a41a37e7e5c205f2316ca530675f25bd1">GetCCToken()</a>.</p>

</div>
</div>
<a class="anchor" id="a18fe560152e0b824a8ad2b0990972923"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static bool NativeParserBase::IsOperatorPointer </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>startAt</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const wxString &amp;&#160;</td>
          <td class="paramname"><em>line</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Referenced by <a class="el" href="classNativeParserBase.xhtml#a41a37e7e5c205f2316ca530675f25bd1">GetCCToken()</a>.</p>

</div>
</div>
<a class="anchor" id="aa6a65f399a92022167ca261d5b9bd8cb"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool NativeParserBase::MatchText </td>
          <td>(</td>
          <td class="paramtype">const wxString &amp;&#160;</td>
          <td class="paramname"><em>text</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const wxString &amp;&#160;</td>
          <td class="paramname"><em>target</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>caseSens</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>isPrefix</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Referenced by <a class="el" href="classNativeParserBase.xhtml#a730bf4ebbf118d7c5707ee7f2023d519">GenerateResultSet()</a>.</p>

</div>
</div>
<a class="anchor" id="ab21edecad63324030d937d837b807aa2"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool NativeParserBase::MatchType </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="token_8h.xhtml#a7a47dce04185ce6008048622cc792f25">TokenKind</a>&#160;</td>
          <td class="paramname"><em>kind</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">short int&#160;</td>
          <td class="paramname"><em>kindMask</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Referenced by <a class="el" href="classNativeParserBase.xhtml#a730bf4ebbf118d7c5707ee7f2023d519">GenerateResultSet()</a>.</p>

</div>
</div>
<a class="anchor" id="ad87da701be8c83eb4b8128af5186e9b5"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool NativeParserBase::PrettyPrintToken </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classTokenTree.xhtml">TokenTree</a> *&#160;</td>
          <td class="paramname"><em>tree</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classToken.xhtml">Token</a> *&#160;</td>
          <td class="paramname"><em>token</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">wxString &amp;&#160;</td>
          <td class="paramname"><em>result</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>isRoot</em> = <code>true</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>For <a class="el" href="classNativeParserBase.xhtml#ac41cce829ef11e3f5807abc9c1ae9c3f">ComputeCallTip()</a> No critical section needed in this recursive function! All functions that call this recursive function, should already entered a critical section. </p>

<p>References <a class="el" href="classTokenTree.xhtml#a27fc4ea2842b026514e7b7f92a5e578e">TokenTree::at()</a>, <a class="el" href="classToken.xhtml#a7bb217770e9710de9b62fb6ded64749f">Token::GetFormattedArgs()</a>, <a class="el" href="classToken.xhtml#ad993bc78fb9aab6105daca3c104d7b5c">Token::m_BaseType</a>, <a class="el" href="classToken.xhtml#a1b939df520f020469a4023c9e121040f">Token::m_FullType</a>, <a class="el" href="classToken.xhtml#a6aecdba04b376ff62fbe05c286b61473">Token::m_IsConst</a>, <a class="el" href="classToken.xhtml#a51e3b8714d3b2ce1e8f3fc013b49fd3b">Token::m_IsNoExcept</a>, <a class="el" href="classToken.xhtml#a66d4391491a9244d9c0e060045d9cdee">Token::m_Name</a>, <a class="el" href="classToken.xhtml#ace8e68140906dd748fcc64ebf95bc014">Token::m_ParentIndex</a>, <a class="el" href="classToken.xhtml#aae52d5bca7a44fcd03345e405ab979b6">Token::m_TokenKind</a>, <a class="el" href="token_8h.xhtml#a7a47dce04185ce6008048622cc792f25a7de2d5fd3c37d89d4b68642076038071">tkAnyContainer</a>, <a class="el" href="token_8h.xhtml#a7a47dce04185ce6008048622cc792f25a41b6019cea50c68b09d3aa4e927327aa">tkAnyFunction</a>, <a class="el" href="token_8h.xhtml#a7a47dce04185ce6008048622cc792f25a36d9f3721a93b1c4a60b1d50d0198af2">tkClass</a>, <a class="el" href="token_8h.xhtml#a7a47dce04185ce6008048622cc792f25a40d27978e246bbd62cdee00497bdc5f2">tkConstructor</a>, <a class="el" href="token_8h.xhtml#a7a47dce04185ce6008048622cc792f25ac5aa27a18275a4327ef9fee99f5e43f1">tkDestructor</a>, <a class="el" href="token_8h.xhtml#a7a47dce04185ce6008048622cc792f25a5bf7196b13ca1ae329ed8a409c1c41c0">tkEnum</a>, <a class="el" href="token_8h.xhtml#a7a47dce04185ce6008048622cc792f25af243c38b30bb76a5cb385c5398edf629">tkEnumerator</a>, <a class="el" href="token_8h.xhtml#a7a47dce04185ce6008048622cc792f25a97f801385ef65b6be37004f93a75010c">tkFunction</a>, <a class="el" href="token_8h.xhtml#a7a47dce04185ce6008048622cc792f25aa0ca06d013acd15e8fd2be8cb57c2f20">tkMacroDef</a>, <a class="el" href="token_8h.xhtml#a7a47dce04185ce6008048622cc792f25aec950139b7ba880b9c85ee82f7ab7975">tkMacroUse</a>, <a class="el" href="token_8h.xhtml#a7a47dce04185ce6008048622cc792f25aa38450654b481800ad6cd006ebb0e98a">tkNamespace</a>, <a class="el" href="token_8h.xhtml#a7a47dce04185ce6008048622cc792f25acbcda253ac64b42fec3a2e9183dbbd4a">tkTypedef</a>, <a class="el" href="token_8h.xhtml#a7a47dce04185ce6008048622cc792f25a0e448bd8dcf479d8b55f0f9faf0594dd">tkUndefined</a>, and <a class="el" href="token_8h.xhtml#a7a47dce04185ce6008048622cc792f25ae8e186b68231e5889c97c05a22bde507">tkVariable</a>.</p>

<p>Referenced by <a class="el" href="classNativeParserBase.xhtml#ac41cce829ef11e3f5807abc9c1ae9c3f">ComputeCallTip()</a>.</p>

</div>
</div>
<a class="anchor" id="ad30855bda279972bc74fcce358984c0b"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void NativeParserBase::RemoveLastFunctionChildren </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classTokenTree.xhtml">TokenTree</a> *&#160;</td>
          <td class="paramname"><em>tree</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int &amp;&#160;</td>
          <td class="paramname"><em>lastFuncTokenIdx</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Remove the last function's children, when doing codecompletion in a function body, the function body up to the caret position was parsed, and the local variables defined in the function were recorded as the function's children. If the caret moves to another function, those children tokens previously recorded in the tokentree should be removed. </p>

<p>References <a class="el" href="classTokenTree.xhtml#a27fc4ea2842b026514e7b7f92a5e578e">TokenTree::at()</a>, <a class="el" href="cclogger_8h.xhtml#abeaaa24b840507a2dce16ea2306b7995">CC_LOCKER_TRACK_TT_MTX_LOCK</a>, <a class="el" href="cclogger_8h.xhtml#a12481e66c0dee266f5a45a7ba7565a17">CC_LOCKER_TRACK_TT_MTX_UNLOCK</a>, <a class="el" href="classToken.xhtml#a8a95686e7bc768d6113f4c9ba2fccd4b">Token::DeleteAllChildren()</a>, <a class="el" href="classToken.xhtml#aae52d5bca7a44fcd03345e405ab979b6">Token::m_TokenKind</a>, <a class="el" href="tokentree_8cpp.xhtml#a9280aad984604fac23895e7805450781">s_TokenTreeMutex</a>, and <a class="el" href="token_8h.xhtml#a7a47dce04185ce6008048622cc792f25a41b6019cea50c68b09d3aa4e927327aa">tkAnyFunction</a>.</p>

<p>Referenced by <a class="el" href="classNativeParser.xhtml#a2b47f79f6c74e82a519d14947e404596">NativeParser::MarkItemsByAI()</a>, and <a class="el" href="classNativeParser.xhtml#ad1d8cc2ff20ac775fa1b2d4d7b1279b6">NativeParser::SetParser()</a>.</p>

</div>
</div>
<a class="anchor" id="a93d5aa593e2432de7e3b5cf7629d5465"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void NativeParserBase::Reset </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Init cc search member variables </p>

<p>References <a class="el" href="structNativeParserBase_1_1ParserComponent.xhtml#a2319702bbd82d0d06e083712f97d0824">NativeParserBase::ParserComponent::Clear()</a>, and <a class="el" href="classNativeParserBase.xhtml#a92e847fa872207cf3dcffb1eabd6682f">m_LastComponent</a>.</p>

<p>Referenced by <a class="el" href="classNativeParser.xhtml#a2618cbda3ce2753820b47c57158e4548">NativeParser::InitCCSearchVariables()</a>.</p>

</div>
</div>
<a class="anchor" id="a2f413ee746298a9b4078470f12cd622d"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">size_t NativeParserBase::ResolveActualType </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classTokenTree.xhtml">TokenTree</a> *&#160;</td>
          <td class="paramname"><em>tree</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">wxString&#160;</td>
          <td class="paramname"><em>searchText</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="token_8h.xhtml#a10e4417d2285abddb9d4c2e97cddcec4">TokenIdxSet</a> &amp;&#160;</td>
          <td class="paramname"><em>searchScope</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="token_8h.xhtml#a10e4417d2285abddb9d4c2e97cddcec4">TokenIdxSet</a> &amp;&#160;</td>
          <td class="paramname"><em>result</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Get the Type information of the searchText string </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">searchText</td><td>input search text </td></tr>
    <tr><td class="paramname">searchScope</td><td>search scope defined in TokenIdxSet format </td></tr>
    <tr><td class="paramname">result</td><td>result token specify the Type of searchText </td></tr>
  </table>
  </dd>
</dl>

<p>References <a class="el" href="classNativeParserBase.xhtml#a22419effe0b8f2d1b6b40ffb4d24c22e">BreakUpComponents()</a>, <a class="el" href="cclogger_8h.xhtml#abeaaa24b840507a2dce16ea2306b7995">CC_LOCKER_TRACK_TT_MTX_LOCK</a>, <a class="el" href="cclogger_8h.xhtml#a12481e66c0dee266f5a45a7ba7565a17">CC_LOCKER_TRACK_TT_MTX_UNLOCK</a>, <a class="el" href="structNativeParserBase_1_1ParserComponent.xhtml#a9dbbe530bb70590c982d8000aa593e40">NativeParserBase::ParserComponent::component</a>, <a class="el" href="classNativeParserBase.xhtml#a730bf4ebbf118d7c5707ee7f2023d519">GenerateResultSet()</a>, and <a class="el" href="tokentree_8cpp.xhtml#a9280aad984604fac23895e7805450781">s_TokenTreeMutex</a>.</p>

<p>Referenced by <a class="el" href="classNativeParserBase.xhtml#a47bf1cda3eab2a2921e9f82c1cc0adb3">AddTemplateAlias()</a>, <a class="el" href="classNativeParserBase.xhtml#a6aa4aad75ff50dcf5eec5882728a337b">ResolveExpression()</a>, <a class="el" href="classNativeParserBase.xhtml#a2d1f66cf93ed2a22beb09db81cfc1fdf">ResolveOperator()</a>, and <a class="el" href="classNativeParserBase.xhtml#a20c4e8a051ef3ff1777a6d193c69366e">ResolveTemplateMap()</a>.</p>

</div>
</div>
<a class="anchor" id="a6aa4aad75ff50dcf5eec5882728a337b"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">size_t NativeParserBase::ResolveExpression </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classTokenTree.xhtml">TokenTree</a> *&#160;</td>
          <td class="paramname"><em>tree</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::queue&lt; <a class="el" href="structNativeParserBase_1_1ParserComponent.xhtml">ParserComponent</a> &gt;&#160;</td>
          <td class="paramname"><em>components</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="token_8h.xhtml#a10e4417d2285abddb9d4c2e97cddcec4">TokenIdxSet</a> &amp;&#160;</td>
          <td class="paramname"><em>searchScope</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="token_8h.xhtml#a10e4417d2285abddb9d4c2e97cddcec4">TokenIdxSet</a> &amp;&#160;</td>
          <td class="paramname"><em>result</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>caseSense</em> = <code>true</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>isPrefix</em> = <code>false</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>A statement(expression) is expressed by a <a class="el" href="structNativeParserBase_1_1ParserComponent.xhtml" title="a long statement can be divided to a ParserComponent chain. ">ParserComponent</a> queue We do a match from the left of the queue one by one.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">components</td><td>expression structure expressed in std::queue&lt;ParserComponent&gt; </td></tr>
    <tr><td class="paramname">searchScope</td><td>search scope defined by TokenIdxSet </td></tr>
    <tr><td class="paramname">caseSense</td><td>case sensitive match </td></tr>
    <tr><td class="paramname">isPrefix</td><td>match type( full match or prefix match) </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>result tokens count </dd></dl>

<p>References <a class="el" href="classNativeParserBase.xhtml#a2bc72779b9b888d91aec47f7ca943170">AddConstructors()</a>, <a class="el" href="classNativeParserBase.xhtml#a47bf1cda3eab2a2921e9f82c1cc0adb3">AddTemplateAlias()</a>, <a class="el" href="classTokenTree.xhtml#a27fc4ea2842b026514e7b7f92a5e578e">TokenTree::at()</a>, <a class="el" href="cclogger_8h.xhtml#abeaaa24b840507a2dce16ea2306b7995">CC_LOCKER_TRACK_TT_MTX_LOCK</a>, <a class="el" href="cclogger_8h.xhtml#a12481e66c0dee266f5a45a7ba7565a17">CC_LOCKER_TRACK_TT_MTX_UNLOCK</a>, <a class="el" href="classNativeParserBase.xhtml#a41940b0d68082c9c64067e6068e1d8ad">CollectSearchScopes()</a>, <a class="el" href="structNativeParserBase_1_1ParserComponent.xhtml#a9dbbe530bb70590c982d8000aa593e40">NativeParserBase::ParserComponent::component</a>, <a class="el" href="classCCLogger.xhtml#aa64a8ddd35ee6847500ee8afa9905d07">CCLogger::DebugLog()</a>, <a class="el" href="logmanager_8h.xhtml#afcd50562b2d380a60ad9e8b56dddc72d">F()</a>, <a class="el" href="classNativeParserBase.xhtml#a730bf4ebbf118d7c5707ee7f2023d519">GenerateResultSet()</a>, <a class="el" href="classCCLogger.xhtml#a8026c2410c4373264868a80352638508">CCLogger::Get()</a>, <a class="el" href="classToken.xhtml#ad993bc78fb9aab6105daca3c104d7b5c">Token::m_BaseType</a>, <a class="el" href="classToken.xhtml#ad3a46f07f6d3d8851188695914a79907">Token::m_Index</a>, <a class="el" href="classToken.xhtml#a817f77f62e9a1fa23035e8209cfdc0ba">Token::m_IsOperator</a>, <a class="el" href="classNativeParserBase.xhtml#a92e847fa872207cf3dcffb1eabd6682f">m_LastComponent</a>, <a class="el" href="classToken.xhtml#a66d4391491a9244d9c0e060045d9cdee">Token::m_Name</a>, <a class="el" href="classToken.xhtml#ace8e68140906dd748fcc64ebf95bc014">Token::m_ParentIndex</a>, <a class="el" href="classToken.xhtml#afb3cc9939698b041246f40fed80b13d6">Token::m_TemplateMap</a>, <a class="el" href="classNativeParserBase.xhtml#a44f138ba5a521aabb08770f53f2c4c25">m_TemplateMap</a>, <a class="el" href="classToken.xhtml#aae52d5bca7a44fcd03345e405ab979b6">Token::m_TokenKind</a>, <a class="el" href="classNativeParserBase.xhtml#a0e249f14e7e08e05d829924e5f4a0563a49f9faaddddd4b054d84ab57dbfa98a6">otOperatorUndefined</a>, <a class="el" href="classNativeParserBase.xhtml#a12aae162661ce9aa643d40552d38b155ae4697edb3786b3cc445eb37c00ef89b3">pttNamespace</a>, <a class="el" href="classNativeParserBase.xhtml#a12aae162661ce9aa643d40552d38b155a3a570ba6912abaae180ec08aacc6d6cc">pttSearchText</a>, <a class="el" href="classNativeParserBase.xhtml#a2f413ee746298a9b4078470f12cd622d">ResolveActualType()</a>, <a class="el" href="classNativeParserBase.xhtml#a2d1f66cf93ed2a22beb09db81cfc1fdf">ResolveOperator()</a>, <a class="el" href="classNativeParserBase.xhtml#a20c4e8a051ef3ff1777a6d193c69366e">ResolveTemplateMap()</a>, <a class="el" href="nativeparser_8cpp.xhtml#aae6889eb5da84bada7b9f050d803c61d">s_DebugSmartSense</a>, <a class="el" href="tokentree_8cpp.xhtml#a9280aad984604fac23895e7805450781">s_TokenTreeMutex</a>, <a class="el" href="token_8h.xhtml#a7a47dce04185ce6008048622cc792f25a36d9f3721a93b1c4a60b1d50d0198af2">tkClass</a>, <a class="el" href="structNativeParserBase_1_1ParserComponent.xhtml#a7a2d91111918c78d37d6f6ad0d9a0469">NativeParserBase::ParserComponent::tokenOperatorType</a>, and <a class="el" href="structNativeParserBase_1_1ParserComponent.xhtml#a14bf6b65cf68e34acf4b1f32f0b664a7">NativeParserBase::ParserComponent::tokenType</a>.</p>

<p>Referenced by <a class="el" href="classNativeParser.xhtml#a5903f8934267e168fda25f8415cbed67">NativeParser::AI()</a>.</p>

</div>
</div>
<a class="anchor" id="a2d1f66cf93ed2a22beb09db81cfc1fdf"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void NativeParserBase::ResolveOperator </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classTokenTree.xhtml">TokenTree</a> *&#160;</td>
          <td class="paramname"><em>tree</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classNativeParserBase.xhtml#a0e249f14e7e08e05d829924e5f4a0563">OperatorType</a> &amp;&#160;</td>
          <td class="paramname"><em>tokenOperatorType</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="token_8h.xhtml#a10e4417d2285abddb9d4c2e97cddcec4">TokenIdxSet</a> &amp;&#160;</td>
          <td class="paramname"><em>tokens</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="token_8h.xhtml#a10e4417d2285abddb9d4c2e97cddcec4">TokenIdxSet</a> &amp;&#160;</td>
          <td class="paramname"><em>searchScope</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="token_8h.xhtml#a10e4417d2285abddb9d4c2e97cddcec4">TokenIdxSet</a> &amp;&#160;</td>
          <td class="paramname"><em>result</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>used to solve the overloaded operator functions return type </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">tokenOperatorType</td><td>overloaded operator type, could be [], (), -&gt; </td></tr>
    <tr><td class="paramname">tokens</td><td>input tokens set </td></tr>
    <tr><td class="paramname">tree</td><td><a class="el" href="classToken.xhtml">Token</a> tree pointer </td></tr>
    <tr><td class="paramname">searchScope</td><td>search scope </td></tr>
    <tr><td class="paramname">result</td><td>output result </td></tr>
  </table>
  </dd>
</dl>

<p>References <a class="el" href="classNativeParserBase.xhtml#a47bf1cda3eab2a2921e9f82c1cc0adb3">AddTemplateAlias()</a>, <a class="el" href="classTokenTree.xhtml#a27fc4ea2842b026514e7b7f92a5e578e">TokenTree::at()</a>, <a class="el" href="cclogger_8h.xhtml#abeaaa24b840507a2dce16ea2306b7995">CC_LOCKER_TRACK_TT_MTX_LOCK</a>, <a class="el" href="cclogger_8h.xhtml#a12481e66c0dee266f5a45a7ba7565a17">CC_LOCKER_TRACK_TT_MTX_UNLOCK</a>, <a class="el" href="classNativeParserBase.xhtml#a41940b0d68082c9c64067e6068e1d8ad">CollectSearchScopes()</a>, <a class="el" href="classTokenTree.xhtml#a47cda80c0a725b341cc79d228dda4bfa">TokenTree::empty()</a>, <a class="el" href="classNativeParserBase.xhtml#a730bf4ebbf118d7c5707ee7f2023d519">GenerateResultSet()</a>, <a class="el" href="classToken.xhtml#ad993bc78fb9aab6105daca3c104d7b5c">Token::m_BaseType</a>, <a class="el" href="classToken.xhtml#aae52d5bca7a44fcd03345e405ab979b6">Token::m_TokenKind</a>, <a class="el" href="classNativeParserBase.xhtml#a0e249f14e7e08e05d829924e5f4a0563a58514c87e1f017ad4860130de3d7fe86">otOperatorParentheses</a>, <a class="el" href="classNativeParserBase.xhtml#a0e249f14e7e08e05d829924e5f4a0563a210fa66c199df8da96f17e6f833ba40b">otOperatorPointer</a>, <a class="el" href="classNativeParserBase.xhtml#a0e249f14e7e08e05d829924e5f4a0563af7502ae8810958998fbb492128325d36">otOperatorSquare</a>, <a class="el" href="classNativeParserBase.xhtml#a0e249f14e7e08e05d829924e5f4a0563ad6dd6ba4590df41d0613d5fb8c980e9d">otOperatorStar</a>, <a class="el" href="classNativeParserBase.xhtml#a0e249f14e7e08e05d829924e5f4a0563a49f9faaddddd4b054d84ab57dbfa98a6">otOperatorUndefined</a>, <a class="el" href="classNativeParserBase.xhtml#a2f413ee746298a9b4078470f12cd622d">ResolveActualType()</a>, <a class="el" href="classNativeParserBase.xhtml#a20c4e8a051ef3ff1777a6d193c69366e">ResolveTemplateMap()</a>, <a class="el" href="tokentree_8cpp.xhtml#a9280aad984604fac23895e7805450781">s_TokenTreeMutex</a>, <a class="el" href="token_8h.xhtml#a7a47dce04185ce6008048622cc792f25a36d9f3721a93b1c4a60b1d50d0198af2">tkClass</a>, and <a class="el" href="token_8h.xhtml#a7a47dce04185ce6008048622cc792f25acbcda253ac64b42fec3a2e9183dbbd4a">tkTypedef</a>.</p>

<p>Referenced by <a class="el" href="classNativeParserBase.xhtml#a6aa4aad75ff50dcf5eec5882728a337b">ResolveExpression()</a>.</p>

</div>
</div>
<a class="anchor" id="a20c4e8a051ef3ff1777a6d193c69366e"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void NativeParserBase::ResolveTemplateMap </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classTokenTree.xhtml">TokenTree</a> *&#160;</td>
          <td class="paramname"><em>tree</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const wxString &amp;&#160;</td>
          <td class="paramname"><em>searchStr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="token_8h.xhtml#a10e4417d2285abddb9d4c2e97cddcec4">TokenIdxSet</a> &amp;&#160;</td>
          <td class="paramname"><em>actualTypeScope</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="token_8h.xhtml#a10e4417d2285abddb9d4c2e97cddcec4">TokenIdxSet</a> &amp;&#160;</td>
          <td class="paramname"><em>initialScope</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>resolve template map [formal parameter] to [actual parameter] </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">searchStr</td><td>input Search String </td></tr>
    <tr><td class="paramname">actualtypeScope</td><td><a class="el" href="classToken.xhtml">Token</a> type(actual parameter) </td></tr>
    <tr><td class="paramname">initialScope</td><td>search scope </td></tr>
  </table>
  </dd>
</dl>

<p>References <a class="el" href="classNativeParserBase.xhtml#a44f138ba5a521aabb08770f53f2c4c25">m_TemplateMap</a>, and <a class="el" href="classNativeParserBase.xhtml#a2f413ee746298a9b4078470f12cd622d">ResolveActualType()</a>.</p>

<p>Referenced by <a class="el" href="classNativeParserBase.xhtml#a6aa4aad75ff50dcf5eec5882728a337b">ResolveExpression()</a>, and <a class="el" href="classNativeParserBase.xhtml#a2d1f66cf93ed2a22beb09db81cfc1fdf">ResolveOperator()</a>.</p>

</div>
</div>
<h2 class="groupheader">Member Data Documentation</h2>
<a class="anchor" id="a92e847fa872207cf3dcffb1eabd6682f"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structNativeParserBase_1_1ParserComponent.xhtml">ParserComponent</a> NativeParserBase::m_LastComponent</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Referenced by <a class="el" href="classNativeParserBase.xhtml#a93d5aa593e2432de7e3b5cf7629d5465">Reset()</a>, and <a class="el" href="classNativeParserBase.xhtml#a6aa4aad75ff50dcf5eec5882728a337b">ResolveExpression()</a>.</p>

</div>
</div>
<a class="anchor" id="a44f138ba5a521aabb08770f53f2c4c25"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::map&lt;wxString, wxString&gt; NativeParserBase::m_TemplateMap</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Referenced by <a class="el" href="classNativeParserBase.xhtml#a47bf1cda3eab2a2921e9f82c1cc0adb3">AddTemplateAlias()</a>, <a class="el" href="classNativeParserBase.xhtml#a6aa4aad75ff50dcf5eec5882728a337b">ResolveExpression()</a>, and <a class="el" href="classNativeParserBase.xhtml#a20c4e8a051ef3ff1777a6d193c69366e">ResolveTemplateMap()</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li><a class="el" href="nativeparser__base_8h_source.xhtml">nativeparser_base.h</a></li>
<li><a class="el" href="nativeparser__base_8cpp.xhtml">nativeparser_base.cpp</a></li>
</ul>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.8
</small></address>
</body>
</html>
