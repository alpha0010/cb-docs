<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.8"/>
<title>Code::Blocks: Parser Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">Code::Blocks
   &#160;<span id="projectnumber">SVN r10054</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.8 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li><a href="files.xhtml"><span>Files</span></a></li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.xhtml"><span>Class&#160;List</span></a></li>
      <li><a href="classes.xhtml"><span>Class&#160;Index</span></a></li>
      <li><a href="inherits.xhtml"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.xhtml"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pro-methods">Protected Member Functions</a> &#124;
<a href="#pro-attribs">Protected Attributes</a> &#124;
<a href="#pri-methods">Private Member Functions</a> &#124;
<a href="#pri-attribs">Private Attributes</a> &#124;
<a href="#friends">Friends</a> &#124;
<a href="classParser-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">Parser Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p><a class="el" href="classParser.xhtml" title="Parser class holds all the tokens of a C::B project. ">Parser</a> class holds all the tokens of a C::B project.  
 <a href="classParser.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="parser_8h_source.xhtml">parser.h</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for Parser:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="classParser__inherit__graph.svg" width="238" height="1219"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Collaboration diagram for Parser:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="classParser__coll__graph.svg" width="2719" height="3574"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a9df478b8520f8de438fee16c89699698"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classParser.xhtml#a9df478b8520f8de438fee16c89699698">Parser</a> (wxEvtHandler *parent, <a class="el" href="classcbProject.xhtml">cbProject</a> *project)</td></tr>
<tr class="separator:a9df478b8520f8de438fee16c89699698"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3e658b5917a93a3ef648050d060e3a93"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classParser.xhtml#a3e658b5917a93a3ef648050d060e3a93">~Parser</a> ()</td></tr>
<tr class="separator:a3e658b5917a93a3ef648050d060e3a93"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab42c86fbfa0aff5b7a8a74c6b2887149"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classParser.xhtml#ab42c86fbfa0aff5b7a8a74c6b2887149">AddBatchParse</a> (const <a class="el" href="parser__base_8h.xhtml#a4a97d33272eda8bee1eac1dfea444421">StringList</a> &amp;filenames)</td></tr>
<tr class="separator:ab42c86fbfa0aff5b7a8a74c6b2887149"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afa2d7839c772641fd0295931c0335fea"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classParser.xhtml#afa2d7839c772641fd0295931c0335fea">AddParse</a> (const wxString &amp;filename)</td></tr>
<tr class="separator:afa2d7839c772641fd0295931c0335fea"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a09426eaad51e2aa2035a4a76f885faff"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classParser.xhtml#a09426eaad51e2aa2035a4a76f885faff">AddPredefinedMacros</a> (const wxString &amp;defs)</td></tr>
<tr class="separator:a09426eaad51e2aa2035a4a76f885faff"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad7cf493c5f8e249d37e78efe9b960f80"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classParser.xhtml#ad7cf493c5f8e249d37e78efe9b960f80">UpdateParsingProject</a> (<a class="el" href="classcbProject.xhtml">cbProject</a> *project)</td></tr>
<tr class="separator:ad7cf493c5f8e249d37e78efe9b960f80"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aac6db2d4ee8b2bbd1c1001579a9e666b"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classParser.xhtml#aac6db2d4ee8b2bbd1c1001579a9e666b">ParseBuffer</a> (const wxString &amp;buffer, bool isLocal, bool bufferSkipBlocks=false, bool isTemp=false, const wxString &amp;filename=wxEmptyString, int parentIdx=-1, int initLine=0)</td></tr>
<tr class="separator:aac6db2d4ee8b2bbd1c1001579a9e666b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2b85a22a75aee829bf43d868db254e42"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classParser.xhtml#a2b85a22a75aee829bf43d868db254e42">ParseBufferForFunctions</a> (const wxString &amp;buffer)</td></tr>
<tr class="separator:a2b85a22a75aee829bf43d868db254e42"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a17e5c3945696cffb3c8972d08b0a8c28"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classParser.xhtml#a17e5c3945696cffb3c8972d08b0a8c28">ParseBufferForNamespaces</a> (const wxString &amp;buffer, <a class="el" href="parserthread_8h.xhtml#adc7acf1313fbbb9b63b163e550d8c439">NameSpaceVec</a> &amp;result)</td></tr>
<tr class="separator:a17e5c3945696cffb3c8972d08b0a8c28"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae409a924afc0d76c3d1145c3b92ba699"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classParser.xhtml#ae409a924afc0d76c3d1145c3b92ba699">ParseBufferForUsingNamespace</a> (const wxString &amp;buffer, wxArrayString &amp;result, bool bufferSkipBlocks=true)</td></tr>
<tr class="separator:ae409a924afc0d76c3d1145c3b92ba699"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adb1f2528cd77409fb980b98e8452ce43"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classParser.xhtml#adb1f2528cd77409fb980b98e8452ce43">Reparse</a> (const wxString &amp;filename, bool isLocal=true)</td></tr>
<tr class="separator:adb1f2528cd77409fb980b98e8452ce43"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a92a938fa9e549e687a2320de2a04f7f1"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classParser.xhtml#a92a938fa9e549e687a2320de2a04f7f1">AddFile</a> (const wxString &amp;filename, <a class="el" href="classcbProject.xhtml">cbProject</a> *project, bool isLocal=true)</td></tr>
<tr class="separator:a92a938fa9e549e687a2320de2a04f7f1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac1fdb0eac6eae359e04aa530fcd0fa1b"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classParser.xhtml#ac1fdb0eac6eae359e04aa530fcd0fa1b">RemoveFile</a> (const wxString &amp;filename)</td></tr>
<tr class="separator:ac1fdb0eac6eae359e04aa530fcd0fa1b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a17ef9514f7abfe531311cd2fd05ab76c"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classParser.xhtml#a17ef9514f7abfe531311cd2fd05ab76c">IsFileParsed</a> (const wxString &amp;filename)</td></tr>
<tr class="separator:a17ef9514f7abfe531311cd2fd05ab76c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2369584c371c106ae594153818f9031a"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classParser.xhtml#a2369584c371c106ae594153818f9031a">Done</a> ()</td></tr>
<tr class="separator:a2369584c371c106ae594153818f9031a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afaa8b89804686eb4f631aafb6eb9e536"><td class="memItemLeft" align="right" valign="top">virtual wxString&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classParser.xhtml#afaa8b89804686eb4f631aafb6eb9e536">NotDoneReason</a> ()</td></tr>
<tr class="separator:afaa8b89804686eb4f631aafb6eb9e536"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classParserBase"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classParserBase')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classParserBase.xhtml">ParserBase</a></td></tr>
<tr class="memitem:a81fda60c9ed62d5e092822e05c22eb89 inherit pub_methods_classParserBase"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classParserBase.xhtml#a81fda60c9ed62d5e092822e05c22eb89">ParserBase</a> ()</td></tr>
<tr class="separator:a81fda60c9ed62d5e092822e05c22eb89 inherit pub_methods_classParserBase"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acdda3ff46645e46f0714e7232dd3640a inherit pub_methods_classParserBase"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classParserBase.xhtml#acdda3ff46645e46f0714e7232dd3640a">~ParserBase</a> ()</td></tr>
<tr class="separator:acdda3ff46645e46f0714e7232dd3640a inherit pub_methods_classParserBase"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a99c0a2930819231e2e33ac800060598d inherit pub_methods_classParserBase"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classParserBase.xhtml#a99c0a2930819231e2e33ac800060598d">AddBatchParse</a> (cb_unused const <a class="el" href="parser__base_8h.xhtml#a4a97d33272eda8bee1eac1dfea444421">StringList</a> &amp;filenames)</td></tr>
<tr class="separator:a99c0a2930819231e2e33ac800060598d inherit pub_methods_classParserBase"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6f99912d369ac5a44398026a60dc8a49 inherit pub_methods_classParserBase"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classParserBase.xhtml#a6f99912d369ac5a44398026a60dc8a49">AddParse</a> (cb_unused const wxString &amp;filename)</td></tr>
<tr class="separator:a6f99912d369ac5a44398026a60dc8a49 inherit pub_methods_classParserBase"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab4563440f52415fdc6c497563a032229 inherit pub_methods_classParserBase"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classParserBase.xhtml#ab4563440f52415fdc6c497563a032229">AddPredefinedMacros</a> (cb_unused const wxString &amp;defs)</td></tr>
<tr class="separator:ab4563440f52415fdc6c497563a032229 inherit pub_methods_classParserBase"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad711602b4eb398c89782eb21b8cf5aec inherit pub_methods_classParserBase"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classParserBase.xhtml#ad711602b4eb398c89782eb21b8cf5aec">UpdateParsingProject</a> (cb_unused <a class="el" href="classcbProject.xhtml">cbProject</a> *project)</td></tr>
<tr class="separator:ad711602b4eb398c89782eb21b8cf5aec inherit pub_methods_classParserBase"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a993db2d8bc74eb527c8282ab87315482 inherit pub_methods_classParserBase"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classParserBase.xhtml#a993db2d8bc74eb527c8282ab87315482">ParseBufferForFunctions</a> (cb_unused const wxString &amp;buffer)</td></tr>
<tr class="separator:a993db2d8bc74eb527c8282ab87315482 inherit pub_methods_classParserBase"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a00b313c9af6b1a4bd96f8cb982e7a1c2 inherit pub_methods_classParserBase"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classParserBase.xhtml#a00b313c9af6b1a4bd96f8cb982e7a1c2">ParseBufferForNamespaces</a> (cb_unused const wxString &amp;buffer, cb_unused <a class="el" href="parserthread_8h.xhtml#adc7acf1313fbbb9b63b163e550d8c439">NameSpaceVec</a> &amp;result)</td></tr>
<tr class="separator:a00b313c9af6b1a4bd96f8cb982e7a1c2 inherit pub_methods_classParserBase"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a38d22969963fc0c554d6b4442b119620 inherit pub_methods_classParserBase"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classParserBase.xhtml#a38d22969963fc0c554d6b4442b119620">ParseBufferForUsingNamespace</a> (cb_unused const wxString &amp;buffer, cb_unused wxArrayString &amp;result, cb_unused bool bufferSkipBlocks=true)</td></tr>
<tr class="separator:a38d22969963fc0c554d6b4442b119620 inherit pub_methods_classParserBase"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9fd086e9a8919884ad6dd7adbc4bc979 inherit pub_methods_classParserBase"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classParserBase.xhtml#a9fd086e9a8919884ad6dd7adbc4bc979">Reparse</a> (cb_unused const wxString &amp;filename, cb_unused bool isLocal=true)</td></tr>
<tr class="separator:a9fd086e9a8919884ad6dd7adbc4bc979 inherit pub_methods_classParserBase"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ace7c9e941f7fd7f5c56a10e3b439d133 inherit pub_methods_classParserBase"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classParserBase.xhtml#ace7c9e941f7fd7f5c56a10e3b439d133">AddFile</a> (cb_unused const wxString &amp;filename, cb_unused <a class="el" href="classcbProject.xhtml">cbProject</a> *project, cb_unused bool isLocal=true)</td></tr>
<tr class="separator:ace7c9e941f7fd7f5c56a10e3b439d133 inherit pub_methods_classParserBase"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a528459d974571901b816bf0e4e7c653d inherit pub_methods_classParserBase"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classParserBase.xhtml#a528459d974571901b816bf0e4e7c653d">RemoveFile</a> (cb_unused const wxString &amp;filename)</td></tr>
<tr class="separator:a528459d974571901b816bf0e4e7c653d inherit pub_methods_classParserBase"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a56db47dbb455d057e9042aba077d2865 inherit pub_methods_classParserBase"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classParserBase.xhtml#a56db47dbb455d057e9042aba077d2865">IsFileParsed</a> (cb_unused const wxString &amp;filename)</td></tr>
<tr class="separator:a56db47dbb455d057e9042aba077d2865 inherit pub_methods_classParserBase"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aac0664f6c437a9ab7216690d853b85a8 inherit pub_methods_classParserBase"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classTokenTree.xhtml">TokenTree</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classParserBase.xhtml#aac0664f6c437a9ab7216690d853b85a8">GetTokenTree</a> ()</td></tr>
<tr class="separator:aac0664f6c437a9ab7216690d853b85a8 inherit pub_methods_classParserBase"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7a9fc89fed60c689adee8d416cb44232 inherit pub_methods_classParserBase"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classTokenTree.xhtml">TokenTree</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classParserBase.xhtml#a7a9fc89fed60c689adee8d416cb44232">GetTempTokenTree</a> ()</td></tr>
<tr class="separator:a7a9fc89fed60c689adee8d416cb44232 inherit pub_methods_classParserBase"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8f55b99586b1671988ad86ca8b7d5119 inherit pub_methods_classParserBase"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classParserBase.xhtml#a8f55b99586b1671988ad86ca8b7d5119">AddIncludeDir</a> (const wxString &amp;dir)</td></tr>
<tr class="separator:a8f55b99586b1671988ad86ca8b7d5119 inherit pub_methods_classParserBase"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a055b3244589a96f23ac1c4d646609169 inherit pub_methods_classParserBase"><td class="memItemLeft" align="right" valign="top">const wxArrayString &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classParserBase.xhtml#a055b3244589a96f23ac1c4d646609169">GetIncludeDirs</a> () const </td></tr>
<tr class="separator:a055b3244589a96f23ac1c4d646609169 inherit pub_methods_classParserBase"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad5c31b01677c436d2339a10d24cfd719 inherit pub_methods_classParserBase"><td class="memItemLeft" align="right" valign="top">wxString&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classParserBase.xhtml#ad5c31b01677c436d2339a10d24cfd719">GetFullFileName</a> (const wxString &amp;src, const wxString &amp;tgt, bool isGlobal)</td></tr>
<tr class="separator:ad5c31b01677c436d2339a10d24cfd719 inherit pub_methods_classParserBase"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a237ffc28e35f122fe62518fd67324eaa inherit pub_methods_classParserBase"><td class="memItemLeft" align="right" valign="top">wxArrayString&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classParserBase.xhtml#a237ffc28e35f122fe62518fd67324eaa">FindFileInIncludeDirs</a> (const wxString &amp;file, bool firstonly=false)</td></tr>
<tr class="separator:a237ffc28e35f122fe62518fd67324eaa inherit pub_methods_classParserBase"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa6b2dd71b882462974f62c7883dc2ab7 inherit pub_methods_classParserBase"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="structParserOptions.xhtml">ParserOptions</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classParserBase.xhtml#aa6b2dd71b882462974f62c7883dc2ab7">Options</a> ()</td></tr>
<tr class="separator:aa6b2dd71b882462974f62c7883dc2ab7 inherit pub_methods_classParserBase"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aefac51387313f915a254c74164dbbaa7 inherit pub_methods_classParserBase"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="parser__base_8h.xhtml#structBrowserOptions">BrowserOptions</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classParserBase.xhtml#aefac51387313f915a254c74164dbbaa7">ClassBrowserOptions</a> ()</td></tr>
<tr class="separator:aefac51387313f915a254c74164dbbaa7 inherit pub_methods_classParserBase"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae6a65a90c7ae93ec37a19ad9ff8aa7dd inherit pub_methods_classParserBase"><td class="memItemLeft" align="right" valign="top">size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classParserBase.xhtml#ae6a65a90c7ae93ec37a19ad9ff8aa7dd">FindTokensInFile</a> (const wxString &amp;filename, <a class="el" href="token_8h.xhtml#a10e4417d2285abddb9d4c2e97cddcec4">TokenIdxSet</a> &amp;result, short int kindMask)</td></tr>
<tr class="separator:ae6a65a90c7ae93ec37a19ad9ff8aa7dd inherit pub_methods_classParserBase"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-methods"></a>
Protected Member Functions</h2></td></tr>
<tr class="memitem:a8f079c421397e2932f1148f4f6922f24"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classParser.xhtml#a8f079c421397e2932f1148f4f6922f24">StartStopWatch</a> ()</td></tr>
<tr class="separator:a8f079c421397e2932f1148f4f6922f24"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0cd3bdff42d8ed15b36fc15925481a2f"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classParser.xhtml#a0cd3bdff42d8ed15b36fc15925481a2f">EndStopWatch</a> ()</td></tr>
<tr class="separator:a0cd3bdff42d8ed15b36fc15925481a2f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aca7bd44e0f0557a78968540c6fe18bdf"><td class="memItemLeft" align="right" valign="top">unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classParser.xhtml#aca7bd44e0f0557a78968540c6fe18bdf">GetMaxThreads</a> () const </td></tr>
<tr class="separator:aca7bd44e0f0557a78968540c6fe18bdf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6b921aa0d93bce972abc5da93b990c09"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classParser.xhtml#a6b921aa0d93bce972abc5da93b990c09">SetMaxThreads</a> (unsigned int max)</td></tr>
<tr class="separator:a6b921aa0d93bce972abc5da93b990c09"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a58fb7a53e004350257a8456b90b98ad0"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classParser.xhtml#a58fb7a53e004350257a8456b90b98ad0">Parse</a> (const wxString &amp;filename, bool isLocal=true, bool locked=false)</td></tr>
<tr class="separator:a58fb7a53e004350257a8456b90b98ad0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abcd16c1c26ebd573e427be7e2b805550"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classParser.xhtml#abcd16c1c26ebd573e427be7e2b805550">ReparseModifiedFiles</a> ()</td></tr>
<tr class="separator:abcd16c1c26ebd573e427be7e2b805550"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9019bf0250a6e34645f9936666ab69c3"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classParser.xhtml#a9019bf0250a6e34645f9936666ab69c3">TerminateAllThreads</a> ()</td></tr>
<tr class="separator:a9019bf0250a6e34645f9936666ab69c3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1fdd7a2304dc66b5a469ca0ebf26476f"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classParser.xhtml#a1fdd7a2304dc66b5a469ca0ebf26476f">OnAllThreadsDone</a> (<a class="el" href="classCodeBlocksEvent.xhtml">CodeBlocksEvent</a> &amp;event)</td></tr>
<tr class="separator:a1fdd7a2304dc66b5a469ca0ebf26476f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9cddb64c980c9d1c2452d6609d8eef01"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classParser.xhtml#a9cddb64c980c9d1c2452d6609d8eef01">OnReparseTimer</a> (wxTimerEvent &amp;event)</td></tr>
<tr class="separator:a9cddb64c980c9d1c2452d6609d8eef01"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7edb662c9b2f5c17b26a0bd5a3632c08"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classParser.xhtml#a7edb662c9b2f5c17b26a0bd5a3632c08">OnBatchTimer</a> (wxTimerEvent &amp;event)</td></tr>
<tr class="separator:a7edb662c9b2f5c17b26a0bd5a3632c08"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac136343aacc619b30abd81bd63071b36"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classParser.xhtml#ac136343aacc619b30abd81bd63071b36">ProcessParserEvent</a> (<a class="el" href="namespaceParserCommon.xhtml#a906bcf9de1a0a3c11b86f21417aa4e46">ParserCommon::ParserState</a> state, int id, const wxString &amp;info=wxEmptyString)</td></tr>
<tr class="separator:ac136343aacc619b30abd81bd63071b36"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a42ffcab924450198773284e92d815a46"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classParser.xhtml#a42ffcab924450198773284e92d815a46">ReadOptions</a> ()</td></tr>
<tr class="separator:a42ffcab924450198773284e92d815a46"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac3b94e554dbd08c69032aa0089db12d2"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classParser.xhtml#ac3b94e554dbd08c69032aa0089db12d2">WriteOptions</a> ()</td></tr>
<tr class="separator:ac3b94e554dbd08c69032aa0089db12d2"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-attribs"></a>
Protected Attributes</h2></td></tr>
<tr class="memitem:a5f6b75859cc9e0726737e539d86b41f8"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classParser.xhtml#a5f6b75859cc9e0726737e539d86b41f8">m_UsingCache</a></td></tr>
<tr class="memdesc:a5f6b75859cc9e0726737e539d86b41f8"><td class="mdescLeft">&#160;</td><td class="mdescRight">true if loaded from cache  <a href="#a5f6b75859cc9e0726737e539d86b41f8">More...</a><br /></td></tr>
<tr class="separator:a5f6b75859cc9e0726737e539d86b41f8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a27d19a56ed3c1ddef912fce48c073eeb"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classcbThreadPool.xhtml">cbThreadPool</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classParser.xhtml#a27d19a56ed3c1ddef912fce48c073eeb">m_Pool</a></td></tr>
<tr class="separator:a27d19a56ed3c1ddef912fce48c073eeb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7617aec20a5d11485bb21f09a10dfa26"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classParser.xhtml#a7617aec20a5d11485bb21f09a10dfa26">m_IsParsing</a></td></tr>
<tr class="separator:a7617aec20a5d11485bb21f09a10dfa26"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac7e3c42c7de74654ecf032eb79489b0a"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classParser.xhtml#ac7e3c42c7de74654ecf032eb79489b0a">m_NeedsReparse</a></td></tr>
<tr class="separator:ac7e3c42c7de74654ecf032eb79489b0a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2825c1f61de125655eb1cae70484f553"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classParser.xhtml#a2825c1f61de125655eb1cae70484f553">m_IsFirstBatch</a></td></tr>
<tr class="separator:a2825c1f61de125655eb1cae70484f553"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pro_attribs_classParserBase"><td colspan="2" onclick="javascript:toggleInherit('pro_attribs_classParserBase')"><img src="closed.png" alt="-"/>&#160;Protected Attributes inherited from <a class="el" href="classParserBase.xhtml">ParserBase</a></td></tr>
<tr class="memitem:af05ded7dad930983651da07d711f6893 inherit pro_attribs_classParserBase"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classTokenTree.xhtml">TokenTree</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classParserBase.xhtml#af05ded7dad930983651da07d711f6893">m_TokenTree</a></td></tr>
<tr class="separator:af05ded7dad930983651da07d711f6893 inherit pro_attribs_classParserBase"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3e34b5fe6c4a1331b6d12b0e0018b5b3 inherit pro_attribs_classParserBase"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classTokenTree.xhtml">TokenTree</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classParserBase.xhtml#a3e34b5fe6c4a1331b6d12b0e0018b5b3">m_TempTokenTree</a></td></tr>
<tr class="separator:a3e34b5fe6c4a1331b6d12b0e0018b5b3 inherit pro_attribs_classParserBase"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3828abb4026c3b6580ac15e72e3108c1 inherit pro_attribs_classParserBase"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structParserOptions.xhtml">ParserOptions</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classParserBase.xhtml#a3828abb4026c3b6580ac15e72e3108c1">m_Options</a></td></tr>
<tr class="separator:a3828abb4026c3b6580ac15e72e3108c1 inherit pro_attribs_classParserBase"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adbdd04fb56cd207d9bc88f8ee2edea16 inherit pro_attribs_classParserBase"><td class="memItemLeft" align="right" valign="top"><a class="el" href="parser__base_8h.xhtml#structBrowserOptions">BrowserOptions</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classParserBase.xhtml#adbdd04fb56cd207d9bc88f8ee2edea16">m_BrowserOptions</a></td></tr>
<tr class="separator:adbdd04fb56cd207d9bc88f8ee2edea16 inherit pro_attribs_classParserBase"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pri-methods"></a>
Private Member Functions</h2></td></tr>
<tr class="memitem:a4beaecd1d8a59fbc0dd2181e94b49950"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classParser.xhtml#a4beaecd1d8a59fbc0dd2181e94b49950">ParseFile</a> (const wxString &amp;filename, bool isGlobal, bool locked=false)</td></tr>
<tr class="separator:a4beaecd1d8a59fbc0dd2181e94b49950"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7f6a2ebd907836dd1361d83b30f06997"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classParser.xhtml#a7f6a2ebd907836dd1361d83b30f06997">ConnectEvents</a> ()</td></tr>
<tr class="separator:a7f6a2ebd907836dd1361d83b30f06997"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:add2772018ff041223f0d259031c03caa"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classParser.xhtml#add2772018ff041223f0d259031c03caa">DisconnectEvents</a> ()</td></tr>
<tr class="separator:add2772018ff041223f0d259031c03caa"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pri-attribs"></a>
Private Attributes</h2></td></tr>
<tr class="memitem:ac1517bceecc8307a316efa3cd50ea737"><td class="memItemLeft" align="right" valign="top">wxEvtHandler *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classParser.xhtml#ac1517bceecc8307a316efa3cd50ea737">m_Parent</a></td></tr>
<tr class="separator:ac1517bceecc8307a316efa3cd50ea737"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5399150d5cc2fa860c22ec5c32558387"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classcbProject.xhtml">cbProject</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classParser.xhtml#a5399150d5cc2fa860c22ec5c32558387">m_Project</a></td></tr>
<tr class="separator:a5399150d5cc2fa860c22ec5c32558387"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a13cd20a37a57b8332165c391de5599cc"><td class="memItemLeft" align="right" valign="top">wxTimer&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classParser.xhtml#a13cd20a37a57b8332165c391de5599cc">m_ReparseTimer</a></td></tr>
<tr class="separator:a13cd20a37a57b8332165c391de5599cc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8234474f039ee0e446b14d9a83621408"><td class="memItemLeft" align="right" valign="top">wxTimer&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classParser.xhtml#a8234474f039ee0e446b14d9a83621408">m_BatchTimer</a></td></tr>
<tr class="separator:a8234474f039ee0e446b14d9a83621408"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9d855431f272646dbfe85684be0c8d11"><td class="memItemLeft" align="right" valign="top">wxStopWatch&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classParser.xhtml#a9d855431f272646dbfe85684be0c8d11">m_StopWatch</a></td></tr>
<tr class="separator:a9d855431f272646dbfe85684be0c8d11"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3b38dbcca9a3b45f6f5bc3a5ac7c5517"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classParser.xhtml#a3b38dbcca9a3b45f6f5bc3a5ac7c5517">m_StopWatchRunning</a></td></tr>
<tr class="separator:a3b38dbcca9a3b45f6f5bc3a5ac7c5517"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a48c80adea5ecbd599af8d965f02e3c12"><td class="memItemLeft" align="right" valign="top">long&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classParser.xhtml#a48c80adea5ecbd599af8d965f02e3c12">m_LastStopWatchTime</a></td></tr>
<tr class="separator:a48c80adea5ecbd599af8d965f02e3c12"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4ab9ff764c91e11bd2ee60c922c5c5c1"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classParser.xhtml#a4ab9ff764c91e11bd2ee60c922c5c5c1">m_IgnoreThreadEvents</a></td></tr>
<tr class="separator:a4ab9ff764c91e11bd2ee60c922c5c5c1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae91f77262222605c3a61f040ef32cd0d"><td class="memItemLeft" align="right" valign="top"><a class="el" href="parser__base_8h.xhtml#a4a97d33272eda8bee1eac1dfea444421">StringList</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classParser.xhtml#ae91f77262222605c3a61f040ef32cd0d">m_BatchParseFiles</a></td></tr>
<tr class="memdesc:ae91f77262222605c3a61f040ef32cd0d"><td class="mdescLeft">&#160;</td><td class="mdescRight">All other batch parse files, like the normal headers/sources.  <a href="#ae91f77262222605c3a61f040ef32cd0d">More...</a><br /></td></tr>
<tr class="separator:ae91f77262222605c3a61f040ef32cd0d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0a1fe770c243a22ad3b803e25c9e500f"><td class="memItemLeft" align="right" valign="top">wxString&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classParser.xhtml#a0a1fe770c243a22ad3b803e25c9e500f">m_PredefinedMacros</a></td></tr>
<tr class="memdesc:a0a1fe770c243a22ad3b803e25c9e500f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Pre-defined macros, its a buffer queried from the compiler command line.  <a href="#a0a1fe770c243a22ad3b803e25c9e500f">More...</a><br /></td></tr>
<tr class="separator:a0a1fe770c243a22ad3b803e25c9e500f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad92f097330a0dbf7e7e72a628460d716"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classParser.xhtml#ad92f097330a0dbf7e7e72a628460d716">m_IsBatchParseDone</a></td></tr>
<tr class="separator:ad92f097330a0dbf7e7e72a628460d716"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a86979fcf5073cd8cd253b680f31b4ea1"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespaceParserCommon.xhtml#a906bcf9de1a0a3c11b86f21417aa4e46">ParserCommon::ParserState</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classParser.xhtml#a86979fcf5073cd8cd253b680f31b4ea1">m_ParserState</a></td></tr>
<tr class="memdesc:a86979fcf5073cd8cd253b680f31b4ea1"><td class="mdescLeft">&#160;</td><td class="mdescRight">indicated the current state the parser is in  <a href="#a86979fcf5073cd8cd253b680f31b4ea1">More...</a><br /></td></tr>
<tr class="separator:a86979fcf5073cd8cd253b680f31b4ea1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a08da9255e6d61ef22c39b1a988ef18f7"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classParser.xhtml#a08da9255e6d61ef22c39b1a988ef18f7">m_NeedMarkFileAsLocal</a></td></tr>
<tr class="separator:a08da9255e6d61ef22c39b1a988ef18f7"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="friends"></a>
Friends</h2></td></tr>
<tr class="memitem:a449351e5f291ed1932cb8965276e66a4"><td class="memItemLeft" align="right" valign="top">class&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classParser.xhtml#a449351e5f291ed1932cb8965276e66a4">ParserThreadedTask</a></td></tr>
<tr class="separator:a449351e5f291ed1932cb8965276e66a4"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p><a class="el" href="classParser.xhtml" title="Parser class holds all the tokens of a C::B project. ">Parser</a> class holds all the tokens of a C::B project. </p>
<p><a class="el" href="classParser.xhtml" title="Parser class holds all the tokens of a C::B project. ">Parser</a> class contains the <a class="el" href="classTokenTree.xhtml">TokenTree</a> which is a trie structure to record the token information. For details about trie, see <a href="http://en.wikipedia.org/wiki/Trie">http://en.wikipedia.org/wiki/Trie</a> The parser class manages ParserThreads in a ThreadPool. A <a class="el" href="classParserThread.xhtml" title="A parser threaded task, which can be assigned to the thread task pool, and run there. ">ParserThread</a> object is associated with a single source file. Batch parse mode means we have a lot of files to be parsed, so a lot of ParserThreads were generated and added to the ThreadPool, and finally, the <a class="el" href="classParserThread.xhtml" title="A parser threaded task, which can be assigned to the thread task pool, and run there. ">ParserThread</a> was executed by ThreadPool. </p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="a9df478b8520f8de438fee16c89699698"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">Parser::Parser </td>
          <td>(</td>
          <td class="paramtype">wxEvtHandler *&#160;</td>
          <td class="paramname"><em>parent</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classcbProject.xhtml">cbProject</a> *&#160;</td>
          <td class="paramname"><em>project</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>constructor </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">parent</td><td>which is actually a <a class="el" href="classNativeParser.xhtml" title="NativeParser class is just like a manager class to control Parser objects. ">NativeParser</a> object </td></tr>
    <tr><td class="paramname">project</td><td>the C::B project associated with the current <a class="el" href="classParser.xhtml" title="Parser class holds all the tokens of a C::B project. ">Parser</a> </td></tr>
  </table>
  </dd>
</dl>

<p>References <a class="el" href="classParser.xhtml#a7f6a2ebd907836dd1361d83b30f06997">ConnectEvents()</a>, and <a class="el" href="classParser.xhtml#a42ffcab924450198773284e92d815a46">ReadOptions()</a>.</p>

</div>
</div>
<a class="anchor" id="a3e658b5917a93a3ef648050d060e3a93"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">Parser::~Parser </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>destructor </p>

<p>References <a class="el" href="cclogger_8h.xhtml#a3685f6e5fe9b865b115feb7ddce265ab">CC_LOCKER_TRACK_P_MTX_LOCK</a>, <a class="el" href="cclogger_8h.xhtml#a00ce2e12a8ca191ad19c47430b51f1bd">CC_LOCKER_TRACK_P_MTX_UNLOCK</a>, <a class="el" href="classParser.xhtml#add2772018ff041223f0d259031c03caa">DisconnectEvents()</a>, <a class="el" href="namespaceParserCommon.xhtml#a7e1960d297fd0c5bd023e85adf7af550">ParserCommon::s_CurrentParser</a>, <a class="el" href="namespaceParserCommon.xhtml#af6c9a9f18f1aa08cc1e0f57892ce2c0f">ParserCommon::s_ParserMutex</a>, and <a class="el" href="classParser.xhtml#a9019bf0250a6e34645f9936666ab69c3">TerminateAllThreads()</a>.</p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a class="anchor" id="ab42c86fbfa0aff5b7a8a74c6b2887149"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Parser::AddBatchParse </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="parser__base_8h.xhtml#a4a97d33272eda8bee1eac1dfea444421">StringList</a> &amp;&#160;</td>
          <td class="paramname"><em>filenames</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Add files to batch parse mode, internally. The files will be parsed sequentially. </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">filenames</td><td>input files name array </td></tr>
  </table>
  </dd>
</dl>

<p>References <a class="el" href="cclogger_8h.xhtml#a3685f6e5fe9b865b115feb7ddce265ab">CC_LOCKER_TRACK_P_MTX_LOCK</a>, <a class="el" href="cclogger_8h.xhtml#a00ce2e12a8ca191ad19c47430b51f1bd">CC_LOCKER_TRACK_P_MTX_UNLOCK</a>, <a class="el" href="classParser.xhtml#ae91f77262222605c3a61f040ef32cd0d">m_BatchParseFiles</a>, <a class="el" href="classParser.xhtml#a8234474f039ee0e446b14d9a83621408">m_BatchTimer</a>, <a class="el" href="classParser.xhtml#a7617aec20a5d11485bb21f09a10dfa26">m_IsParsing</a>, <a class="el" href="classParser.xhtml#a86979fcf5073cd8cd253b680f31b4ea1">m_ParserState</a>, <a class="el" href="namespaceParserCommon.xhtml#ae17e1879cb7c59b8a1a1d309e0c00553">ParserCommon::PARSER_BATCHPARSE_TIMER_DELAY</a>, <a class="el" href="namespaceParserCommon.xhtml#a906bcf9de1a0a3c11b86f21417aa4e46a0bdd24af8650729167d888f4d25dedc1">ParserCommon::ptCreateParser</a>, <a class="el" href="namespaceParserCommon.xhtml#a906bcf9de1a0a3c11b86f21417aa4e46ae5aa572d64566771fef713eb85c9c162">ParserCommon::ptUndefined</a>, <a class="el" href="namespaceParserCommon.xhtml#af6c9a9f18f1aa08cc1e0f57892ce2c0f">ParserCommon::s_ParserMutex</a>, and <a class="el" href="parser_8cpp.xhtml#a1c9f8c7ecc64a760dc3ac03706556ea9">TRACE</a>.</p>

</div>
</div>
<a class="anchor" id="a92a938fa9e549e687a2320de2a04f7f1"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool Parser::AddFile </td>
          <td>(</td>
          <td class="paramtype">const wxString &amp;&#160;</td>
          <td class="paramname"><em>filename</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classcbProject.xhtml">cbProject</a> *&#160;</td>
          <td class="paramname"><em>project</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>isLocal</em> = <code>true</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>this usually happens when user adds some files to an existing project, it just use <a class="el" href="classParser.xhtml#afa2d7839c772641fd0295931c0335fea">AddParse()</a> function internally to add the file. and switch the ParserState to <a class="el" href="namespaceParserCommon.xhtml#a906bcf9de1a0a3c11b86f21417aa4e46af6cfc9c5161a3b977178969c70ac108f">ParserCommon::ptAddFileToParser</a>. </p>

<p>References <a class="el" href="classParser.xhtml#afa2d7839c772641fd0295931c0335fea">AddParse()</a>, <a class="el" href="classParser.xhtml#a17ef9514f7abfe531311cd2fd05ab76c">IsFileParsed()</a>, <a class="el" href="classParser.xhtml#a08da9255e6d61ef22c39b1a988ef18f7">m_NeedMarkFileAsLocal</a>, <a class="el" href="classParser.xhtml#a86979fcf5073cd8cd253b680f31b4ea1">m_ParserState</a>, <a class="el" href="classParser.xhtml#a5399150d5cc2fa860c22ec5c32558387">m_Project</a>, <a class="el" href="namespaceParserCommon.xhtml#a906bcf9de1a0a3c11b86f21417aa4e46af6cfc9c5161a3b977178969c70ac108f">ParserCommon::ptAddFileToParser</a>, and <a class="el" href="namespaceParserCommon.xhtml#a906bcf9de1a0a3c11b86f21417aa4e46ae5aa572d64566771fef713eb85c9c162">ParserCommon::ptUndefined</a>.</p>

</div>
</div>
<a class="anchor" id="afa2d7839c772641fd0295931c0335fea"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Parser::AddParse </td>
          <td>(</td>
          <td class="paramtype">const wxString &amp;&#160;</td>
          <td class="paramname"><em>filename</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Add one file to Batch mode Parsing, this is the bridge between the main thread and the thread pool, after this function call, the file(Parserthread) will be run from the thread pool. </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">filenames</td><td>input file name </td></tr>
  </table>
  </dd>
</dl>

<p>References <a class="el" href="cclogger_8h.xhtml#a3685f6e5fe9b865b115feb7ddce265ab">CC_LOCKER_TRACK_P_MTX_LOCK</a>, <a class="el" href="cclogger_8h.xhtml#a00ce2e12a8ca191ad19c47430b51f1bd">CC_LOCKER_TRACK_P_MTX_UNLOCK</a>, <a class="el" href="classParser.xhtml#ae91f77262222605c3a61f040ef32cd0d">m_BatchParseFiles</a>, <a class="el" href="classParser.xhtml#a8234474f039ee0e446b14d9a83621408">m_BatchTimer</a>, <a class="el" href="classParser.xhtml#a7617aec20a5d11485bb21f09a10dfa26">m_IsParsing</a>, <a class="el" href="namespaceParserCommon.xhtml#ae17e1879cb7c59b8a1a1d309e0c00553">ParserCommon::PARSER_BATCHPARSE_TIMER_DELAY</a>, <a class="el" href="namespaceParserCommon.xhtml#af6c9a9f18f1aa08cc1e0f57892ce2c0f">ParserCommon::s_ParserMutex</a>, and <a class="el" href="parser_8cpp.xhtml#a1c9f8c7ecc64a760dc3ac03706556ea9">TRACE</a>.</p>

<p>Referenced by <a class="el" href="classParser.xhtml#a92a938fa9e549e687a2320de2a04f7f1">AddFile()</a>, and <a class="el" href="classParser.xhtml#abcd16c1c26ebd573e427be7e2b805550">ReparseModifiedFiles()</a>.</p>

</div>
</div>
<a class="anchor" id="a09426eaad51e2aa2035a4a76f885faff"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Parser::AddPredefinedMacros </td>
          <td>(</td>
          <td class="paramtype">const wxString &amp;&#160;</td>
          <td class="paramname"><em>defs</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>the predefined macro definition string was collected from the GCC command line, this function add the string to an internal m_PredefinedMacros, and switch the ParserState </p>

<p>References <a class="el" href="cclogger_8h.xhtml#a3685f6e5fe9b865b115feb7ddce265ab">CC_LOCKER_TRACK_P_MTX_LOCK</a>, <a class="el" href="cclogger_8h.xhtml#a00ce2e12a8ca191ad19c47430b51f1bd">CC_LOCKER_TRACK_P_MTX_UNLOCK</a>, <a class="el" href="classParser.xhtml#a8234474f039ee0e446b14d9a83621408">m_BatchTimer</a>, <a class="el" href="classParser.xhtml#a7617aec20a5d11485bb21f09a10dfa26">m_IsParsing</a>, <a class="el" href="classParser.xhtml#a86979fcf5073cd8cd253b680f31b4ea1">m_ParserState</a>, <a class="el" href="classParser.xhtml#a0a1fe770c243a22ad3b803e25c9e500f">m_PredefinedMacros</a>, <a class="el" href="namespaceParserCommon.xhtml#ae17e1879cb7c59b8a1a1d309e0c00553">ParserCommon::PARSER_BATCHPARSE_TIMER_DELAY</a>, <a class="el" href="namespaceParserCommon.xhtml#a906bcf9de1a0a3c11b86f21417aa4e46a0bdd24af8650729167d888f4d25dedc1">ParserCommon::ptCreateParser</a>, <a class="el" href="namespaceParserCommon.xhtml#a906bcf9de1a0a3c11b86f21417aa4e46ae5aa572d64566771fef713eb85c9c162">ParserCommon::ptUndefined</a>, <a class="el" href="namespaceParserCommon.xhtml#af6c9a9f18f1aa08cc1e0f57892ce2c0f">ParserCommon::s_ParserMutex</a>, and <a class="el" href="parser_8cpp.xhtml#a1c9f8c7ecc64a760dc3ac03706556ea9">TRACE</a>.</p>

</div>
</div>
<a class="anchor" id="a7f6a2ebd907836dd1361d83b30f06997"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Parser::ConnectEvents </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>References <a class="el" href="sdk__events_8h.xhtml#a556a76ea1283420db1c53cb9bc2da1bf">cbEVT_THREADTASK_ALLDONE</a>, <a class="el" href="classcbThreadPool.xhtml#aa18516a470a7b247852b520d81cc1912">cbThreadPool::GetId()</a>, <a class="el" href="classParser.xhtml#a8234474f039ee0e446b14d9a83621408">m_BatchTimer</a>, <a class="el" href="classParser.xhtml#a27d19a56ed3c1ddef912fce48c073eeb">m_Pool</a>, <a class="el" href="classParser.xhtml#a13cd20a37a57b8332165c391de5599cc">m_ReparseTimer</a>, <a class="el" href="classParser.xhtml#a1fdd7a2304dc66b5a469ca0ebf26476f">OnAllThreadsDone()</a>, <a class="el" href="classParser.xhtml#a7edb662c9b2f5c17b26a0bd5a3632c08">OnBatchTimer()</a>, and <a class="el" href="classParser.xhtml#a9cddb64c980c9d1c2452d6609d8eef01">OnReparseTimer()</a>.</p>

<p>Referenced by <a class="el" href="classParser.xhtml#a9df478b8520f8de438fee16c89699698">Parser()</a>.</p>

</div>
</div>
<a class="anchor" id="add2772018ff041223f0d259031c03caa"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Parser::DisconnectEvents </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>References <a class="el" href="sdk__events_8h.xhtml#a556a76ea1283420db1c53cb9bc2da1bf">cbEVT_THREADTASK_ALLDONE</a>, <a class="el" href="classcbThreadPool.xhtml#aa18516a470a7b247852b520d81cc1912">cbThreadPool::GetId()</a>, <a class="el" href="classParser.xhtml#a8234474f039ee0e446b14d9a83621408">m_BatchTimer</a>, <a class="el" href="classParser.xhtml#a27d19a56ed3c1ddef912fce48c073eeb">m_Pool</a>, <a class="el" href="classParser.xhtml#a13cd20a37a57b8332165c391de5599cc">m_ReparseTimer</a>, <a class="el" href="classParser.xhtml#a1fdd7a2304dc66b5a469ca0ebf26476f">OnAllThreadsDone()</a>, <a class="el" href="classParser.xhtml#a7edb662c9b2f5c17b26a0bd5a3632c08">OnBatchTimer()</a>, and <a class="el" href="classParser.xhtml#a9cddb64c980c9d1c2452d6609d8eef01">OnReparseTimer()</a>.</p>

<p>Referenced by <a class="el" href="classParser.xhtml#a3e658b5917a93a3ef648050d060e3a93">~Parser()</a>.</p>

</div>
</div>
<a class="anchor" id="a2369584c371c106ae594153818f9031a"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool Parser::Done </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>check to see whether <a class="el" href="classParser.xhtml" title="Parser class holds all the tokens of a C::B project. ">Parser</a> is in Idle mode, there is no work need to be done in the <a class="el" href="classParser.xhtml" title="Parser class holds all the tokens of a C::B project. ">Parser</a> </p>

<p>Reimplemented from <a class="el" href="classParserBase.xhtml#ad27e0c9c7076e7dff106743f4076436c">ParserBase</a>.</p>

<p>References <a class="el" href="cclogger_8h.xhtml#a3685f6e5fe9b865b115feb7ddce265ab">CC_LOCKER_TRACK_P_MTX_LOCK</a>, <a class="el" href="cclogger_8h.xhtml#a00ce2e12a8ca191ad19c47430b51f1bd">CC_LOCKER_TRACK_P_MTX_UNLOCK</a>, <a class="el" href="classcbThreadPool.xhtml#ac19335d0513fa16c010ac61d3f458d05">cbThreadPool::Done()</a>, <a class="el" href="classParser.xhtml#ae91f77262222605c3a61f040ef32cd0d">m_BatchParseFiles</a>, <a class="el" href="classParser.xhtml#a08da9255e6d61ef22c39b1a988ef18f7">m_NeedMarkFileAsLocal</a>, <a class="el" href="classParser.xhtml#a27d19a56ed3c1ddef912fce48c073eeb">m_Pool</a>, <a class="el" href="classParser.xhtml#a0a1fe770c243a22ad3b803e25c9e500f">m_PredefinedMacros</a>, and <a class="el" href="namespaceParserCommon.xhtml#af6c9a9f18f1aa08cc1e0f57892ce2c0f">ParserCommon::s_ParserMutex</a>.</p>

<p>Referenced by <a class="el" href="classParser.xhtml#adb1f2528cd77409fb980b98e8452ce43">Reparse()</a>, <a class="el" href="classParser.xhtml#abcd16c1c26ebd573e427be7e2b805550">ReparseModifiedFiles()</a>, and <a class="el" href="classParser.xhtml#ad7cf493c5f8e249d37e78efe9b960f80">UpdateParsingProject()</a>.</p>

</div>
</div>
<a class="anchor" id="a0cd3bdff42d8ed15b36fc15925481a2f"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Parser::EndStopWatch </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>References <a class="el" href="classParser.xhtml#ad92f097330a0dbf7e7e72a628460d716">m_IsBatchParseDone</a>, <a class="el" href="classParser.xhtml#a48c80adea5ecbd599af8d965f02e3c12">m_LastStopWatchTime</a>, <a class="el" href="classParser.xhtml#a9d855431f272646dbfe85684be0c8d11">m_StopWatch</a>, and <a class="el" href="classParser.xhtml#a3b38dbcca9a3b45f6f5bc3a5ac7c5517">m_StopWatchRunning</a>.</p>

<p>Referenced by <a class="el" href="classParser.xhtml#a1fdd7a2304dc66b5a469ca0ebf26476f">OnAllThreadsDone()</a>.</p>

</div>
</div>
<a class="anchor" id="aca7bd44e0f0557a78968540c6fe18bdf"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int Parser::GetMaxThreads </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Node: Currently, the max. concurrent <a class="el" href="classParserThread.xhtml" title="A parser threaded task, which can be assigned to the thread task pool, and run there. ">ParserThread</a> number should be ONE, CC does not support multiply threads parsing. </p>

<p>References <a class="el" href="classcbThreadPool.xhtml#a1a28b9a6ac7fb3dff239ded95ca2b597">cbThreadPool::GetConcurrentThreads()</a>, and <a class="el" href="classParser.xhtml#a27d19a56ed3c1ddef912fce48c073eeb">m_Pool</a>.</p>

</div>
</div>
<a class="anchor" id="a17ef9514f7abfe531311cd2fd05ab76c"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool Parser::IsFileParsed </td>
          <td>(</td>
          <td class="paramtype">const wxString &amp;&#160;</td>
          <td class="paramname"><em>filename</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>check to see a file is parsed already, it first check the <a class="el" href="classTokenTree.xhtml">TokenTree</a> to see whether it has the specified file, but if a file is already queued (put in m_BatchParseFiles), we regard it as already parsed. </p>

<p>References <a class="el" href="cclogger_8h.xhtml#a3685f6e5fe9b865b115feb7ddce265ab">CC_LOCKER_TRACK_P_MTX_LOCK</a>, <a class="el" href="cclogger_8h.xhtml#a00ce2e12a8ca191ad19c47430b51f1bd">CC_LOCKER_TRACK_P_MTX_UNLOCK</a>, <a class="el" href="cclogger_8h.xhtml#abeaaa24b840507a2dce16ea2306b7995">CC_LOCKER_TRACK_TT_MTX_LOCK</a>, <a class="el" href="cclogger_8h.xhtml#a12481e66c0dee266f5a45a7ba7565a17">CC_LOCKER_TRACK_TT_MTX_UNLOCK</a>, <a class="el" href="classTokenTree.xhtml#a2b51672d8287e25eedd109597010e371">TokenTree::IsFileParsed()</a>, <a class="el" href="classParser.xhtml#ae91f77262222605c3a61f040ef32cd0d">m_BatchParseFiles</a>, <a class="el" href="classParserBase.xhtml#af05ded7dad930983651da07d711f6893">ParserBase::m_TokenTree</a>, <a class="el" href="namespaceParserCommon.xhtml#af6c9a9f18f1aa08cc1e0f57892ce2c0f">ParserCommon::s_ParserMutex</a>, and <a class="el" href="tokentree_8cpp.xhtml#a9280aad984604fac23895e7805450781">s_TokenTreeMutex</a>.</p>

<p>Referenced by <a class="el" href="classParser.xhtml#a92a938fa9e549e687a2320de2a04f7f1">AddFile()</a>.</p>

</div>
</div>
<a class="anchor" id="afaa8b89804686eb4f631aafb6eb9e536"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">wxString Parser::NotDoneReason </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>if the <a class="el" href="classParser.xhtml" title="Parser class holds all the tokens of a C::B project. ">Parser</a> is not in Idle mode, show which need to be done </p>

<p>Reimplemented from <a class="el" href="classParserBase.xhtml#ac423ee4f64978bacd51645d5ee22ecd8">ParserBase</a>.</p>

<p>References <a class="el" href="cclogger_8h.xhtml#a3685f6e5fe9b865b115feb7ddce265ab">CC_LOCKER_TRACK_P_MTX_LOCK</a>, <a class="el" href="cclogger_8h.xhtml#a00ce2e12a8ca191ad19c47430b51f1bd">CC_LOCKER_TRACK_P_MTX_UNLOCK</a>, <a class="el" href="classcbThreadPool.xhtml#ac19335d0513fa16c010ac61d3f458d05">cbThreadPool::Done()</a>, <a class="el" href="classParser.xhtml#ae91f77262222605c3a61f040ef32cd0d">m_BatchParseFiles</a>, <a class="el" href="classParser.xhtml#a08da9255e6d61ef22c39b1a988ef18f7">m_NeedMarkFileAsLocal</a>, <a class="el" href="classParser.xhtml#a27d19a56ed3c1ddef912fce48c073eeb">m_Pool</a>, <a class="el" href="classParser.xhtml#a0a1fe770c243a22ad3b803e25c9e500f">m_PredefinedMacros</a>, and <a class="el" href="namespaceParserCommon.xhtml#af6c9a9f18f1aa08cc1e0f57892ce2c0f">ParserCommon::s_ParserMutex</a>.</p>

<p>Referenced by <a class="el" href="classParser.xhtml#adb1f2528cd77409fb980b98e8452ce43">Reparse()</a>, <a class="el" href="classParser.xhtml#abcd16c1c26ebd573e427be7e2b805550">ReparseModifiedFiles()</a>, and <a class="el" href="classParser.xhtml#ad7cf493c5f8e249d37e78efe9b960f80">UpdateParsingProject()</a>.</p>

</div>
</div>
<a class="anchor" id="a1fdd7a2304dc66b5a469ca0ebf26476f"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Parser::OnAllThreadsDone </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classCodeBlocksEvent.xhtml">CodeBlocksEvent</a> &amp;&#160;</td>
          <td class="paramname"><em>event</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>When a ThreadPool batch parse stage is done, it will issue a cbEVT_THREADTASK_ALLDONE message. In some situations this event will be triggered, such as:</p><ul>
<li>after "Priority" header parsing</li>
<li>batch parsing for general (normal) source files</li>
<li>system header files parsing </li>
</ul>

<p>References <a class="el" href="classcbThreadPool.xhtml#a25eaa422e66369ebf78bcb0dbd36029f">cbThreadPool::AddTask()</a>, <a class="el" href="cbexception_8h.xhtml#aeec64d86b96037e2ed72a0cde22f9c6f">cbThrow</a>, <a class="el" href="cclogger_8h.xhtml#abeaaa24b840507a2dce16ea2306b7995">CC_LOCKER_TRACK_TT_MTX_LOCK</a>, <a class="el" href="cclogger_8h.xhtml#a12481e66c0dee266f5a45a7ba7565a17">CC_LOCKER_TRACK_TT_MTX_UNLOCK</a>, <a class="el" href="classCCLogger.xhtml#aa64a8ddd35ee6847500ee8afa9905d07">CCLogger::DebugLog()</a>, <a class="el" href="classParser.xhtml#a0cd3bdff42d8ed15b36fc15925481a2f">EndStopWatch()</a>, <a class="el" href="classCCLogger.xhtml#a8026c2410c4373264868a80352638508">CCLogger::Get()</a>, <a class="el" href="classTokenTree.xhtml#a094b4d273260b2a25071c055d6808fc8">TokenTree::GetFileMapSize()</a>, <a class="el" href="classcbThreadPool.xhtml#aa18516a470a7b247852b520d81cc1912">cbThreadPool::GetId()</a>, <a class="el" href="classCompileTargetBase.xhtml#a85d1e1963e93e5da19a4f07993bfab27">CompileTargetBase::GetTitle()</a>, <a class="el" href="namespaceParserCommon.xhtml#ae2f351b7348bc14f44138e121575be6a">ParserCommon::idParserEnd</a>, <a class="el" href="classManager.xhtml#a7f3b917f0c41e8ee07129259cef1f058">Manager::IsAppShuttingDown()</a>, <a class="el" href="classParser.xhtml#ae91f77262222605c3a61f040ef32cd0d">m_BatchParseFiles</a>, <a class="el" href="classParser.xhtml#a8234474f039ee0e446b14d9a83621408">m_BatchTimer</a>, <a class="el" href="classParser.xhtml#a4ab9ff764c91e11bd2ee60c922c5c5c1">m_IgnoreThreadEvents</a>, <a class="el" href="classParser.xhtml#ad92f097330a0dbf7e7e72a628460d716">m_IsBatchParseDone</a>, <a class="el" href="classParser.xhtml#a7617aec20a5d11485bb21f09a10dfa26">m_IsParsing</a>, <a class="el" href="classParser.xhtml#a48c80adea5ecbd599af8d965f02e3c12">m_LastStopWatchTime</a>, <a class="el" href="classParser.xhtml#a08da9255e6d61ef22c39b1a988ef18f7">m_NeedMarkFileAsLocal</a>, <a class="el" href="classParser.xhtml#ac7e3c42c7de74654ecf032eb79489b0a">m_NeedsReparse</a>, <a class="el" href="classParser.xhtml#a86979fcf5073cd8cd253b680f31b4ea1">m_ParserState</a>, <a class="el" href="classParser.xhtml#a27d19a56ed3c1ddef912fce48c073eeb">m_Pool</a>, <a class="el" href="classParser.xhtml#a0a1fe770c243a22ad3b803e25c9e500f">m_PredefinedMacros</a>, <a class="el" href="classParser.xhtml#a5399150d5cc2fa860c22ec5c32558387">m_Project</a>, <a class="el" href="classParserBase.xhtml#af05ded7dad930983651da07d711f6893">ParserBase::m_TokenTree</a>, <a class="el" href="namespaceParserCommon.xhtml#a628e0264d85bcb8707b8cd2306c47daf">ParserCommon::PARSER_BATCHPARSE_TIMER_RUN_IMMEDIATELY</a>, <a class="el" href="classParser.xhtml#ac136343aacc619b30abd81bd63071b36">ProcessParserEvent()</a>, <a class="el" href="namespaceParserCommon.xhtml#a906bcf9de1a0a3c11b86f21417aa4e46af6cfc9c5161a3b977178969c70ac108f">ParserCommon::ptAddFileToParser</a>, <a class="el" href="namespaceParserCommon.xhtml#a906bcf9de1a0a3c11b86f21417aa4e46a0bdd24af8650729167d888f4d25dedc1">ParserCommon::ptCreateParser</a>, <a class="el" href="namespaceParserCommon.xhtml#a906bcf9de1a0a3c11b86f21417aa4e46ae5aa572d64566771fef713eb85c9c162">ParserCommon::ptUndefined</a>, <a class="el" href="classTokenTree.xhtml#a7fb129b096b4ed19df69083597e5f0fa">TokenTree::realsize()</a>, <a class="el" href="namespaceParserCommon.xhtml#a7e1960d297fd0c5bd023e85adf7af550">ParserCommon::s_CurrentParser</a>, <a class="el" href="tokentree_8cpp.xhtml#a9280aad984604fac23895e7805450781">s_TokenTreeMutex</a>, and <a class="el" href="parser_8cpp.xhtml#a1c9f8c7ecc64a760dc3ac03706556ea9">TRACE</a>.</p>

<p>Referenced by <a class="el" href="classParser.xhtml#a7f6a2ebd907836dd1361d83b30f06997">ConnectEvents()</a>, and <a class="el" href="classParser.xhtml#add2772018ff041223f0d259031c03caa">DisconnectEvents()</a>.</p>

</div>
</div>
<a class="anchor" id="a7edb662c9b2f5c17b26a0bd5a3632c08"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Parser::OnBatchTimer </td>
          <td>(</td>
          <td class="paramtype">wxTimerEvent &amp;&#160;</td>
          <td class="paramname"><em>event</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>A timer is used to optimized the event handling for parsing, e.g. several files/projects were added the the project, so we don't start the real parsing stage until the last file/project was added, </p>

<p>References <a class="el" href="classcbThreadPool.xhtml#a25eaa422e66369ebf78bcb0dbd36029f">cbThreadPool::AddTask()</a>, <a class="el" href="cclogger_8h.xhtml#a3685f6e5fe9b865b115feb7ddce265ab">CC_LOCKER_TRACK_P_MTX_LOCK</a>, <a class="el" href="cclogger_8h.xhtml#a00ce2e12a8ca191ad19c47430b51f1bd">CC_LOCKER_TRACK_P_MTX_UNLOCK</a>, <a class="el" href="namespaceParserCommon.xhtml#adfee7095b6a70fc3758f40b3d6b4e65f">ParserCommon::idParserStart</a>, <a class="el" href="classManager.xhtml#a7f3b917f0c41e8ee07129259cef1f058">Manager::IsAppShuttingDown()</a>, <a class="el" href="classParser.xhtml#ae91f77262222605c3a61f040ef32cd0d">m_BatchParseFiles</a>, <a class="el" href="classParser.xhtml#a8234474f039ee0e446b14d9a83621408">m_BatchTimer</a>, <a class="el" href="classParser.xhtml#a86979fcf5073cd8cd253b680f31b4ea1">m_ParserState</a>, <a class="el" href="classParser.xhtml#a27d19a56ed3c1ddef912fce48c073eeb">m_Pool</a>, <a class="el" href="classParser.xhtml#a0a1fe770c243a22ad3b803e25c9e500f">m_PredefinedMacros</a>, <a class="el" href="classParser.xhtml#a9d855431f272646dbfe85684be0c8d11">m_StopWatch</a>, <a class="el" href="namespaceParserCommon.xhtml#a3a758dff9cf81f880ff06cde2ac4b8cf">ParserCommon::PARSER_BATCHPARSE_TIMER_DELAY_LONG</a>, <a class="el" href="classParser.xhtml#a449351e5f291ed1932cb8965276e66a4">ParserThreadedTask</a>, <a class="el" href="classParser.xhtml#ac136343aacc619b30abd81bd63071b36">ProcessParserEvent()</a>, <a class="el" href="namespaceParserCommon.xhtml#a906bcf9de1a0a3c11b86f21417aa4e46ae5aa572d64566771fef713eb85c9c162">ParserCommon::ptUndefined</a>, <a class="el" href="namespaceParserCommon.xhtml#a7e1960d297fd0c5bd023e85adf7af550">ParserCommon::s_CurrentParser</a>, <a class="el" href="namespaceParserCommon.xhtml#af6c9a9f18f1aa08cc1e0f57892ce2c0f">ParserCommon::s_ParserMutex</a>, <a class="el" href="classParser.xhtml#a8f079c421397e2932f1148f4f6922f24">StartStopWatch()</a>, and <a class="el" href="parser_8cpp.xhtml#a1c9f8c7ecc64a760dc3ac03706556ea9">TRACE</a>.</p>

<p>Referenced by <a class="el" href="classParser.xhtml#a7f6a2ebd907836dd1361d83b30f06997">ConnectEvents()</a>, and <a class="el" href="classParser.xhtml#add2772018ff041223f0d259031c03caa">DisconnectEvents()</a>.</p>

</div>
</div>
<a class="anchor" id="a9cddb64c980c9d1c2452d6609d8eef01"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Parser::OnReparseTimer </td>
          <td>(</td>
          <td class="paramtype">wxTimerEvent &amp;&#160;</td>
          <td class="paramname"><em>event</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>some files in the Tokentree is marked as need to be reparsed, this can be done by a call of <a class="el" href="classParser.xhtml#adb1f2528cd77409fb980b98e8452ce43">Reparse()</a> before. So, in this timer event handler, we need to remove all the tokens of files in the Tree, and then re-parse them again. This is done by <a class="el" href="classParser.xhtml#afa2d7839c772641fd0295931c0335fea">AddParse()</a> again. the <a class="el" href="classParser.xhtml" title="Parser class holds all the tokens of a C::B project. ">Parser</a> status now switch to <a class="el" href="namespaceParserCommon.xhtml#a906bcf9de1a0a3c11b86f21417aa4e46ad1a45bc6ac912d91265573f2489364a0">ParserCommon::ptReparseFile</a>. </p>

<p>References <a class="el" href="classParser.xhtml#abcd16c1c26ebd573e427be7e2b805550">ReparseModifiedFiles()</a>.</p>

<p>Referenced by <a class="el" href="classParser.xhtml#a7f6a2ebd907836dd1361d83b30f06997">ConnectEvents()</a>, and <a class="el" href="classParser.xhtml#add2772018ff041223f0d259031c03caa">DisconnectEvents()</a>.</p>

</div>
</div>
<a class="anchor" id="a58fb7a53e004350257a8456b90b98ad0"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool Parser::Parse </td>
          <td>(</td>
          <td class="paramtype">const wxString &amp;&#160;</td>
          <td class="paramname"><em>filename</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>isLocal</em> = <code>true</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>locked</em> = <code>false</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>parse the file, either immediately or delayed. </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">isLocal</td><td>true if the file belong to a C::B project </td></tr>
    <tr><td class="paramname">locked</td><td>give the status of the Tokentree, false means the tree is not locked </td></tr>
  </table>
  </dd>
</dl>

<p>References <a class="el" href="classcbThreadPool.xhtml#a25eaa422e66369ebf78bcb0dbd36029f">cbThreadPool::AddTask()</a>, <a class="el" href="structParserThreadOptions.xhtml#a9a5729a1137fa5301a025023d1f9be0c">ParserThreadOptions::bufferSkipBlocks</a>, <a class="el" href="structParserThreadOptions.xhtml#a5476b7d7f4d57a1b7d9e482b2b6dd63c">ParserThreadOptions::bufferSkipOuterBlocks</a>, <a class="el" href="cclogger_8h.xhtml#abeaaa24b840507a2dce16ea2306b7995">CC_LOCKER_TRACK_TT_MTX_LOCK</a>, <a class="el" href="cclogger_8h.xhtml#a12481e66c0dee266f5a45a7ba7565a17">CC_LOCKER_TRACK_TT_MTX_UNLOCK</a>, <a class="el" href="structParserOptions.xhtml#a59f89ba92d8f61ec1f2f246f0dced8e9">ParserOptions::followGlobalIncludes</a>, <a class="el" href="structParserThreadOptions.xhtml#ad248335bb5c25f7e507f662cf452c0d4">ParserThreadOptions::followGlobalIncludes</a>, <a class="el" href="structParserOptions.xhtml#a09d509de74ff42073c7d9114f0d1649b">ParserOptions::followLocalIncludes</a>, <a class="el" href="structParserThreadOptions.xhtml#a9da48a61076b6e449502a62b6cd83bd6">ParserThreadOptions::followLocalIncludes</a>, <a class="el" href="classManager.xhtml#acf40c9bf3465914dd64d9fdf3b3dc80a">Manager::Get()</a>, <a class="el" href="classManager.xhtml#ac20315c934de4f2d4d0b26bd03d82bfb">Manager::GetFileManager()</a>, <a class="el" href="classTokenTree.xhtml#a2b51672d8287e25eedd109597010e371">TokenTree::IsFileParsed()</a>, <a class="el" href="classFileManager.xhtml#a109c5fc3efb679d77617b00f7ecf7333">FileManager::Load()</a>, <a class="el" href="structParserThreadOptions.xhtml#a5f75bb53f1c0236df8949ef181c3a580">ParserThreadOptions::loader</a>, <a class="el" href="classParser.xhtml#ac7e3c42c7de74654ecf032eb79489b0a">m_NeedsReparse</a>, <a class="el" href="classParserBase.xhtml#a3828abb4026c3b6580ac15e72e3108c1">ParserBase::m_Options</a>, <a class="el" href="classParser.xhtml#a27d19a56ed3c1ddef912fce48c073eeb">m_Pool</a>, <a class="el" href="classParserBase.xhtml#af05ded7dad930983651da07d711f6893">ParserBase::m_TokenTree</a>, <a class="el" href="classParserThread.xhtml#a87e5624dfc192efb0bba2d69f4be7214">ParserThread::Parse()</a>, <a class="el" href="structParserThreadOptions.xhtml#ac039ac8121203343783ed8bebf0b2ad0">ParserThreadOptions::parseComplexMacros</a>, <a class="el" href="structParserOptions.xhtml#aa89c6bb193365900b28fdc4453188f6e">ParserOptions::parseComplexMacros</a>, <a class="el" href="classParserBase.xhtml#a8168e0e230a5861f0bf266b302c4bdba">ParserBase::ParserThread</a>, <a class="el" href="classTokenTree.xhtml#a61d24e9e71b7bea8bba4923c2e627fc4">TokenTree::ReserveFileForParsing()</a>, <a class="el" href="tokentree_8cpp.xhtml#a9280aad984604fac23895e7805450781">s_TokenTreeMutex</a>, <a class="el" href="structParserOptions.xhtml#a88a598e92d369bebd88d98a4ca37c118">ParserOptions::storeDocumentation</a>, <a class="el" href="structParserThreadOptions.xhtml#a77b85fbad99b2ea8fe8ff03ec239f343">ParserThreadOptions::storeDocumentation</a>, <a class="el" href="parser_8cpp.xhtml#a1c9f8c7ecc64a760dc3ac03706556ea9">TRACE</a>, <a class="el" href="structParserThreadOptions.xhtml#af74517ab1b1e2c54f2480d2f36f1ede1">ParserThreadOptions::useBuffer</a>, <a class="el" href="structParserOptions.xhtml#a6068d3770761ceb6dea5f62df437c5af">ParserOptions::wantPreprocessor</a>, and <a class="el" href="structParserThreadOptions.xhtml#a2dfae93949fc45b9dd32d54df35390d2">ParserThreadOptions::wantPreprocessor</a>.</p>

<p>Referenced by <a class="el" href="classParserThreadedTask.xhtml#a33beca1e291d4fec410297f4356ddb04">ParserThreadedTask::Execute()</a>, and <a class="el" href="classParser.xhtml#a4beaecd1d8a59fbc0dd2181e94b49950">ParseFile()</a>.</p>

</div>
</div>
<a class="anchor" id="aac6db2d4ee8b2bbd1c1001579a9e666b"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool Parser::ParseBuffer </td>
          <td>(</td>
          <td class="paramtype">const wxString &amp;&#160;</td>
          <td class="paramname"><em>buffer</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>isLocal</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>bufferSkipBlocks</em> = <code>false</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>isTemp</em> = <code>false</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const wxString &amp;&#160;</td>
          <td class="paramname"><em>filename</em> = <code>wxEmptyString</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>parentIdx</em> = <code>-1</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>initLine</em> = <code>0</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Must add a locker before call all named ParseBufferXXX functions, ParseBuffer function will directly run the parsing in the same thread as the caller. So, take care if the time is limited. this function usually used to parse the function body to fetch the local variable information. </p>

<p>Reimplemented from <a class="el" href="classParserBase.xhtml#a5cbc8ea6a65b180a665874280372dd1c">ParserBase</a>.</p>

<p>References <a class="el" href="structParserThreadOptions.xhtml#a9a5729a1137fa5301a025023d1f9be0c">ParserThreadOptions::bufferSkipBlocks</a>, <a class="el" href="cclogger_8h.xhtml#abeaaa24b840507a2dce16ea2306b7995">CC_LOCKER_TRACK_TT_MTX_LOCK</a>, <a class="el" href="cclogger_8h.xhtml#a12481e66c0dee266f5a45a7ba7565a17">CC_LOCKER_TRACK_TT_MTX_UNLOCK</a>, <a class="el" href="structParserThreadOptions.xhtml#aa3949bbba3a55c05d99086458f2b586f">ParserThreadOptions::fileOfBuffer</a>, <a class="el" href="structParserThreadOptions.xhtml#ad248335bb5c25f7e507f662cf452c0d4">ParserThreadOptions::followGlobalIncludes</a>, <a class="el" href="structParserThreadOptions.xhtml#a9da48a61076b6e449502a62b6cd83bd6">ParserThreadOptions::followLocalIncludes</a>, <a class="el" href="structParserThreadOptions.xhtml#a0695585839ead4e78f50e1c0deb9477e">ParserThreadOptions::handleFunctions</a>, <a class="el" href="structParserThreadOptions.xhtml#ad09ae23e329d28ca87ab1511de2de161">ParserThreadOptions::initLineOfBuffer</a>, <a class="el" href="structParserThreadOptions.xhtml#aa85e16c723b01ea2fbe5aacfe2b1cc3e">ParserThreadOptions::isTemp</a>, <a class="el" href="classParserBase.xhtml#a3828abb4026c3b6580ac15e72e3108c1">ParserBase::m_Options</a>, <a class="el" href="classParserBase.xhtml#af05ded7dad930983651da07d711f6893">ParserBase::m_TokenTree</a>, <a class="el" href="structParserThreadOptions.xhtml#a9ea285f1e27ce6021d4f2a70fb658592">ParserThreadOptions::parentIdxOfBuffer</a>, <a class="el" href="classParserThread.xhtml#a87e5624dfc192efb0bba2d69f4be7214">ParserThread::Parse()</a>, <a class="el" href="structParserThreadOptions.xhtml#ac039ac8121203343783ed8bebf0b2ad0">ParserThreadOptions::parseComplexMacros</a>, <a class="el" href="tokentree_8cpp.xhtml#a9280aad984604fac23895e7805450781">s_TokenTreeMutex</a>, <a class="el" href="structParserOptions.xhtml#a88a598e92d369bebd88d98a4ca37c118">ParserOptions::storeDocumentation</a>, <a class="el" href="structParserThreadOptions.xhtml#a77b85fbad99b2ea8fe8ff03ec239f343">ParserThreadOptions::storeDocumentation</a>, <a class="el" href="structParserThreadOptions.xhtml#af74517ab1b1e2c54f2480d2f36f1ede1">ParserThreadOptions::useBuffer</a>, <a class="el" href="structParserOptions.xhtml#a6068d3770761ceb6dea5f62df437c5af">ParserOptions::wantPreprocessor</a>, and <a class="el" href="structParserThreadOptions.xhtml#a2dfae93949fc45b9dd32d54df35390d2">ParserThreadOptions::wantPreprocessor</a>.</p>

<p>Referenced by <a class="el" href="classParserThreadedTask.xhtml#a33beca1e291d4fec410297f4356ddb04">ParserThreadedTask::Execute()</a>.</p>

</div>
</div>
<a class="anchor" id="a2b85a22a75aee829bf43d868db254e42"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool Parser::ParseBufferForFunctions </td>
          <td>(</td>
          <td class="paramtype">const wxString &amp;&#160;</td>
          <td class="paramname"><em>buffer</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>parser the current editor control, this function is used to list all the functions in the current code editor </p>

<p>References <a class="el" href="structParserThreadOptions.xhtml#a9a5729a1137fa5301a025023d1f9be0c">ParserThreadOptions::bufferSkipBlocks</a>, <a class="el" href="cclogger_8h.xhtml#abeaaa24b840507a2dce16ea2306b7995">CC_LOCKER_TRACK_TT_MTX_LOCK</a>, <a class="el" href="cclogger_8h.xhtml#a12481e66c0dee266f5a45a7ba7565a17">CC_LOCKER_TRACK_TT_MTX_UNLOCK</a>, <a class="el" href="structParserThreadOptions.xhtml#ad248335bb5c25f7e507f662cf452c0d4">ParserThreadOptions::followGlobalIncludes</a>, <a class="el" href="structParserThreadOptions.xhtml#a9da48a61076b6e449502a62b6cd83bd6">ParserThreadOptions::followLocalIncludes</a>, <a class="el" href="structParserThreadOptions.xhtml#a0695585839ead4e78f50e1c0deb9477e">ParserThreadOptions::handleFunctions</a>, <a class="el" href="classParserBase.xhtml#a3828abb4026c3b6580ac15e72e3108c1">ParserBase::m_Options</a>, <a class="el" href="classParserBase.xhtml#a3e34b5fe6c4a1331b6d12b0e0018b5b3">ParserBase::m_TempTokenTree</a>, <a class="el" href="classParserThread.xhtml#a87e5624dfc192efb0bba2d69f4be7214">ParserThread::Parse()</a>, <a class="el" href="structParserOptions.xhtml#aa89c6bb193365900b28fdc4453188f6e">ParserOptions::parseComplexMacros</a>, <a class="el" href="structParserThreadOptions.xhtml#ac039ac8121203343783ed8bebf0b2ad0">ParserThreadOptions::parseComplexMacros</a>, <a class="el" href="tokentree_8cpp.xhtml#a9280aad984604fac23895e7805450781">s_TokenTreeMutex</a>, <a class="el" href="structParserOptions.xhtml#a88a598e92d369bebd88d98a4ca37c118">ParserOptions::storeDocumentation</a>, <a class="el" href="structParserThreadOptions.xhtml#a77b85fbad99b2ea8fe8ff03ec239f343">ParserThreadOptions::storeDocumentation</a>, <a class="el" href="structParserThreadOptions.xhtml#af74517ab1b1e2c54f2480d2f36f1ede1">ParserThreadOptions::useBuffer</a>, <a class="el" href="structParserOptions.xhtml#a6068d3770761ceb6dea5f62df437c5af">ParserOptions::wantPreprocessor</a>, and <a class="el" href="structParserThreadOptions.xhtml#a2dfae93949fc45b9dd32d54df35390d2">ParserThreadOptions::wantPreprocessor</a>.</p>

</div>
</div>
<a class="anchor" id="a17e5c3945696cffb3c8972d08b0a8c28"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool Parser::ParseBufferForNamespaces </td>
          <td>(</td>
          <td class="paramtype">const wxString &amp;&#160;</td>
          <td class="paramname"><em>buffer</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="parserthread_8h.xhtml#adc7acf1313fbbb9b63b163e550d8c439">NameSpaceVec</a> &amp;&#160;</td>
          <td class="paramname"><em>result</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>parse the buffer for collecting exposed namespace scopes </p>

<p>References <a class="el" href="cclogger_8h.xhtml#abeaaa24b840507a2dce16ea2306b7995">CC_LOCKER_TRACK_TT_MTX_LOCK</a>, <a class="el" href="cclogger_8h.xhtml#a12481e66c0dee266f5a45a7ba7565a17">CC_LOCKER_TRACK_TT_MTX_UNLOCK</a>, <a class="el" href="structParserThreadOptions.xhtml#ad248335bb5c25f7e507f662cf452c0d4">ParserThreadOptions::followGlobalIncludes</a>, <a class="el" href="structParserThreadOptions.xhtml#a9da48a61076b6e449502a62b6cd83bd6">ParserThreadOptions::followLocalIncludes</a>, <a class="el" href="classParserBase.xhtml#a3828abb4026c3b6580ac15e72e3108c1">ParserBase::m_Options</a>, <a class="el" href="classParserBase.xhtml#a3e34b5fe6c4a1331b6d12b0e0018b5b3">ParserBase::m_TempTokenTree</a>, <a class="el" href="classParserThread.xhtml#a7a2c99d6130cdb0df26472b6cc8b6b16">ParserThread::ParseBufferForNamespaces()</a>, <a class="el" href="structParserThreadOptions.xhtml#ac039ac8121203343783ed8bebf0b2ad0">ParserThreadOptions::parseComplexMacros</a>, <a class="el" href="tokentree_8cpp.xhtml#a9280aad984604fac23895e7805450781">s_TokenTreeMutex</a>, <a class="el" href="structParserOptions.xhtml#a88a598e92d369bebd88d98a4ca37c118">ParserOptions::storeDocumentation</a>, <a class="el" href="structParserThreadOptions.xhtml#a77b85fbad99b2ea8fe8ff03ec239f343">ParserThreadOptions::storeDocumentation</a>, <a class="el" href="structParserThreadOptions.xhtml#af74517ab1b1e2c54f2480d2f36f1ede1">ParserThreadOptions::useBuffer</a>, <a class="el" href="structParserOptions.xhtml#a6068d3770761ceb6dea5f62df437c5af">ParserOptions::wantPreprocessor</a>, and <a class="el" href="structParserThreadOptions.xhtml#a2dfae93949fc45b9dd32d54df35390d2">ParserThreadOptions::wantPreprocessor</a>.</p>

</div>
</div>
<a class="anchor" id="ae409a924afc0d76c3d1145c3b92ba699"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool Parser::ParseBufferForUsingNamespace </td>
          <td>(</td>
          <td class="paramtype">const wxString &amp;&#160;</td>
          <td class="paramname"><em>buffer</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">wxArrayString &amp;&#160;</td>
          <td class="paramname"><em>result</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>bufferSkipBlocks</em> = <code>true</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>parse the buffer for collecting using namespace directive </p>

<p>References <a class="el" href="structParserThreadOptions.xhtml#a9a5729a1137fa5301a025023d1f9be0c">ParserThreadOptions::bufferSkipBlocks</a>, <a class="el" href="cclogger_8h.xhtml#abeaaa24b840507a2dce16ea2306b7995">CC_LOCKER_TRACK_TT_MTX_LOCK</a>, <a class="el" href="cclogger_8h.xhtml#a12481e66c0dee266f5a45a7ba7565a17">CC_LOCKER_TRACK_TT_MTX_UNLOCK</a>, <a class="el" href="structParserThreadOptions.xhtml#ad248335bb5c25f7e507f662cf452c0d4">ParserThreadOptions::followGlobalIncludes</a>, <a class="el" href="structParserThreadOptions.xhtml#a9da48a61076b6e449502a62b6cd83bd6">ParserThreadOptions::followLocalIncludes</a>, <a class="el" href="classParserBase.xhtml#a3828abb4026c3b6580ac15e72e3108c1">ParserBase::m_Options</a>, <a class="el" href="classParserBase.xhtml#a3e34b5fe6c4a1331b6d12b0e0018b5b3">ParserBase::m_TempTokenTree</a>, <a class="el" href="classParserThread.xhtml#a4ab0b49d18939e1879539d2de19e2aab">ParserThread::ParseBufferForUsingNamespace()</a>, <a class="el" href="structParserThreadOptions.xhtml#ac039ac8121203343783ed8bebf0b2ad0">ParserThreadOptions::parseComplexMacros</a>, <a class="el" href="tokentree_8cpp.xhtml#a9280aad984604fac23895e7805450781">s_TokenTreeMutex</a>, <a class="el" href="structParserOptions.xhtml#a88a598e92d369bebd88d98a4ca37c118">ParserOptions::storeDocumentation</a>, <a class="el" href="structParserThreadOptions.xhtml#a77b85fbad99b2ea8fe8ff03ec239f343">ParserThreadOptions::storeDocumentation</a>, <a class="el" href="structParserThreadOptions.xhtml#af74517ab1b1e2c54f2480d2f36f1ede1">ParserThreadOptions::useBuffer</a>, <a class="el" href="structParserOptions.xhtml#a6068d3770761ceb6dea5f62df437c5af">ParserOptions::wantPreprocessor</a>, and <a class="el" href="structParserThreadOptions.xhtml#a2dfae93949fc45b9dd32d54df35390d2">ParserThreadOptions::wantPreprocessor</a>.</p>

</div>
</div>
<a class="anchor" id="a4beaecd1d8a59fbc0dd2181e94b49950"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool Parser::ParseFile </td>
          <td>(</td>
          <td class="paramtype">const wxString &amp;&#160;</td>
          <td class="paramname"><em>filename</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>isGlobal</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>locked</em> = <code>false</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>the only usage of this function is in the Parserthread class, when handling include directives the parserthread use some call like m_Parent-&gt;<a class="el" href="classParser.xhtml#a4beaecd1d8a59fbc0dd2181e94b49950">ParseFile()</a> to call this function, but this function just call <a class="el" href="classParser.xhtml#a58fb7a53e004350257a8456b90b98ad0">Parser::Parse()</a> function, which either run the syntax analysis immediately or create a parsing task in the Pool. </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">filename</td><td>the file we want to parse </td></tr>
    <tr><td class="paramname">isGlobal</td><td>true if the file is not belong to a C::B project </td></tr>
    <tr><td class="paramname">locked</td><td>true if the <a class="el" href="classTokenTree.xhtml">TokenTree</a> is locked. when initially parse a translation unit file the locked should be set as false, but if you want to recursive parse to an include file the locked value should be set as true. </td></tr>
  </table>
  </dd>
</dl>

<p>Reimplemented from <a class="el" href="classParserBase.xhtml#a5ce7f8b4b25a81c9214d1130e7737e71">ParserBase</a>.</p>

<p>References <a class="el" href="structParserOptions.xhtml#a59f89ba92d8f61ec1f2f246f0dced8e9">ParserOptions::followGlobalIncludes</a>, <a class="el" href="structParserOptions.xhtml#a09d509de74ff42073c7d9114f0d1649b">ParserOptions::followLocalIncludes</a>, <a class="el" href="classParserBase.xhtml#a3828abb4026c3b6580ac15e72e3108c1">ParserBase::m_Options</a>, and <a class="el" href="classParser.xhtml#a58fb7a53e004350257a8456b90b98ad0">Parse()</a>.</p>

</div>
</div>
<a class="anchor" id="ac136343aacc619b30abd81bd63071b36"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Parser::ProcessParserEvent </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespaceParserCommon.xhtml#a906bcf9de1a0a3c11b86f21417aa4e46">ParserCommon::ParserState</a>&#160;</td>
          <td class="paramname"><em>state</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>id</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const wxString &amp;&#160;</td>
          <td class="paramname"><em>info</em> = <code>wxEmptyString</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>The parser will let its parent (<a class="el" href="classNativeParser.xhtml" title="NativeParser class is just like a manager class to control Parser objects. ">NativeParser</a>) to handle the event, as the <a class="el" href="classCodeCompletion.xhtml">CodeCompletion</a> instance was set as the next handler of the <a class="el" href="classNativeParser.xhtml" title="NativeParser class is just like a manager class to control Parser objects. ">NativeParser</a>. Those events can finally go to the <a class="el" href="classCodeCompletion.xhtml">CodeCompletion</a>'s event handler. </p>

<p>References <a class="el" href="classParser.xhtml#ac1517bceecc8307a316efa3cd50ea737">m_Parent</a>, and <a class="el" href="classParser.xhtml#a5399150d5cc2fa860c22ec5c32558387">m_Project</a>.</p>

<p>Referenced by <a class="el" href="classParser.xhtml#a1fdd7a2304dc66b5a469ca0ebf26476f">OnAllThreadsDone()</a>, and <a class="el" href="classParser.xhtml#a7edb662c9b2f5c17b26a0bd5a3632c08">OnBatchTimer()</a>.</p>

</div>
</div>
<a class="anchor" id="a42ffcab924450198773284e92d815a46"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Parser::ReadOptions </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>read <a class="el" href="classParser.xhtml" title="Parser class holds all the tokens of a C::B project. ">Parser</a> options from configure file </p>

<p>Reimplemented from <a class="el" href="classParserBase.xhtml#a12542fe08d0c9862d754118752a840fb">ParserBase</a>.</p>

<p>References <a class="el" href="parser__base_8h.xhtml#a9e22c37e10be75400182c5148a8f27e2a72bfc909cc8b9a205c06b4e7fca6451d">bdfFile</a>, <a class="el" href="parser__base_8h.xhtml#a4cf49f00554af7ef12de8324cc596ec3af526bd251af2bf9a94c670ee4447a717">bstKind</a>, <a class="el" href="structParserOptions.xhtml#ad821bd33e40ce55857a8ddb6ba38b9bf">ParserOptions::caseSensitive</a>, <a class="el" href="parser__base_8h.xhtml#a8026bee1fb416db5887b311bf9238e80">BrowserOptions::displayFilter</a>, <a class="el" href="parser__base_8h.xhtml#a5aa76f2957b045ed6de3834d2243240d">BrowserOptions::expandNS</a>, <a class="el" href="namespaceParserCommon.xhtml#a95b2efe47075493a262d920629bdff5e">ParserCommon::FileType()</a>, <a class="el" href="structParserOptions.xhtml#a59f89ba92d8f61ec1f2f246f0dced8e9">ParserOptions::followGlobalIncludes</a>, <a class="el" href="structParserOptions.xhtml#a09d509de74ff42073c7d9114f0d1649b">ParserOptions::followLocalIncludes</a>, <a class="el" href="classManager.xhtml#acf40c9bf3465914dd64d9fdf3b3dc80a">Manager::Get()</a>, <a class="el" href="classManager.xhtml#ac1a103bddcdaea3cf2dd1d2be10a56c6">Manager::GetConfigManager()</a>, <a class="el" href="classParserBase.xhtml#adbdd04fb56cd207d9bc88f8ee2edea16">ParserBase::m_BrowserOptions</a>, <a class="el" href="classParserBase.xhtml#a3828abb4026c3b6580ac15e72e3108c1">ParserBase::m_Options</a>, <a class="el" href="structParserOptions.xhtml#aa89c6bb193365900b28fdc4453188f6e">ParserOptions::parseComplexMacros</a>, <a class="el" href="classConfigManager.xhtml#afafa1482c7fa4a41208b6916a2ccf0fc">ConfigManager::ReadBool()</a>, <a class="el" href="classConfigManager.xhtml#a30e58926f8d1e00346d684d01b4b7ee8">ConfigManager::ReadInt()</a>, <a class="el" href="parser__base_8h.xhtml#a26a1817c1aac303c2f6ac3613ef690f9">BrowserOptions::showInheritance</a>, <a class="el" href="parser__base_8h.xhtml#aa77b0e0b0637cd9c91b5866644c03247">BrowserOptions::sortType</a>, <a class="el" href="structParserOptions.xhtml#a88a598e92d369bebd88d98a4ca37c118">ParserOptions::storeDocumentation</a>, <a class="el" href="parser__base_8h.xhtml#aff933240e8b7fd77e3efbda014351e16">BrowserOptions::treeMembers</a>, <a class="el" href="structParserOptions.xhtml#ae7a95c41e065d530f495aa095447ef8c">ParserOptions::useSmartSense</a>, <a class="el" href="structParserOptions.xhtml#a6068d3770761ceb6dea5f62df437c5af">ParserOptions::wantPreprocessor</a>, <a class="el" href="structParserOptions.xhtml#a1b908f9a4e1b1223a80d41d830458a09">ParserOptions::whileTyping</a>, and <a class="el" href="classConfigManager.xhtml#aa31beda839d184f9ecd313077643e820">ConfigManager::Write()</a>.</p>

<p>Referenced by <a class="el" href="classParser.xhtml#a9df478b8520f8de438fee16c89699698">Parser()</a>.</p>

</div>
</div>
<a class="anchor" id="ac1fdb0eac6eae359e04aa530fcd0fa1b"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool Parser::RemoveFile </td>
          <td>(</td>
          <td class="paramtype">const wxString &amp;&#160;</td>
          <td class="paramname"><em>filename</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>this usually happens when the user removes a file from the existing project, it will remove all the tokens belong to the file. </p>

<p>References <a class="el" href="cclogger_8h.xhtml#abeaaa24b840507a2dce16ea2306b7995">CC_LOCKER_TRACK_TT_MTX_LOCK</a>, <a class="el" href="cclogger_8h.xhtml#a12481e66c0dee266f5a45a7ba7565a17">CC_LOCKER_TRACK_TT_MTX_UNLOCK</a>, <a class="el" href="classTokenTree.xhtml#a86215fe978dfdd7df45128000c136c52">TokenTree::EraseFileMapInFileMap()</a>, <a class="el" href="classTokenTree.xhtml#a9b1255d2df1a49a986c5edffb8c64b0e">TokenTree::EraseFileStatusByIndex()</a>, <a class="el" href="classTokenTree.xhtml#a5d3f903c85a20416e24122df58000728">TokenTree::EraseFilesToBeReparsedByIndex()</a>, <a class="el" href="classTokenTree.xhtml#a417d3a5bdcd79b56230464688e472de2">TokenTree::GetFileStatusCountForIndex()</a>, <a class="el" href="classTokenTree.xhtml#aafddf7763095b77d63b2f289724876a5">TokenTree::InsertFileOrGetIndex()</a>, <a class="el" href="classParserBase.xhtml#af05ded7dad930983651da07d711f6893">ParserBase::m_TokenTree</a>, <a class="el" href="classTokenTree.xhtml#ad911dbb45a3128f1fc44865ac65b8b5a">TokenTree::RemoveFile()</a>, and <a class="el" href="tokentree_8cpp.xhtml#a9280aad984604fac23895e7805450781">s_TokenTreeMutex</a>.</p>

</div>
</div>
<a class="anchor" id="adb1f2528cd77409fb980b98e8452ce43"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool Parser::Reparse </td>
          <td>(</td>
          <td class="paramtype">const wxString &amp;&#160;</td>
          <td class="paramname"><em>filename</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>isLocal</em> = <code>true</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>mark this file to be re-parsed in the <a class="el" href="classTokenTree.xhtml">TokenTree</a>, tick the reparse timer, note it looks like the isLocal parameter is not used in <a class="el" href="classParser.xhtml#adb1f2528cd77409fb980b98e8452ce43">Parser::Reparse</a> function. A better function name could be: MarkFileNeedToBeReParsed() </p>

<p>References <a class="el" href="cclogger_8h.xhtml#abeaaa24b840507a2dce16ea2306b7995">CC_LOCKER_TRACK_TT_MTX_LOCK</a>, <a class="el" href="cclogger_8h.xhtml#a12481e66c0dee266f5a45a7ba7565a17">CC_LOCKER_TRACK_TT_MTX_UNLOCK</a>, <a class="el" href="classCCLogger.xhtml#aa64a8ddd35ee6847500ee8afa9905d07">CCLogger::DebugLog()</a>, <a class="el" href="classParser.xhtml#a2369584c371c106ae594153818f9031a">Done()</a>, <a class="el" href="classTokenTree.xhtml#ae847f61ff6e58c7e337c96cb150afda8">TokenTree::FlagFileForReparsing()</a>, <a class="el" href="classCCLogger.xhtml#a8026c2410c4373264868a80352638508">CCLogger::Get()</a>, <a class="el" href="classParser.xhtml#ac7e3c42c7de74654ecf032eb79489b0a">m_NeedsReparse</a>, <a class="el" href="classParser.xhtml#a13cd20a37a57b8332165c391de5599cc">m_ReparseTimer</a>, <a class="el" href="classParserBase.xhtml#af05ded7dad930983651da07d711f6893">ParserBase::m_TokenTree</a>, <a class="el" href="classParser.xhtml#afaa8b89804686eb4f631aafb6eb9e536">NotDoneReason()</a>, <a class="el" href="namespaceParserCommon.xhtml#a05140179f3bc8ce6c340aa44ba37c2a7">ParserCommon::PARSER_REPARSE_TIMER_DELAY</a>, <a class="el" href="tokentree_8cpp.xhtml#a9280aad984604fac23895e7805450781">s_TokenTreeMutex</a>, and <a class="el" href="parser_8cpp.xhtml#a1c9f8c7ecc64a760dc3ac03706556ea9">TRACE</a>.</p>

</div>
</div>
<a class="anchor" id="abcd16c1c26ebd573e427be7e2b805550"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Parser::ReparseModifiedFiles </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>delete those files from the <a class="el" href="classTokenTree.xhtml">TokenTree</a>, and add them again through <a class="el" href="classParser.xhtml#afa2d7839c772641fd0295931c0335fea">AddParse()</a> function </p>

<p>References <a class="el" href="classParser.xhtml#afa2d7839c772641fd0295931c0335fea">AddParse()</a>, <a class="el" href="cclogger_8h.xhtml#abeaaa24b840507a2dce16ea2306b7995">CC_LOCKER_TRACK_TT_MTX_LOCK</a>, <a class="el" href="cclogger_8h.xhtml#a12481e66c0dee266f5a45a7ba7565a17">CC_LOCKER_TRACK_TT_MTX_UNLOCK</a>, <a class="el" href="classCCLogger.xhtml#aa64a8ddd35ee6847500ee8afa9905d07">CCLogger::DebugLog()</a>, <a class="el" href="classParser.xhtml#a2369584c371c106ae594153818f9031a">Done()</a>, <a class="el" href="globals_8h.xhtml#a490dcc57bbefb98f57f1bf01710809f0">FileTypeOf()</a>, <a class="el" href="globals_8h.xhtml#a2c794c5c13ab4dd7e65bad031dbe41c3ac68e71f9505838f69b7fe6bd5d912dfb">ftSource</a>, <a class="el" href="classCCLogger.xhtml#a8026c2410c4373264868a80352638508">CCLogger::Get()</a>, <a class="el" href="classTokenTree.xhtml#a586b067d450d7919312e74feec151b6a">TokenTree::GetFilename()</a>, <a class="el" href="classTokenTree.xhtml#a9e1106212c323c5e48307c5e0f4d7fd3">TokenTree::GetFilesToBeReparsed()</a>, <a class="el" href="classParser.xhtml#ac7e3c42c7de74654ecf032eb79489b0a">m_NeedsReparse</a>, <a class="el" href="classParser.xhtml#a86979fcf5073cd8cd253b680f31b4ea1">m_ParserState</a>, <a class="el" href="classParser.xhtml#a13cd20a37a57b8332165c391de5599cc">m_ReparseTimer</a>, <a class="el" href="classParserBase.xhtml#af05ded7dad930983651da07d711f6893">ParserBase::m_TokenTree</a>, <a class="el" href="classParser.xhtml#afaa8b89804686eb4f631aafb6eb9e536">NotDoneReason()</a>, <a class="el" href="namespaceParserCommon.xhtml#a05140179f3bc8ce6c340aa44ba37c2a7">ParserCommon::PARSER_REPARSE_TIMER_DELAY</a>, <a class="el" href="namespaceParserCommon.xhtml#a906bcf9de1a0a3c11b86f21417aa4e46ad1a45bc6ac912d91265573f2489364a0">ParserCommon::ptReparseFile</a>, <a class="el" href="namespaceParserCommon.xhtml#a906bcf9de1a0a3c11b86f21417aa4e46ae5aa572d64566771fef713eb85c9c162">ParserCommon::ptUndefined</a>, <a class="el" href="classTokenTree.xhtml#ad911dbb45a3128f1fc44865ac65b8b5a">TokenTree::RemoveFile()</a>, <a class="el" href="tokentree_8cpp.xhtml#a9280aad984604fac23895e7805450781">s_TokenTreeMutex</a>, and <a class="el" href="parser_8cpp.xhtml#a1c9f8c7ecc64a760dc3ac03706556ea9">TRACE</a>.</p>

<p>Referenced by <a class="el" href="classParser.xhtml#a9cddb64c980c9d1c2452d6609d8eef01">OnReparseTimer()</a>.</p>

</div>
</div>
<a class="anchor" id="a6b921aa0d93bce972abc5da93b990c09"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Parser::SetMaxThreads </td>
          <td>(</td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>max</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Not used, because the ThreadPool only support running ONE <a class="el" href="classParserThread.xhtml" title="A parser threaded task, which can be assigned to the thread task pool, and run there. ">ParserThread</a> concurrently </p>

<p>References <a class="el" href="classParser.xhtml#a27d19a56ed3c1ddef912fce48c073eeb">m_Pool</a>, and <a class="el" href="classcbThreadPool.xhtml#a5a39495772bd50d7beff8390325f802a">cbThreadPool::SetConcurrentThreads()</a>.</p>

</div>
</div>
<a class="anchor" id="a8f079c421397e2932f1148f4f6922f24"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Parser::StartStopWatch </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>References <a class="el" href="classParser.xhtml#a9d855431f272646dbfe85684be0c8d11">m_StopWatch</a>, and <a class="el" href="classParser.xhtml#a3b38dbcca9a3b45f6f5bc3a5ac7c5517">m_StopWatchRunning</a>.</p>

<p>Referenced by <a class="el" href="classParser.xhtml#a7edb662c9b2f5c17b26a0bd5a3632c08">OnBatchTimer()</a>.</p>

</div>
</div>
<a class="anchor" id="a9019bf0250a6e34645f9936666ab69c3"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Parser::TerminateAllThreads </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>cancel all the tasks in m_Pool </p>

<p>References <a class="el" href="classcbThreadPool.xhtml#a3477c26b54ed024450576fc3fa7f865f">cbThreadPool::AbortAllTasks()</a>, <a class="el" href="classcbThreadPool.xhtml#ac19335d0513fa16c010ac61d3f458d05">cbThreadPool::Done()</a>, and <a class="el" href="classParser.xhtml#a27d19a56ed3c1ddef912fce48c073eeb">m_Pool</a>.</p>

<p>Referenced by <a class="el" href="classParser.xhtml#a3e658b5917a93a3ef648050d060e3a93">~Parser()</a>.</p>

</div>
</div>
<a class="anchor" id="ad7cf493c5f8e249d37e78efe9b960f80"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool Parser::UpdateParsingProject </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classcbProject.xhtml">cbProject</a> *&#160;</td>
          <td class="paramname"><em>project</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>set the associated C::B project pointer. (only used by one parser for whole workspace) </p><dl class="section return"><dt>Returns</dt><dd>true if it can do the switch, other wise, return false, and print some debug logs. </dd></dl>

<p>References <a class="el" href="classCCLogger.xhtml#aa64a8ddd35ee6847500ee8afa9905d07">CCLogger::DebugLog()</a>, <a class="el" href="classParser.xhtml#a2369584c371c106ae594153818f9031a">Done()</a>, <a class="el" href="classCCLogger.xhtml#a8026c2410c4373264868a80352638508">CCLogger::Get()</a>, <a class="el" href="classParser.xhtml#a5399150d5cc2fa860c22ec5c32558387">m_Project</a>, and <a class="el" href="classParser.xhtml#afaa8b89804686eb4f631aafb6eb9e536">NotDoneReason()</a>.</p>

</div>
</div>
<a class="anchor" id="ac3b94e554dbd08c69032aa0089db12d2"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void Parser::WriteOptions </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>write Parse options to configure file </p>

<p>Reimplemented from <a class="el" href="classParserBase.xhtml#a69ef5ac1341cbd6e0dd232056829611d">ParserBase</a>.</p>

<p>References <a class="el" href="structParserOptions.xhtml#ad821bd33e40ce55857a8ddb6ba38b9bf">ParserOptions::caseSensitive</a>, <a class="el" href="parser__base_8h.xhtml#a8026bee1fb416db5887b311bf9238e80">BrowserOptions::displayFilter</a>, <a class="el" href="parser__base_8h.xhtml#a5aa76f2957b045ed6de3834d2243240d">BrowserOptions::expandNS</a>, <a class="el" href="structParserOptions.xhtml#a59f89ba92d8f61ec1f2f246f0dced8e9">ParserOptions::followGlobalIncludes</a>, <a class="el" href="structParserOptions.xhtml#a09d509de74ff42073c7d9114f0d1649b">ParserOptions::followLocalIncludes</a>, <a class="el" href="classManager.xhtml#acf40c9bf3465914dd64d9fdf3b3dc80a">Manager::Get()</a>, <a class="el" href="classManager.xhtml#ac1a103bddcdaea3cf2dd1d2be10a56c6">Manager::GetConfigManager()</a>, <a class="el" href="classParserBase.xhtml#adbdd04fb56cd207d9bc88f8ee2edea16">ParserBase::m_BrowserOptions</a>, <a class="el" href="classParserBase.xhtml#a3828abb4026c3b6580ac15e72e3108c1">ParserBase::m_Options</a>, <a class="el" href="structParserOptions.xhtml#aa89c6bb193365900b28fdc4453188f6e">ParserOptions::parseComplexMacros</a>, <a class="el" href="parser__base_8h.xhtml#a26a1817c1aac303c2f6ac3613ef690f9">BrowserOptions::showInheritance</a>, <a class="el" href="parser__base_8h.xhtml#aa77b0e0b0637cd9c91b5866644c03247">BrowserOptions::sortType</a>, <a class="el" href="parser__base_8h.xhtml#aff933240e8b7fd77e3efbda014351e16">BrowserOptions::treeMembers</a>, <a class="el" href="structParserOptions.xhtml#ae7a95c41e065d530f495aa095447ef8c">ParserOptions::useSmartSense</a>, <a class="el" href="structParserOptions.xhtml#a6068d3770761ceb6dea5f62df437c5af">ParserOptions::wantPreprocessor</a>, <a class="el" href="structParserOptions.xhtml#a1b908f9a4e1b1223a80d41d830458a09">ParserOptions::whileTyping</a>, and <a class="el" href="classConfigManager.xhtml#aa31beda839d184f9ecd313077643e820">ConfigManager::Write()</a>.</p>

</div>
</div>
<h2 class="groupheader">Friends And Related Function Documentation</h2>
<a class="anchor" id="a449351e5f291ed1932cb8965276e66a4"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">friend class <a class="el" href="classParserThreadedTask.xhtml">ParserThreadedTask</a></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">friend</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Referenced by <a class="el" href="classParser.xhtml#a7edb662c9b2f5c17b26a0bd5a3632c08">OnBatchTimer()</a>.</p>

</div>
</div>
<h2 class="groupheader">Member Data Documentation</h2>
<a class="anchor" id="ae91f77262222605c3a61f040ef32cd0d"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="parser__base_8h.xhtml#a4a97d33272eda8bee1eac1dfea444421">StringList</a> Parser::m_BatchParseFiles</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>All other batch parse files, like the normal headers/sources. </p>

<p>Referenced by <a class="el" href="classParser.xhtml#ab42c86fbfa0aff5b7a8a74c6b2887149">AddBatchParse()</a>, <a class="el" href="classParser.xhtml#afa2d7839c772641fd0295931c0335fea">AddParse()</a>, <a class="el" href="classParser.xhtml#a2369584c371c106ae594153818f9031a">Done()</a>, <a class="el" href="classParserThreadedTask.xhtml#a33beca1e291d4fec410297f4356ddb04">ParserThreadedTask::Execute()</a>, <a class="el" href="classParser.xhtml#a17ef9514f7abfe531311cd2fd05ab76c">IsFileParsed()</a>, <a class="el" href="classParser.xhtml#afaa8b89804686eb4f631aafb6eb9e536">NotDoneReason()</a>, <a class="el" href="classParser.xhtml#a1fdd7a2304dc66b5a469ca0ebf26476f">OnAllThreadsDone()</a>, and <a class="el" href="classParser.xhtml#a7edb662c9b2f5c17b26a0bd5a3632c08">OnBatchTimer()</a>.</p>

</div>
</div>
<a class="anchor" id="a8234474f039ee0e446b14d9a83621408"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">wxTimer Parser::m_BatchTimer</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>a timer to delay the operation of batch parsing, see <a class="el" href="classParser.xhtml#a7edb662c9b2f5c17b26a0bd5a3632c08">OnBatchTimer()</a> member function as a reference </p>

<p>Referenced by <a class="el" href="classParser.xhtml#ab42c86fbfa0aff5b7a8a74c6b2887149">AddBatchParse()</a>, <a class="el" href="classParser.xhtml#afa2d7839c772641fd0295931c0335fea">AddParse()</a>, <a class="el" href="classParser.xhtml#a09426eaad51e2aa2035a4a76f885faff">AddPredefinedMacros()</a>, <a class="el" href="classParser.xhtml#a7f6a2ebd907836dd1361d83b30f06997">ConnectEvents()</a>, <a class="el" href="classParser.xhtml#add2772018ff041223f0d259031c03caa">DisconnectEvents()</a>, <a class="el" href="classParser.xhtml#a1fdd7a2304dc66b5a469ca0ebf26476f">OnAllThreadsDone()</a>, and <a class="el" href="classParser.xhtml#a7edb662c9b2f5c17b26a0bd5a3632c08">OnBatchTimer()</a>.</p>

</div>
</div>
<a class="anchor" id="a4ab9ff764c91e11bd2ee60c922c5c5c1"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool Parser::m_IgnoreThreadEvents</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p><a class="el" href="classParser.xhtml#a1fdd7a2304dc66b5a469ca0ebf26476f">Parser::OnAllThreadsDone</a> will be called when m_Pool finished its job, but when we run a batch parsing, we may receive several such event from the m_Pool, because 1, when <a class="el" href="classParserThreadedTask.xhtml">ParserThreadedTask</a> finished 2, when batchFiles get finished 3, mark C::B project files's token as local </p>

<p>Referenced by <a class="el" href="classParserThreadedTask.xhtml#a33beca1e291d4fec410297f4356ddb04">ParserThreadedTask::Execute()</a>, and <a class="el" href="classParser.xhtml#a1fdd7a2304dc66b5a469ca0ebf26476f">OnAllThreadsDone()</a>.</p>

</div>
</div>
<a class="anchor" id="ad92f097330a0dbf7e7e72a628460d716"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool Parser::m_IsBatchParseDone</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>used to measure batch parse time </p>

<p>Referenced by <a class="el" href="classParser.xhtml#a0cd3bdff42d8ed15b36fc15925481a2f">EndStopWatch()</a>, and <a class="el" href="classParser.xhtml#a1fdd7a2304dc66b5a469ca0ebf26476f">OnAllThreadsDone()</a>.</p>

</div>
</div>
<a class="anchor" id="a2825c1f61de125655eb1cae70484f553"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool Parser::m_IsFirstBatch</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>batch Parse mode flag. It was set after consuming m_PredefinedMacros, it was reset after the final stage (mark token as local). </p>

<p>Referenced by <a class="el" href="classParserThreadedTask.xhtml#a33beca1e291d4fec410297f4356ddb04">ParserThreadedTask::Execute()</a>.</p>

</div>
</div>
<a class="anchor" id="a7617aec20a5d11485bb21f09a10dfa26"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool Parser::m_IsParsing</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>true, if the parser is still busy with parsing, false if the parsing stage has finished this value is set in parserthreadedtask after putting all the batchFiles to pool(task) it was reset after the last stage (mark tokens as local) </p>

<p>Referenced by <a class="el" href="classParser.xhtml#ab42c86fbfa0aff5b7a8a74c6b2887149">AddBatchParse()</a>, <a class="el" href="classParser.xhtml#afa2d7839c772641fd0295931c0335fea">AddParse()</a>, <a class="el" href="classParser.xhtml#a09426eaad51e2aa2035a4a76f885faff">AddPredefinedMacros()</a>, <a class="el" href="classParserThreadedTask.xhtml#a33beca1e291d4fec410297f4356ddb04">ParserThreadedTask::Execute()</a>, and <a class="el" href="classParser.xhtml#a1fdd7a2304dc66b5a469ca0ebf26476f">OnAllThreadsDone()</a>.</p>

</div>
</div>
<a class="anchor" id="a48c80adea5ecbd599af8d965f02e3c12"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">long Parser::m_LastStopWatchTime</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Referenced by <a class="el" href="classParser.xhtml#a0cd3bdff42d8ed15b36fc15925481a2f">EndStopWatch()</a>, and <a class="el" href="classParser.xhtml#a1fdd7a2304dc66b5a469ca0ebf26476f">OnAllThreadsDone()</a>.</p>

</div>
</div>
<a class="anchor" id="a08da9255e6d61ef22c39b1a988ef18f7"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool Parser::m_NeedMarkFileAsLocal</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>if true, all the files of the current project will be labeled as "local" </p>

<p>Referenced by <a class="el" href="classParser.xhtml#a92a938fa9e549e687a2320de2a04f7f1">AddFile()</a>, <a class="el" href="classParser.xhtml#a2369584c371c106ae594153818f9031a">Done()</a>, <a class="el" href="classParser.xhtml#afaa8b89804686eb4f631aafb6eb9e536">NotDoneReason()</a>, and <a class="el" href="classParser.xhtml#a1fdd7a2304dc66b5a469ca0ebf26476f">OnAllThreadsDone()</a>.</p>

</div>
</div>
<a class="anchor" id="ac7e3c42c7de74654ecf032eb79489b0a"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool Parser::m_NeedsReparse</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Indicates some files in the current project need to be re-parsed, this is commonly caused that the "real-time parsing option" is enabled, and user is editing source file. </p>

<p>Referenced by <a class="el" href="classParser.xhtml#a1fdd7a2304dc66b5a469ca0ebf26476f">OnAllThreadsDone()</a>, <a class="el" href="classParser.xhtml#a58fb7a53e004350257a8456b90b98ad0">Parse()</a>, <a class="el" href="classParser.xhtml#adb1f2528cd77409fb980b98e8452ce43">Reparse()</a>, and <a class="el" href="classParser.xhtml#abcd16c1c26ebd573e427be7e2b805550">ReparseModifiedFiles()</a>.</p>

</div>
</div>
<a class="anchor" id="ac1517bceecc8307a316efa3cd50ea737"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">wxEvtHandler* Parser::m_Parent</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>when initialized, this variable will be an instance of a <a class="el" href="classNativeParser.xhtml" title="NativeParser class is just like a manager class to control Parser objects. ">NativeParser</a> </p>

<p>Referenced by <a class="el" href="classParser.xhtml#ac136343aacc619b30abd81bd63071b36">ProcessParserEvent()</a>.</p>

</div>
</div>
<a class="anchor" id="a86979fcf5073cd8cd253b680f31b4ea1"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespaceParserCommon.xhtml#a906bcf9de1a0a3c11b86f21417aa4e46">ParserCommon::ParserState</a> Parser::m_ParserState</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>indicated the current state the parser is in </p>

<p>Referenced by <a class="el" href="classParser.xhtml#ab42c86fbfa0aff5b7a8a74c6b2887149">AddBatchParse()</a>, <a class="el" href="classParser.xhtml#a92a938fa9e549e687a2320de2a04f7f1">AddFile()</a>, <a class="el" href="classParser.xhtml#a09426eaad51e2aa2035a4a76f885faff">AddPredefinedMacros()</a>, <a class="el" href="classParser.xhtml#a1fdd7a2304dc66b5a469ca0ebf26476f">OnAllThreadsDone()</a>, <a class="el" href="classParser.xhtml#a7edb662c9b2f5c17b26a0bd5a3632c08">OnBatchTimer()</a>, and <a class="el" href="classParser.xhtml#abcd16c1c26ebd573e427be7e2b805550">ReparseModifiedFiles()</a>.</p>

</div>
</div>
<a class="anchor" id="a27d19a56ed3c1ddef912fce48c073eeb"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classcbThreadPool.xhtml">cbThreadPool</a> Parser::m_Pool</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Thread Pool, executing all the <a class="el" href="classParserThread.xhtml" title="A parser threaded task, which can be assigned to the thread task pool, and run there. ">ParserThread</a>, used in batch parse mode. The thread pool can add/remove/execute the <a class="el" href="classParserThread.xhtml" title="A parser threaded task, which can be assigned to the thread task pool, and run there. ">ParserThread</a> tasks, it will also notify the <a class="el" href="classParser.xhtml" title="Parser class holds all the tokens of a C::B project. ">Parser</a> that all the thread are done. </p>

<p>Referenced by <a class="el" href="classParser.xhtml#a7f6a2ebd907836dd1361d83b30f06997">ConnectEvents()</a>, <a class="el" href="classParser.xhtml#add2772018ff041223f0d259031c03caa">DisconnectEvents()</a>, <a class="el" href="classParser.xhtml#a2369584c371c106ae594153818f9031a">Done()</a>, <a class="el" href="classParser.xhtml#aca7bd44e0f0557a78968540c6fe18bdf">GetMaxThreads()</a>, <a class="el" href="classParser.xhtml#afaa8b89804686eb4f631aafb6eb9e536">NotDoneReason()</a>, <a class="el" href="classParser.xhtml#a1fdd7a2304dc66b5a469ca0ebf26476f">OnAllThreadsDone()</a>, <a class="el" href="classParser.xhtml#a7edb662c9b2f5c17b26a0bd5a3632c08">OnBatchTimer()</a>, <a class="el" href="classParser.xhtml#a58fb7a53e004350257a8456b90b98ad0">Parse()</a>, <a class="el" href="classParser.xhtml#a6b921aa0d93bce972abc5da93b990c09">SetMaxThreads()</a>, and <a class="el" href="classParser.xhtml#a9019bf0250a6e34645f9936666ab69c3">TerminateAllThreads()</a>.</p>

</div>
</div>
<a class="anchor" id="a0a1fe770c243a22ad3b803e25c9e500f"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">wxString Parser::m_PredefinedMacros</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Pre-defined macros, its a buffer queried from the compiler command line. </p>

<p>Referenced by <a class="el" href="classParser.xhtml#a09426eaad51e2aa2035a4a76f885faff">AddPredefinedMacros()</a>, <a class="el" href="classParser.xhtml#a2369584c371c106ae594153818f9031a">Done()</a>, <a class="el" href="classParserThreadedTask.xhtml#a33beca1e291d4fec410297f4356ddb04">ParserThreadedTask::Execute()</a>, <a class="el" href="classParser.xhtml#afaa8b89804686eb4f631aafb6eb9e536">NotDoneReason()</a>, <a class="el" href="classParser.xhtml#a1fdd7a2304dc66b5a469ca0ebf26476f">OnAllThreadsDone()</a>, and <a class="el" href="classParser.xhtml#a7edb662c9b2f5c17b26a0bd5a3632c08">OnBatchTimer()</a>.</p>

</div>
</div>
<a class="anchor" id="a5399150d5cc2fa860c22ec5c32558387"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classcbProject.xhtml">cbProject</a>* Parser::m_Project</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>referring to the C::B cbp project currently parsing in one parser per workspace mode </p>

<p>Referenced by <a class="el" href="classParser.xhtml#a92a938fa9e549e687a2320de2a04f7f1">AddFile()</a>, <a class="el" href="classParser.xhtml#a1fdd7a2304dc66b5a469ca0ebf26476f">OnAllThreadsDone()</a>, <a class="el" href="classParser.xhtml#ac136343aacc619b30abd81bd63071b36">ProcessParserEvent()</a>, and <a class="el" href="classParser.xhtml#ad7cf493c5f8e249d37e78efe9b960f80">UpdateParsingProject()</a>.</p>

</div>
</div>
<a class="anchor" id="a13cd20a37a57b8332165c391de5599cc"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">wxTimer Parser::m_ReparseTimer</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Referenced by <a class="el" href="classParser.xhtml#a7f6a2ebd907836dd1361d83b30f06997">ConnectEvents()</a>, <a class="el" href="classParser.xhtml#add2772018ff041223f0d259031c03caa">DisconnectEvents()</a>, <a class="el" href="classParser.xhtml#adb1f2528cd77409fb980b98e8452ce43">Reparse()</a>, and <a class="el" href="classParser.xhtml#abcd16c1c26ebd573e427be7e2b805550">ReparseModifiedFiles()</a>.</p>

</div>
</div>
<a class="anchor" id="a9d855431f272646dbfe85684be0c8d11"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">wxStopWatch Parser::m_StopWatch</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>a stop watch to measure parsing time </p>

<p>Referenced by <a class="el" href="classParser.xhtml#a0cd3bdff42d8ed15b36fc15925481a2f">EndStopWatch()</a>, <a class="el" href="classParser.xhtml#a7edb662c9b2f5c17b26a0bd5a3632c08">OnBatchTimer()</a>, and <a class="el" href="classParser.xhtml#a8f079c421397e2932f1148f4f6922f24">StartStopWatch()</a>.</p>

</div>
</div>
<a class="anchor" id="a3b38dbcca9a3b45f6f5bc3a5ac7c5517"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool Parser::m_StopWatchRunning</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Referenced by <a class="el" href="classParser.xhtml#a0cd3bdff42d8ed15b36fc15925481a2f">EndStopWatch()</a>, and <a class="el" href="classParser.xhtml#a8f079c421397e2932f1148f4f6922f24">StartStopWatch()</a>.</p>

</div>
</div>
<a class="anchor" id="a5f6b75859cc9e0726737e539d86b41f8"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool Parser::m_UsingCache</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>true if loaded from cache </p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li><a class="el" href="parser_8h_source.xhtml">parser.h</a></li>
<li><a class="el" href="parser_8cpp.xhtml">parser.cpp</a></li>
</ul>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.8
</small></address>
</body>
</html>
