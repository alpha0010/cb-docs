<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.8"/>
<title>Code::Blocks: ExpressionNode Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">Code::Blocks
   &#160;<span id="projectnumber">SVN r10054</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.8 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li><a href="files.xhtml"><span>Files</span></a></li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.xhtml"><span>Class&#160;List</span></a></li>
      <li><a href="classes.xhtml"><span>Class&#160;Index</span></a></li>
      <li><a href="inherits.xhtml"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.xhtml"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-types">Public Types</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-static-methods">Static Public Member Functions</a> &#124;
<a href="#pri-attribs">Private Attributes</a> &#124;
<a href="classExpressionNode-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">ExpressionNode Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;<a class="el" href="expression_8h_source.xhtml">expression.h</a>&gt;</code></p>
<div class="dynheader">
Collaboration diagram for ExpressionNode:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="classExpressionNode__coll__graph.svg" width="171" height="294"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-types"></a>
Public Types</h2></td></tr>
<tr class="memitem:af49d5c5d884b4c2a5827908460b996d1"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classExpressionNode.xhtml#af49d5c5d884b4c2a5827908460b996d1">ExpressionNodeType</a> { <br />
&#160;&#160;<a class="el" href="classExpressionNode.xhtml#af49d5c5d884b4c2a5827908460b996d1ac5823120c3cf02096156c4aec9bd103c">Unknown</a>, 
<a class="el" href="classExpressionNode.xhtml#af49d5c5d884b4c2a5827908460b996d1a739dc2069a2a6da8ad141c006d1ddad1">Plus</a>, 
<a class="el" href="classExpressionNode.xhtml#af49d5c5d884b4c2a5827908460b996d1a9ffdae8bd5b7b2b96f04dbf5e30f8130">Subtract</a>, 
<a class="el" href="classExpressionNode.xhtml#af49d5c5d884b4c2a5827908460b996d1a934d8aa25064a605fb74aa9cda5f0cc8">Multiply</a>, 
<br />
&#160;&#160;<a class="el" href="classExpressionNode.xhtml#af49d5c5d884b4c2a5827908460b996d1a4011df8a8e51b05f99aee7e7afb0b7ed">Divide</a>, 
<a class="el" href="classExpressionNode.xhtml#af49d5c5d884b4c2a5827908460b996d1a0e77c141b089263d6ebd4690633d3794">LParenthesis</a>, 
<a class="el" href="classExpressionNode.xhtml#af49d5c5d884b4c2a5827908460b996d1a6826c92f8a9211025e527e56789a1ad2">RParenthesis</a>, 
<a class="el" href="classExpressionNode.xhtml#af49d5c5d884b4c2a5827908460b996d1afd7bddc6781901a3461630965d7a8eb6">Mod</a>, 
<br />
&#160;&#160;<a class="el" href="classExpressionNode.xhtml#af49d5c5d884b4c2a5827908460b996d1a0534ddb3fc0fc5eba722628fba9e2ed3">Power</a>, 
<a class="el" href="classExpressionNode.xhtml#af49d5c5d884b4c2a5827908460b996d1a1e2acbf419b0e78cd966c48b0dd35be6">BitwiseAnd</a>, 
<a class="el" href="classExpressionNode.xhtml#af49d5c5d884b4c2a5827908460b996d1a355c5ce0eb9e10d96e1d1af2885d3615">BitwiseOr</a>, 
<a class="el" href="classExpressionNode.xhtml#af49d5c5d884b4c2a5827908460b996d1a1397e99136eb27032976d491015ed071">And</a>, 
<br />
&#160;&#160;<a class="el" href="classExpressionNode.xhtml#af49d5c5d884b4c2a5827908460b996d1aa3593d5bd43915f17bed74cf0fd33e12">Or</a>, 
<a class="el" href="classExpressionNode.xhtml#af49d5c5d884b4c2a5827908460b996d1a18e742919f3ffda7ba0383ab7794cc2e">Not</a>, 
<a class="el" href="classExpressionNode.xhtml#af49d5c5d884b4c2a5827908460b996d1ad36a378c133169aa29539ce0eaf3115e">Equal</a>, 
<a class="el" href="classExpressionNode.xhtml#af49d5c5d884b4c2a5827908460b996d1aa03cef66ae89f911e7339b280cac916b">Unequal</a>, 
<br />
&#160;&#160;<a class="el" href="classExpressionNode.xhtml#af49d5c5d884b4c2a5827908460b996d1a266a7fdc43eaf5c66e01874662487083">GT</a>, 
<a class="el" href="classExpressionNode.xhtml#af49d5c5d884b4c2a5827908460b996d1aa45da75dfd1e138f728dafd64a3fe3b8">LT</a>, 
<a class="el" href="classExpressionNode.xhtml#af49d5c5d884b4c2a5827908460b996d1a413389257452e948d5050c06bbf7015f">GTOrEqual</a>, 
<a class="el" href="classExpressionNode.xhtml#af49d5c5d884b4c2a5827908460b996d1a5b99d08ffbb2eae4078d4bae9477b71b">LTOrEqual</a>, 
<br />
&#160;&#160;<a class="el" href="classExpressionNode.xhtml#af49d5c5d884b4c2a5827908460b996d1a70ae6172528a0d14495042fecb217f59">LShift</a>, 
<a class="el" href="classExpressionNode.xhtml#af49d5c5d884b4c2a5827908460b996d1a57bd5097e1ec9e5eba9217ea83f70f51">RShift</a>, 
<a class="el" href="classExpressionNode.xhtml#af49d5c5d884b4c2a5827908460b996d1a77dfcf8f5926d9d42ae3bc2e575a5106">Numeric</a>
<br />
 }</td></tr>
<tr class="separator:af49d5c5d884b4c2a5827908460b996d1"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:adc8888de5329d356224c8a93f3ce2b75"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classExpressionNode.xhtml#adc8888de5329d356224c8a93f3ce2b75">ExpressionNode</a> ()</td></tr>
<tr class="separator:adc8888de5329d356224c8a93f3ce2b75"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a782c9aa3fd13ec1b64ad33d6df4814ac"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classExpressionNode.xhtml#a782c9aa3fd13ec1b64ad33d6df4814ac">Initialize</a> (wxString token)</td></tr>
<tr class="separator:a782c9aa3fd13ec1b64ad33d6df4814ac"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9df43a69fd50dc54267ffc535a3d303d"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classExpressionNode.xhtml#af49d5c5d884b4c2a5827908460b996d1">ExpressionNodeType</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classExpressionNode.xhtml#a9df43a69fd50dc54267ffc535a3d303d">GetType</a> () const </td></tr>
<tr class="separator:a9df43a69fd50dc54267ffc535a3d303d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac57ab8e80c4b2bb3a5d45c084217767d"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classExpressionNode.xhtml#ac57ab8e80c4b2bb3a5d45c084217767d">IsUnaryOperator</a> () const </td></tr>
<tr class="separator:ac57ab8e80c4b2bb3a5d45c084217767d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6311de34ec67fa8e10edb3e895bc7d23"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classExpressionNode.xhtml#a6311de34ec67fa8e10edb3e895bc7d23">SetUnaryOperator</a> (bool unary=true)</td></tr>
<tr class="separator:a6311de34ec67fa8e10edb3e895bc7d23"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0168a1829efce714d50ceb318744eefa"><td class="memItemLeft" align="right" valign="top">long&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classExpressionNode.xhtml#a0168a1829efce714d50ceb318744eefa">GetPriority</a> () const </td></tr>
<tr class="separator:a0168a1829efce714d50ceb318744eefa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abcaac3d5e53035c74143009013c6f499"><td class="memItemLeft" align="right" valign="top">wxString&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classExpressionNode.xhtml#abcaac3d5e53035c74143009013c6f499">GetToken</a> () const </td></tr>
<tr class="separator:abcaac3d5e53035c74143009013c6f499"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a34e0a4191a77a1f85e51d8de0c858ad1"><td class="memItemLeft" align="right" valign="top">long&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classExpressionNode.xhtml#a34e0a4191a77a1f85e51d8de0c858ad1">GetTokenValue</a> () const </td></tr>
<tr class="separator:a34e0a4191a77a1f85e51d8de0c858ad1"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-static-methods"></a>
Static Public Member Functions</h2></td></tr>
<tr class="memitem:a54d5a5c459de02ac4bba505bcc86e071"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="classExpressionNode.xhtml#af49d5c5d884b4c2a5827908460b996d1">ExpressionNodeType</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classExpressionNode.xhtml#a54d5a5c459de02ac4bba505bcc86e071">ParseNodeType</a> (wxString token)</td></tr>
<tr class="separator:a54d5a5c459de02ac4bba505bcc86e071"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aff9b1944f3933a51b5b048cd06740960"><td class="memItemLeft" align="right" valign="top">static long&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classExpressionNode.xhtml#aff9b1944f3933a51b5b048cd06740960">GetNodeTypePriority</a> (<a class="el" href="classExpressionNode.xhtml#af49d5c5d884b4c2a5827908460b996d1">ExpressionNodeType</a> type)</td></tr>
<tr class="separator:aff9b1944f3933a51b5b048cd06740960"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9519f9fbc943a25de65a2864dcdf24ba"><td class="memItemLeft" align="right" valign="top">static bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classExpressionNode.xhtml#a9519f9fbc943a25de65a2864dcdf24ba">IsUnaryNode</a> (<a class="el" href="classExpressionNode.xhtml#af49d5c5d884b4c2a5827908460b996d1">ExpressionNodeType</a> type)</td></tr>
<tr class="separator:a9519f9fbc943a25de65a2864dcdf24ba"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adec775437377a9332e18869b39f65105"><td class="memItemLeft" align="right" valign="top">static bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classExpressionNode.xhtml#adec775437377a9332e18869b39f65105">IsBinaryOperator</a> (wxString first, wxString second)</td></tr>
<tr class="separator:adec775437377a9332e18869b39f65105"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pri-attribs"></a>
Private Attributes</h2></td></tr>
<tr class="memitem:a425c4198895c4a2a6740e609291a3caf"><td class="memItemLeft" align="right" valign="top">wxString&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classExpressionNode.xhtml#a425c4198895c4a2a6740e609291a3caf">m_Token</a></td></tr>
<tr class="separator:a425c4198895c4a2a6740e609291a3caf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a870e409910ed1677c7e2e42d57fd4590"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classExpressionNode.xhtml#af49d5c5d884b4c2a5827908460b996d1">ExpressionNodeType</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classExpressionNode.xhtml#a870e409910ed1677c7e2e42d57fd4590">m_Type</a></td></tr>
<tr class="separator:a870e409910ed1677c7e2e42d57fd4590"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abdca256660de43ba97f791a9b1bb41bf"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classExpressionNode.xhtml#abdca256660de43ba97f791a9b1bb41bf">m_UnaryOperator</a></td></tr>
<tr class="separator:abdca256660de43ba97f791a9b1bb41bf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aec812882cdb7a162fc83946bd1aee186"><td class="memItemLeft" align="right" valign="top">long&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classExpressionNode.xhtml#aec812882cdb7a162fc83946bd1aee186">m_Priority</a></td></tr>
<tr class="separator:aec812882cdb7a162fc83946bd1aee186"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Member Enumeration Documentation</h2>
<a class="anchor" id="af49d5c5d884b4c2a5827908460b996d1"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="classExpressionNode.xhtml#af49d5c5d884b4c2a5827908460b996d1">ExpressionNode::ExpressionNodeType</a></td>
        </tr>
      </table>
</div><div class="memdoc">
<table class="fieldtable">
<tr><th colspan="2">Enumerator</th></tr><tr><td class="fieldname"><a class="anchor" id="af49d5c5d884b4c2a5827908460b996d1ac5823120c3cf02096156c4aec9bd103c"></a>Unknown&#160;</td><td class="fielddoc">
</td></tr>
<tr><td class="fieldname"><a class="anchor" id="af49d5c5d884b4c2a5827908460b996d1a739dc2069a2a6da8ad141c006d1ddad1"></a>Plus&#160;</td><td class="fielddoc">
</td></tr>
<tr><td class="fieldname"><a class="anchor" id="af49d5c5d884b4c2a5827908460b996d1a9ffdae8bd5b7b2b96f04dbf5e30f8130"></a>Subtract&#160;</td><td class="fielddoc">
</td></tr>
<tr><td class="fieldname"><a class="anchor" id="af49d5c5d884b4c2a5827908460b996d1a934d8aa25064a605fb74aa9cda5f0cc8"></a>Multiply&#160;</td><td class="fielddoc">
</td></tr>
<tr><td class="fieldname"><a class="anchor" id="af49d5c5d884b4c2a5827908460b996d1a4011df8a8e51b05f99aee7e7afb0b7ed"></a>Divide&#160;</td><td class="fielddoc">
</td></tr>
<tr><td class="fieldname"><a class="anchor" id="af49d5c5d884b4c2a5827908460b996d1a0e77c141b089263d6ebd4690633d3794"></a>LParenthesis&#160;</td><td class="fielddoc">
</td></tr>
<tr><td class="fieldname"><a class="anchor" id="af49d5c5d884b4c2a5827908460b996d1a6826c92f8a9211025e527e56789a1ad2"></a>RParenthesis&#160;</td><td class="fielddoc">
</td></tr>
<tr><td class="fieldname"><a class="anchor" id="af49d5c5d884b4c2a5827908460b996d1afd7bddc6781901a3461630965d7a8eb6"></a>Mod&#160;</td><td class="fielddoc">
</td></tr>
<tr><td class="fieldname"><a class="anchor" id="af49d5c5d884b4c2a5827908460b996d1a0534ddb3fc0fc5eba722628fba9e2ed3"></a>Power&#160;</td><td class="fielddoc">
</td></tr>
<tr><td class="fieldname"><a class="anchor" id="af49d5c5d884b4c2a5827908460b996d1a1e2acbf419b0e78cd966c48b0dd35be6"></a>BitwiseAnd&#160;</td><td class="fielddoc">
</td></tr>
<tr><td class="fieldname"><a class="anchor" id="af49d5c5d884b4c2a5827908460b996d1a355c5ce0eb9e10d96e1d1af2885d3615"></a>BitwiseOr&#160;</td><td class="fielddoc">
</td></tr>
<tr><td class="fieldname"><a class="anchor" id="af49d5c5d884b4c2a5827908460b996d1a1397e99136eb27032976d491015ed071"></a>And&#160;</td><td class="fielddoc">
</td></tr>
<tr><td class="fieldname"><a class="anchor" id="af49d5c5d884b4c2a5827908460b996d1aa3593d5bd43915f17bed74cf0fd33e12"></a>Or&#160;</td><td class="fielddoc">
</td></tr>
<tr><td class="fieldname"><a class="anchor" id="af49d5c5d884b4c2a5827908460b996d1a18e742919f3ffda7ba0383ab7794cc2e"></a>Not&#160;</td><td class="fielddoc">
</td></tr>
<tr><td class="fieldname"><a class="anchor" id="af49d5c5d884b4c2a5827908460b996d1ad36a378c133169aa29539ce0eaf3115e"></a>Equal&#160;</td><td class="fielddoc">
</td></tr>
<tr><td class="fieldname"><a class="anchor" id="af49d5c5d884b4c2a5827908460b996d1aa03cef66ae89f911e7339b280cac916b"></a>Unequal&#160;</td><td class="fielddoc">
</td></tr>
<tr><td class="fieldname"><a class="anchor" id="af49d5c5d884b4c2a5827908460b996d1a266a7fdc43eaf5c66e01874662487083"></a>GT&#160;</td><td class="fielddoc">
</td></tr>
<tr><td class="fieldname"><a class="anchor" id="af49d5c5d884b4c2a5827908460b996d1aa45da75dfd1e138f728dafd64a3fe3b8"></a>LT&#160;</td><td class="fielddoc">
</td></tr>
<tr><td class="fieldname"><a class="anchor" id="af49d5c5d884b4c2a5827908460b996d1a413389257452e948d5050c06bbf7015f"></a>GTOrEqual&#160;</td><td class="fielddoc">
</td></tr>
<tr><td class="fieldname"><a class="anchor" id="af49d5c5d884b4c2a5827908460b996d1a5b99d08ffbb2eae4078d4bae9477b71b"></a>LTOrEqual&#160;</td><td class="fielddoc">
</td></tr>
<tr><td class="fieldname"><a class="anchor" id="af49d5c5d884b4c2a5827908460b996d1a70ae6172528a0d14495042fecb217f59"></a>LShift&#160;</td><td class="fielddoc">
</td></tr>
<tr><td class="fieldname"><a class="anchor" id="af49d5c5d884b4c2a5827908460b996d1a57bd5097e1ec9e5eba9217ea83f70f51"></a>RShift&#160;</td><td class="fielddoc">
</td></tr>
<tr><td class="fieldname"><a class="anchor" id="af49d5c5d884b4c2a5827908460b996d1a77dfcf8f5926d9d42ae3bc2e575a5106"></a>Numeric&#160;</td><td class="fielddoc">
</td></tr>
</table>

</div>
</div>
<h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="adc8888de5329d356224c8a93f3ce2b75"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">ExpressionNode::ExpressionNode </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>References <a class="el" href="classExpressionNode.xhtml#a782c9aa3fd13ec1b64ad33d6df4814ac">Initialize()</a>.</p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a class="anchor" id="aff9b1944f3933a51b5b048cd06740960"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">long ExpressionNode::GetNodeTypePriority </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classExpressionNode.xhtml#af49d5c5d884b4c2a5827908460b996d1">ExpressionNodeType</a>&#160;</td>
          <td class="paramname"><em>type</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>References <a class="el" href="classExpressionNode.xhtml#af49d5c5d884b4c2a5827908460b996d1a1397e99136eb27032976d491015ed071">And</a>, <a class="el" href="classExpressionNode.xhtml#af49d5c5d884b4c2a5827908460b996d1a1e2acbf419b0e78cd966c48b0dd35be6">BitwiseAnd</a>, <a class="el" href="classExpressionNode.xhtml#af49d5c5d884b4c2a5827908460b996d1a355c5ce0eb9e10d96e1d1af2885d3615">BitwiseOr</a>, <a class="el" href="classExpressionNode.xhtml#af49d5c5d884b4c2a5827908460b996d1a4011df8a8e51b05f99aee7e7afb0b7ed">Divide</a>, <a class="el" href="classExpressionNode.xhtml#af49d5c5d884b4c2a5827908460b996d1ad36a378c133169aa29539ce0eaf3115e">Equal</a>, <a class="el" href="classExpressionNode.xhtml#af49d5c5d884b4c2a5827908460b996d1a266a7fdc43eaf5c66e01874662487083">GT</a>, <a class="el" href="classExpressionNode.xhtml#af49d5c5d884b4c2a5827908460b996d1a413389257452e948d5050c06bbf7015f">GTOrEqual</a>, <a class="el" href="classExpressionNode.xhtml#af49d5c5d884b4c2a5827908460b996d1a0e77c141b089263d6ebd4690633d3794">LParenthesis</a>, <a class="el" href="classExpressionNode.xhtml#af49d5c5d884b4c2a5827908460b996d1a70ae6172528a0d14495042fecb217f59">LShift</a>, <a class="el" href="classExpressionNode.xhtml#af49d5c5d884b4c2a5827908460b996d1aa45da75dfd1e138f728dafd64a3fe3b8">LT</a>, <a class="el" href="classExpressionNode.xhtml#af49d5c5d884b4c2a5827908460b996d1a5b99d08ffbb2eae4078d4bae9477b71b">LTOrEqual</a>, <a class="el" href="classExpressionNode.xhtml#af49d5c5d884b4c2a5827908460b996d1afd7bddc6781901a3461630965d7a8eb6">Mod</a>, <a class="el" href="classExpressionNode.xhtml#af49d5c5d884b4c2a5827908460b996d1a934d8aa25064a605fb74aa9cda5f0cc8">Multiply</a>, <a class="el" href="classExpressionNode.xhtml#af49d5c5d884b4c2a5827908460b996d1a18e742919f3ffda7ba0383ab7794cc2e">Not</a>, <a class="el" href="classExpressionNode.xhtml#af49d5c5d884b4c2a5827908460b996d1a77dfcf8f5926d9d42ae3bc2e575a5106">Numeric</a>, <a class="el" href="classExpressionNode.xhtml#af49d5c5d884b4c2a5827908460b996d1aa3593d5bd43915f17bed74cf0fd33e12">Or</a>, <a class="el" href="classExpressionNode.xhtml#af49d5c5d884b4c2a5827908460b996d1a739dc2069a2a6da8ad141c006d1ddad1">Plus</a>, <a class="el" href="classExpressionNode.xhtml#af49d5c5d884b4c2a5827908460b996d1a0534ddb3fc0fc5eba722628fba9e2ed3">Power</a>, <a class="el" href="classExpressionNode.xhtml#af49d5c5d884b4c2a5827908460b996d1a6826c92f8a9211025e527e56789a1ad2">RParenthesis</a>, <a class="el" href="classExpressionNode.xhtml#af49d5c5d884b4c2a5827908460b996d1a57bd5097e1ec9e5eba9217ea83f70f51">RShift</a>, <a class="el" href="classExpressionNode.xhtml#af49d5c5d884b4c2a5827908460b996d1a9ffdae8bd5b7b2b96f04dbf5e30f8130">Subtract</a>, <a class="el" href="classExpressionNode.xhtml#af49d5c5d884b4c2a5827908460b996d1aa03cef66ae89f911e7339b280cac916b">Unequal</a>, and <a class="el" href="classExpressionNode.xhtml#af49d5c5d884b4c2a5827908460b996d1ac5823120c3cf02096156c4aec9bd103c">Unknown</a>.</p>

<p>Referenced by <a class="el" href="classExpressionNode.xhtml#a782c9aa3fd13ec1b64ad33d6df4814ac">Initialize()</a>.</p>

</div>
</div>
<a class="anchor" id="a0168a1829efce714d50ceb318744eefa"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">long ExpressionNode::GetPriority </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>References <a class="el" href="classExpressionNode.xhtml#aec812882cdb7a162fc83946bd1aee186">m_Priority</a>.</p>

<p>Referenced by <a class="el" href="classExpression.xhtml#abd5d6655e417fd17da55637b3d6a7c59">Expression::ConvertInfixToPostfix()</a>.</p>

</div>
</div>
<a class="anchor" id="abcaac3d5e53035c74143009013c6f499"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">wxString ExpressionNode::GetToken </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>References <a class="el" href="classExpressionNode.xhtml#a425c4198895c4a2a6740e609291a3caf">m_Token</a>.</p>

</div>
</div>
<a class="anchor" id="a34e0a4191a77a1f85e51d8de0c858ad1"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">long ExpressionNode::GetTokenValue </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>References <a class="el" href="classExpressionNode.xhtml#a425c4198895c4a2a6740e609291a3caf">m_Token</a>.</p>

<p>Referenced by <a class="el" href="classExpression.xhtml#a32086003bded432c02f80b8a4c5e80a4">Expression::CalcPostfix()</a>.</p>

</div>
</div>
<a class="anchor" id="a9df43a69fd50dc54267ffc535a3d303d"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classExpressionNode.xhtml#af49d5c5d884b4c2a5827908460b996d1">ExpressionNodeType</a> ExpressionNode::GetType </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>References <a class="el" href="classExpressionNode.xhtml#a870e409910ed1677c7e2e42d57fd4590">m_Type</a>.</p>

<p>Referenced by <a class="el" href="classExpression.xhtml#a32086003bded432c02f80b8a4c5e80a4">Expression::CalcPostfix()</a>, and <a class="el" href="classExpression.xhtml#abd5d6655e417fd17da55637b3d6a7c59">Expression::ConvertInfixToPostfix()</a>.</p>

</div>
</div>
<a class="anchor" id="a782c9aa3fd13ec1b64ad33d6df4814ac"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ExpressionNode::Initialize </td>
          <td>(</td>
          <td class="paramtype">wxString&#160;</td>
          <td class="paramname"><em>token</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>References <a class="el" href="classExpressionNode.xhtml#aff9b1944f3933a51b5b048cd06740960">GetNodeTypePriority()</a>, <a class="el" href="classExpressionNode.xhtml#aec812882cdb7a162fc83946bd1aee186">m_Priority</a>, <a class="el" href="classExpressionNode.xhtml#a425c4198895c4a2a6740e609291a3caf">m_Token</a>, <a class="el" href="classExpressionNode.xhtml#a870e409910ed1677c7e2e42d57fd4590">m_Type</a>, <a class="el" href="classExpressionNode.xhtml#abdca256660de43ba97f791a9b1bb41bf">m_UnaryOperator</a>, and <a class="el" href="classExpressionNode.xhtml#a54d5a5c459de02ac4bba505bcc86e071">ParseNodeType()</a>.</p>

<p>Referenced by <a class="el" href="classExpression.xhtml#abd5d6655e417fd17da55637b3d6a7c59">Expression::ConvertInfixToPostfix()</a>, and <a class="el" href="classExpressionNode.xhtml#adc8888de5329d356224c8a93f3ce2b75">ExpressionNode()</a>.</p>

</div>
</div>
<a class="anchor" id="adec775437377a9332e18869b39f65105"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool ExpressionNode::IsBinaryOperator </td>
          <td>(</td>
          <td class="paramtype">wxString&#160;</td>
          <td class="paramname"><em>first</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">wxString&#160;</td>
          <td class="paramname"><em>second</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>References <a class="el" href="namespaceExpressionConsts.xhtml#a642a7a22ed87c2c9f215fdb2daf57994">ExpressionConsts::And()</a>, <a class="el" href="namespaceExpressionConsts.xhtml#adb80738ed7f3495ac7e8b814d98af97c">ExpressionConsts::Equal()</a>, <a class="el" href="namespaceExpressionConsts.xhtml#a3b80671d6bda8934b83a7c2b424f89e6">ExpressionConsts::GTOrEqual()</a>, <a class="el" href="namespaceExpressionConsts.xhtml#af8ebe6b41886e36e6b224fc9faf6086e">ExpressionConsts::LShift()</a>, <a class="el" href="namespaceExpressionConsts.xhtml#ad7ab11174b0a6a7a998dedb815598015">ExpressionConsts::LTOrEqual()</a>, <a class="el" href="namespaceExpressionConsts.xhtml#a94a057a06ddfbe7db84d167db5ad023d">ExpressionConsts::Or()</a>, <a class="el" href="namespaceExpressionConsts.xhtml#aed62eb2ee8f9ccb39961703bc2806f83">ExpressionConsts::RShift()</a>, and <a class="el" href="namespaceExpressionConsts.xhtml#a68ebb45bba27df6ab22688fedd27a26f">ExpressionConsts::Unequal()</a>.</p>

<p>Referenced by <a class="el" href="classExpression.xhtml#aa306d6b8aa85d8aace16fa1ca2f3982c">Expression::AddToInfixExpression()</a>.</p>

</div>
</div>
<a class="anchor" id="a9519f9fbc943a25de65a2864dcdf24ba"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool ExpressionNode::IsUnaryNode </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classExpressionNode.xhtml#af49d5c5d884b4c2a5827908460b996d1">ExpressionNodeType</a>&#160;</td>
          <td class="paramname"><em>type</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>References <a class="el" href="classExpressionNode.xhtml#af49d5c5d884b4c2a5827908460b996d1a1397e99136eb27032976d491015ed071">And</a>, <a class="el" href="classExpressionNode.xhtml#af49d5c5d884b4c2a5827908460b996d1a1e2acbf419b0e78cd966c48b0dd35be6">BitwiseAnd</a>, <a class="el" href="classExpressionNode.xhtml#af49d5c5d884b4c2a5827908460b996d1a355c5ce0eb9e10d96e1d1af2885d3615">BitwiseOr</a>, <a class="el" href="classExpressionNode.xhtml#af49d5c5d884b4c2a5827908460b996d1a4011df8a8e51b05f99aee7e7afb0b7ed">Divide</a>, <a class="el" href="classExpressionNode.xhtml#af49d5c5d884b4c2a5827908460b996d1ad36a378c133169aa29539ce0eaf3115e">Equal</a>, <a class="el" href="classExpressionNode.xhtml#af49d5c5d884b4c2a5827908460b996d1a266a7fdc43eaf5c66e01874662487083">GT</a>, <a class="el" href="classExpressionNode.xhtml#af49d5c5d884b4c2a5827908460b996d1a413389257452e948d5050c06bbf7015f">GTOrEqual</a>, <a class="el" href="classExpressionNode.xhtml#af49d5c5d884b4c2a5827908460b996d1a0e77c141b089263d6ebd4690633d3794">LParenthesis</a>, <a class="el" href="classExpressionNode.xhtml#af49d5c5d884b4c2a5827908460b996d1a70ae6172528a0d14495042fecb217f59">LShift</a>, <a class="el" href="classExpressionNode.xhtml#af49d5c5d884b4c2a5827908460b996d1aa45da75dfd1e138f728dafd64a3fe3b8">LT</a>, <a class="el" href="classExpressionNode.xhtml#af49d5c5d884b4c2a5827908460b996d1a5b99d08ffbb2eae4078d4bae9477b71b">LTOrEqual</a>, <a class="el" href="classExpressionNode.xhtml#af49d5c5d884b4c2a5827908460b996d1afd7bddc6781901a3461630965d7a8eb6">Mod</a>, <a class="el" href="classExpressionNode.xhtml#af49d5c5d884b4c2a5827908460b996d1a934d8aa25064a605fb74aa9cda5f0cc8">Multiply</a>, <a class="el" href="classExpressionNode.xhtml#af49d5c5d884b4c2a5827908460b996d1a18e742919f3ffda7ba0383ab7794cc2e">Not</a>, <a class="el" href="classExpressionNode.xhtml#af49d5c5d884b4c2a5827908460b996d1a77dfcf8f5926d9d42ae3bc2e575a5106">Numeric</a>, <a class="el" href="classExpressionNode.xhtml#af49d5c5d884b4c2a5827908460b996d1aa3593d5bd43915f17bed74cf0fd33e12">Or</a>, <a class="el" href="classExpressionNode.xhtml#af49d5c5d884b4c2a5827908460b996d1a739dc2069a2a6da8ad141c006d1ddad1">Plus</a>, <a class="el" href="classExpressionNode.xhtml#af49d5c5d884b4c2a5827908460b996d1a0534ddb3fc0fc5eba722628fba9e2ed3">Power</a>, <a class="el" href="classExpressionNode.xhtml#af49d5c5d884b4c2a5827908460b996d1a6826c92f8a9211025e527e56789a1ad2">RParenthesis</a>, <a class="el" href="classExpressionNode.xhtml#af49d5c5d884b4c2a5827908460b996d1a57bd5097e1ec9e5eba9217ea83f70f51">RShift</a>, <a class="el" href="classExpressionNode.xhtml#af49d5c5d884b4c2a5827908460b996d1a9ffdae8bd5b7b2b96f04dbf5e30f8130">Subtract</a>, <a class="el" href="classExpressionNode.xhtml#af49d5c5d884b4c2a5827908460b996d1aa03cef66ae89f911e7339b280cac916b">Unequal</a>, and <a class="el" href="classExpressionNode.xhtml#af49d5c5d884b4c2a5827908460b996d1ac5823120c3cf02096156c4aec9bd103c">Unknown</a>.</p>

<p>Referenced by <a class="el" href="classExpression.xhtml#abd5d6655e417fd17da55637b3d6a7c59">Expression::ConvertInfixToPostfix()</a>.</p>

</div>
</div>
<a class="anchor" id="ac57ab8e80c4b2bb3a5d45c084217767d"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool ExpressionNode::IsUnaryOperator </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>References <a class="el" href="classExpressionNode.xhtml#abdca256660de43ba97f791a9b1bb41bf">m_UnaryOperator</a>.</p>

<p>Referenced by <a class="el" href="classExpression.xhtml#a32086003bded432c02f80b8a4c5e80a4">Expression::CalcPostfix()</a>.</p>

</div>
</div>
<a class="anchor" id="a54d5a5c459de02ac4bba505bcc86e071"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classExpressionNode.xhtml#af49d5c5d884b4c2a5827908460b996d1">ExpressionNode::ExpressionNodeType</a> ExpressionNode::ParseNodeType </td>
          <td>(</td>
          <td class="paramtype">wxString&#160;</td>
          <td class="paramname"><em>token</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>References <a class="el" href="classExpressionNode.xhtml#af49d5c5d884b4c2a5827908460b996d1a1397e99136eb27032976d491015ed071">And</a>, <a class="el" href="namespaceExpressionConsts.xhtml#a642a7a22ed87c2c9f215fdb2daf57994">ExpressionConsts::And()</a>, <a class="el" href="classExpressionNode.xhtml#af49d5c5d884b4c2a5827908460b996d1a1e2acbf419b0e78cd966c48b0dd35be6">BitwiseAnd</a>, <a class="el" href="namespaceExpressionConsts.xhtml#a9dcbba602a9a70a126b37063d26b6614">ExpressionConsts::BitwiseAnd()</a>, <a class="el" href="classExpressionNode.xhtml#af49d5c5d884b4c2a5827908460b996d1a355c5ce0eb9e10d96e1d1af2885d3615">BitwiseOr</a>, <a class="el" href="namespaceExpressionConsts.xhtml#a098bef1a477e06c7ed3479622a9f9050">ExpressionConsts::BitwiseOr()</a>, <a class="el" href="classExpressionNode.xhtml#af49d5c5d884b4c2a5827908460b996d1a4011df8a8e51b05f99aee7e7afb0b7ed">Divide</a>, <a class="el" href="namespaceExpressionConsts.xhtml#ad775820f694275ef68432436df6f3a9e">ExpressionConsts::Divide()</a>, <a class="el" href="classExpressionNode.xhtml#af49d5c5d884b4c2a5827908460b996d1ad36a378c133169aa29539ce0eaf3115e">Equal</a>, <a class="el" href="namespaceExpressionConsts.xhtml#adb80738ed7f3495ac7e8b814d98af97c">ExpressionConsts::Equal()</a>, <a class="el" href="classExpressionNode.xhtml#af49d5c5d884b4c2a5827908460b996d1a266a7fdc43eaf5c66e01874662487083">GT</a>, <a class="el" href="namespaceExpressionConsts.xhtml#af5bcd6e36cd2d363b5808d0e06474ff2">ExpressionConsts::GT()</a>, <a class="el" href="classExpressionNode.xhtml#af49d5c5d884b4c2a5827908460b996d1a413389257452e948d5050c06bbf7015f">GTOrEqual</a>, <a class="el" href="namespaceExpressionConsts.xhtml#a3b80671d6bda8934b83a7c2b424f89e6">ExpressionConsts::GTOrEqual()</a>, <a class="el" href="classExpressionNode.xhtml#af49d5c5d884b4c2a5827908460b996d1a0e77c141b089263d6ebd4690633d3794">LParenthesis</a>, <a class="el" href="namespaceExpressionConsts.xhtml#abd0db2c6c6f70383523b29162fcf6f8c">ExpressionConsts::LParenthesis()</a>, <a class="el" href="classExpressionNode.xhtml#af49d5c5d884b4c2a5827908460b996d1a70ae6172528a0d14495042fecb217f59">LShift</a>, <a class="el" href="namespaceExpressionConsts.xhtml#af8ebe6b41886e36e6b224fc9faf6086e">ExpressionConsts::LShift()</a>, <a class="el" href="classExpressionNode.xhtml#af49d5c5d884b4c2a5827908460b996d1aa45da75dfd1e138f728dafd64a3fe3b8">LT</a>, <a class="el" href="namespaceExpressionConsts.xhtml#ab3d3934214064bc7df0fb0465a89becd">ExpressionConsts::LT()</a>, <a class="el" href="classExpressionNode.xhtml#af49d5c5d884b4c2a5827908460b996d1a5b99d08ffbb2eae4078d4bae9477b71b">LTOrEqual</a>, <a class="el" href="namespaceExpressionConsts.xhtml#ad7ab11174b0a6a7a998dedb815598015">ExpressionConsts::LTOrEqual()</a>, <a class="el" href="classExpressionNode.xhtml#af49d5c5d884b4c2a5827908460b996d1afd7bddc6781901a3461630965d7a8eb6">Mod</a>, <a class="el" href="namespaceExpressionConsts.xhtml#a10a4860e47125dafab687679387cab63">ExpressionConsts::Mod()</a>, <a class="el" href="classExpressionNode.xhtml#af49d5c5d884b4c2a5827908460b996d1a934d8aa25064a605fb74aa9cda5f0cc8">Multiply</a>, <a class="el" href="namespaceExpressionConsts.xhtml#aa996ad84b2ee347cf8bba5795553de40">ExpressionConsts::Multiply()</a>, <a class="el" href="classExpressionNode.xhtml#af49d5c5d884b4c2a5827908460b996d1a18e742919f3ffda7ba0383ab7794cc2e">Not</a>, <a class="el" href="namespaceExpressionConsts.xhtml#a702a38f68da05723ceaa4e78a6964fdc">ExpressionConsts::Not()</a>, <a class="el" href="classExpressionNode.xhtml#af49d5c5d884b4c2a5827908460b996d1a77dfcf8f5926d9d42ae3bc2e575a5106">Numeric</a>, <a class="el" href="classExpressionNode.xhtml#af49d5c5d884b4c2a5827908460b996d1aa3593d5bd43915f17bed74cf0fd33e12">Or</a>, <a class="el" href="namespaceExpressionConsts.xhtml#a94a057a06ddfbe7db84d167db5ad023d">ExpressionConsts::Or()</a>, <a class="el" href="classExpressionNode.xhtml#af49d5c5d884b4c2a5827908460b996d1a739dc2069a2a6da8ad141c006d1ddad1">Plus</a>, <a class="el" href="namespaceExpressionConsts.xhtml#a8b9a4ec3a3647a8ce221fe6aa9ae53d8">ExpressionConsts::Plus()</a>, <a class="el" href="classExpressionNode.xhtml#af49d5c5d884b4c2a5827908460b996d1a0534ddb3fc0fc5eba722628fba9e2ed3">Power</a>, <a class="el" href="namespaceExpressionConsts.xhtml#a79d1fe824f49f2b51fb2eec465b5351d">ExpressionConsts::Power()</a>, <a class="el" href="classExpressionNode.xhtml#af49d5c5d884b4c2a5827908460b996d1a6826c92f8a9211025e527e56789a1ad2">RParenthesis</a>, <a class="el" href="namespaceExpressionConsts.xhtml#a4c000c5c2502ced232a630636c1e2d3a">ExpressionConsts::RParenthesis()</a>, <a class="el" href="classExpressionNode.xhtml#af49d5c5d884b4c2a5827908460b996d1a57bd5097e1ec9e5eba9217ea83f70f51">RShift</a>, <a class="el" href="namespaceExpressionConsts.xhtml#aed62eb2ee8f9ccb39961703bc2806f83">ExpressionConsts::RShift()</a>, <a class="el" href="classExpressionNode.xhtml#af49d5c5d884b4c2a5827908460b996d1a9ffdae8bd5b7b2b96f04dbf5e30f8130">Subtract</a>, <a class="el" href="namespaceExpressionConsts.xhtml#ae8955dc2ef64bdfa3716714bb765a68e">ExpressionConsts::Subtract()</a>, <a class="el" href="classExpressionNode.xhtml#af49d5c5d884b4c2a5827908460b996d1aa03cef66ae89f911e7339b280cac916b">Unequal</a>, <a class="el" href="namespaceExpressionConsts.xhtml#a68ebb45bba27df6ab22688fedd27a26f">ExpressionConsts::Unequal()</a>, and <a class="el" href="classExpressionNode.xhtml#af49d5c5d884b4c2a5827908460b996d1ac5823120c3cf02096156c4aec9bd103c">Unknown</a>.</p>

<p>Referenced by <a class="el" href="classExpressionNode.xhtml#a782c9aa3fd13ec1b64ad33d6df4814ac">Initialize()</a>.</p>

</div>
</div>
<a class="anchor" id="a6311de34ec67fa8e10edb3e895bc7d23"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void ExpressionNode::SetUnaryOperator </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>unary</em> = <code>true</code></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>References <a class="el" href="classExpressionNode.xhtml#abdca256660de43ba97f791a9b1bb41bf">m_UnaryOperator</a>.</p>

<p>Referenced by <a class="el" href="classExpression.xhtml#abd5d6655e417fd17da55637b3d6a7c59">Expression::ConvertInfixToPostfix()</a>.</p>

</div>
</div>
<h2 class="groupheader">Member Data Documentation</h2>
<a class="anchor" id="aec812882cdb7a162fc83946bd1aee186"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">long ExpressionNode::m_Priority</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Referenced by <a class="el" href="classExpressionNode.xhtml#a0168a1829efce714d50ceb318744eefa">GetPriority()</a>, and <a class="el" href="classExpressionNode.xhtml#a782c9aa3fd13ec1b64ad33d6df4814ac">Initialize()</a>.</p>

</div>
</div>
<a class="anchor" id="a425c4198895c4a2a6740e609291a3caf"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">wxString ExpressionNode::m_Token</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Referenced by <a class="el" href="classExpressionNode.xhtml#abcaac3d5e53035c74143009013c6f499">GetToken()</a>, <a class="el" href="classExpressionNode.xhtml#a34e0a4191a77a1f85e51d8de0c858ad1">GetTokenValue()</a>, and <a class="el" href="classExpressionNode.xhtml#a782c9aa3fd13ec1b64ad33d6df4814ac">Initialize()</a>.</p>

</div>
</div>
<a class="anchor" id="a870e409910ed1677c7e2e42d57fd4590"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classExpressionNode.xhtml#af49d5c5d884b4c2a5827908460b996d1">ExpressionNodeType</a> ExpressionNode::m_Type</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Referenced by <a class="el" href="classExpressionNode.xhtml#a9df43a69fd50dc54267ffc535a3d303d">GetType()</a>, and <a class="el" href="classExpressionNode.xhtml#a782c9aa3fd13ec1b64ad33d6df4814ac">Initialize()</a>.</p>

</div>
</div>
<a class="anchor" id="abdca256660de43ba97f791a9b1bb41bf"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool ExpressionNode::m_UnaryOperator</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Referenced by <a class="el" href="classExpressionNode.xhtml#a782c9aa3fd13ec1b64ad33d6df4814ac">Initialize()</a>, <a class="el" href="classExpressionNode.xhtml#ac57ab8e80c4b2bb3a5d45c084217767d">IsUnaryOperator()</a>, and <a class="el" href="classExpressionNode.xhtml#a6311de34ec67fa8e10edb3e895bc7d23">SetUnaryOperator()</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li><a class="el" href="expression_8h_source.xhtml">expression.h</a></li>
<li><a class="el" href="expression_8cpp.xhtml">expression.cpp</a></li>
</ul>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.8
</small></address>
</body>
</html>
