<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.8"/>
<title>Code::Blocks: ipc.h Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">Code::Blocks
   &#160;<span id="projectnumber">SVN r10078</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.8 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li class="current"><a href="files.xhtml"><span>Files</span></a></li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.xhtml"><span>File&#160;List</span></a></li>
      <li><a href="globals.xhtml"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">ipc.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="ipc_8h.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * This file is part of the Code::Blocks IDE and licensed under the GNU General Public License, version 3</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> * http://www.gnu.org/licenses/gpl-3.0.html</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;</div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="preprocessor">#ifndef IPC_H</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="preprocessor">#define IPC_H</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;</div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;</div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="sdk_8h.xhtml">sdk.h</a>&quot;</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;</div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="preprocessor">#include &lt;wx/wx.h&gt;</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;</div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;</div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="preprocessor">#ifdef __WIN32__</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;</div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="preprocessor">    #define WIN32_LEAN_AND_MEAN</span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="preprocessor">    #define NOGDI</span></div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="preprocessor">    #include &lt;windows.h&gt;</span></div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;    <span class="keyword">typedef</span> HANDLE <a class="code" href="ipc_8h.xhtml#a2bf556e48694c99c37c5297c69ffdfb8">shm_handle_t</a>;</div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;    <span class="keyword">typedef</span> HANDLE <a class="code" href="ipc_8h.xhtml#adff944f3814ee72e53075724fce0abc9">semaphore_t</a>;</div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;</div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="preprocessor">#else</span></div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;</div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="preprocessor">    #include &lt;fcntl.h&gt;</span></div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="preprocessor">    #include &lt;errno.h&gt;</span></div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="preprocessor">    #include &lt;sys/types.h&gt;</span></div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="preprocessor">    #include &lt;sys/sem.h&gt;</span></div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="preprocessor">    #include &lt;sys/ipc.h&gt;</span></div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="preprocessor">    #include &lt;sys/shm.h&gt;</span></div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;</div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="preprocessor">    #if defined(__APPLE__) &amp;&amp; defined(__MACH__)</span></div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;        <span class="keyword">typedef</span> <span class="keywordtype">int</span> <a class="code" href="ipc_8h.xhtml#a2bf556e48694c99c37c5297c69ffdfb8">shm_handle_t</a>;</div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;        <span class="keyword">typedef</span> mach_port_t <a class="code" href="ipc_8h.xhtml#adff944f3814ee72e53075724fce0abc9">semaphore_t</a>;</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="preprocessor">    #else</span></div>
<div class="line"><a name="l00036"></a><span class="lineno"><a class="line" href="ipc_8h.xhtml#a2bf556e48694c99c37c5297c69ffdfb8">   36</a></span>&#160;        <span class="keyword">typedef</span> <span class="keywordtype">int</span> <a class="code" href="ipc_8h.xhtml#a2bf556e48694c99c37c5297c69ffdfb8">shm_handle_t</a>;</div>
<div class="line"><a name="l00037"></a><span class="lineno"><a class="line" href="ipc_8h.xhtml#adff944f3814ee72e53075724fce0abc9">   37</a></span>&#160;        <span class="keyword">typedef</span> <span class="keywordtype">int</span> <a class="code" href="ipc_8h.xhtml#adff944f3814ee72e53075724fce0abc9">semaphore_t</a>;</div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="preprocessor">    #endif</span></div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;</div>
<div class="line"><a name="l00042"></a><span class="lineno"><a class="line" href="ipc_8h.xhtml#aef6856fcab4361d353e6ca24b01c549f">   42</a></span>&#160;<span class="keyword">static</span> <span class="keyword">const</span> <span class="keywordtype">int</span> <a class="code" href="ipc_8h.xhtml#aef6856fcab4361d353e6ca24b01c549f">ipc_buf_size</a> = 1024*64;</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;</div>
<div class="line"><a name="l00045"></a><span class="lineno"><a class="line" href="classSharedMemory.xhtml">   45</a></span>&#160;<span class="keyword">class </span><a class="code" href="classSharedMemory.xhtml">SharedMemory</a></div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;{</div>
<div class="line"><a name="l00047"></a><span class="lineno"><a class="line" href="classSharedMemory.xhtml#adda89ef5508e0f384fc0ee8ee0e24457">   47</a></span>&#160;    <a class="code" href="ipc_8h.xhtml#a2bf556e48694c99c37c5297c69ffdfb8">shm_handle_t</a> <a class="code" href="classSharedMemory.xhtml#adda89ef5508e0f384fc0ee8ee0e24457">handle</a>;</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;    <span class="keyword">union</span></div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    {</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;        <a class="code" href="ipc_8h.xhtml#adff944f3814ee72e53075724fce0abc9">semaphore_t</a> semid;</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;        <a class="code" href="ipc_8h.xhtml#adff944f3814ee72e53075724fce0abc9">semaphore_t</a> sem[2];</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;    };</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;</div>
<div class="line"><a name="l00055"></a><span class="lineno"><a class="line" href="classSharedMemory.xhtml#ad82f26c5bf106bd11705fc36945e069b">   55</a></span>&#160;    <span class="keywordtype">void</span>* <a class="code" href="classSharedMemory.xhtml#ad82f26c5bf106bd11705fc36945e069b">shared</a>;</div>
<div class="line"><a name="l00056"></a><span class="lineno"><a class="line" href="classSharedMemory.xhtml#a441b6e87a13b0d8d53818e9ed50bb73a">   56</a></span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classSharedMemory.xhtml#a441b6e87a13b0d8d53818e9ed50bb73a">ok</a>;</div>
<div class="line"><a name="l00057"></a><span class="lineno"><a class="line" href="classSharedMemory.xhtml#aed6740e969e1d81ec75317de9406abe0">   57</a></span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classSharedMemory.xhtml#aed6740e969e1d81ec75317de9406abe0">server</a>;</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;</div>
<div class="line"><a name="l00061"></a><span class="lineno"><a class="line" href="classSharedMemory.xhtml#ac56ed7b972111d735a0a101507370be3a1982ec1e2786f8d120f34da94cf05867">   61</a></span>&#160;    <span class="keyword">enum</span> <a class="code" href="classSharedMemory.xhtml#ac56ed7b972111d735a0a101507370be3">rw_t</a>{ <a class="code" href="classSharedMemory.xhtml#ac56ed7b972111d735a0a101507370be3ab5d2acfa842d581ed6740f4bf9b19280">reader</a>, <a class="code" href="classSharedMemory.xhtml#ac56ed7b972111d735a0a101507370be3a1982ec1e2786f8d120f34da94cf05867">writer</a> };</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;    <a class="code" href="classSharedMemory.xhtml#ad4cee9385b663fa8bc396e934ca9b50e">SharedMemory</a>();</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;    <a class="code" href="classSharedMemory.xhtml#adc56751ce1b30224689e71cd3b6c09be">~SharedMemory</a>();</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;</div>
<div class="line"><a name="l00066"></a><span class="lineno"><a class="line" href="classSharedMemory.xhtml#a22f39c0fcb0b26c2929fe666e7654191">   66</a></span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classSharedMemory.xhtml#a22f39c0fcb0b26c2929fe666e7654191">OK</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> <a class="code" href="classSharedMemory.xhtml#a441b6e87a13b0d8d53818e9ed50bb73a">ok</a>; };</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;</div>
<div class="line"><a name="l00068"></a><span class="lineno"><a class="line" href="classSharedMemory.xhtml#ae4bf0aab5cc417d0aedb1318b522e31c">   68</a></span>&#160;    <span class="keywordtype">void</span>* <a class="code" href="classSharedMemory.xhtml#ae4bf0aab5cc417d0aedb1318b522e31c">BasePointer</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> <a class="code" href="classSharedMemory.xhtml#ad82f26c5bf106bd11705fc36945e069b">shared</a>; };</div>
<div class="line"><a name="l00069"></a><span class="lineno"><a class="line" href="classSharedMemory.xhtml#ac63c23dc33025654cc5cf90ceeb4a5d7">   69</a></span>&#160;    <span class="keywordtype">size_t</span> <a class="code" href="classSharedMemory.xhtml#ac63c23dc33025654cc5cf90ceeb4a5d7">Size</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> <a class="code" href="ipc_8h.xhtml#aef6856fcab4361d353e6ca24b01c549f">ipc_buf_size</a>; };</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;</div>
<div class="line"><a name="l00071"></a><span class="lineno"><a class="line" href="classSharedMemory.xhtml#a54004c2aeba3756be05225d9f53630a5">   71</a></span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classSharedMemory.xhtml#a54004c2aeba3756be05225d9f53630a5">Server</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> <a class="code" href="classSharedMemory.xhtml#aed6740e969e1d81ec75317de9406abe0">server</a>; };</div>
<div class="line"><a name="l00072"></a><span class="lineno"><a class="line" href="classSharedMemory.xhtml#aded25c32a481f5b94a4fbafc628bc7b4">   72</a></span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classSharedMemory.xhtml#aded25c32a481f5b94a4fbafc628bc7b4">Client</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> !<a class="code" href="classSharedMemory.xhtml#aed6740e969e1d81ec75317de9406abe0">server</a>; };</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;    <span class="comment">/*</span></div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;<span class="comment">     * Lock(reader) locks &quot;as reader&quot;, not &quot;the reader semaphore&quot;, i.e. it</span></div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;<span class="comment">     *   1. locks the reader semaphore</span></div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;<span class="comment">     *   2. locks the writer mutex, so the shared memory cannot be written while we read it</span></div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;<span class="comment">     * Lock(writer) locks &quot;as writer&quot;, this is equivalent to locking &quot;the writer mutex&quot;</span></div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;<span class="comment">     * Unlock(reader) unlocks &quot;as reader&quot;, i.e. it actually unlocks the writer mutex</span></div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;<span class="comment">     *   which the caller is still holding, so another process can write to the shared memory area again.</span></div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;<span class="comment">     *   It does not release the reader semaphore, since it should block on it on the next iteration.</span></div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;<span class="comment">     *</span></div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;<span class="comment">     * Unlock(writer) locks &quot;as writer&quot;, i.e. it</span></div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;<span class="comment">     *   1. unlocks the reader semaphore, waking up the Server thread</span></div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;<span class="comment">     *   2. unlocks the writer mutex, so the Server thread can acquire it and prevent other processes from writing</span></div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;<span class="comment">     */</span></div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classSharedMemory.xhtml#a12276107643989592da9d002522f454e">Lock</a>(<a class="code" href="classSharedMemory.xhtml#ac56ed7b972111d735a0a101507370be3">rw_t</a> rw);</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classSharedMemory.xhtml#a5e2e8ab0da5a556acb5226ed886d88a6">Unlock</a>(<a class="code" href="classSharedMemory.xhtml#ac56ed7b972111d735a0a101507370be3">rw_t</a> rw);</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;};</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;</div>
<div class="line"><a name="l00095"></a><span class="lineno"><a class="line" href="classIPC.xhtml">   95</a></span>&#160;<span class="keyword">class </span><a class="code" href="classIPC.xhtml">IPC</a> : <span class="keyword">public</span> wxThread</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;{</div>
<div class="line"><a name="l00097"></a><span class="lineno"><a class="line" href="classIPC.xhtml#a6788538e876bcceb94dee59b89c17d93">   97</a></span>&#160;    <span class="keyword">volatile</span> <span class="keywordtype">bool</span> <a class="code" href="classIPC.xhtml#a6788538e876bcceb94dee59b89c17d93">is_shutdown</a>;</div>
<div class="line"><a name="l00098"></a><span class="lineno"><a class="line" href="classIPC.xhtml#ad73b4a6a6f18d6c5c756559bf2e12175">   98</a></span>&#160;    <a class="code" href="classSharedMemory.xhtml">SharedMemory</a>  <a class="code" href="classIPC.xhtml#ad73b4a6a6f18d6c5c756559bf2e12175">shm</a>;</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00101"></a><span class="lineno"><a class="line" href="classIPC.xhtml#a0a5158a361abb5a79cc36edbd8691e51">  101</a></span>&#160;    <a class="code" href="classIPC.xhtml#a0a5158a361abb5a79cc36edbd8691e51">IPC</a>() : is_shutdown(false) {};</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;    <span class="keyword">virtual</span> ExitCode <a class="code" href="classIPC.xhtml#a20426029f07c76bc21b48e4313aa1d50">Entry</a>();</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;</div>
<div class="line"><a name="l00105"></a><span class="lineno"><a class="line" href="classIPC.xhtml#a7dca8f853dce810eaf5457ee0a8e9cc9">  105</a></span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classIPC.xhtml#a7dca8f853dce810eaf5457ee0a8e9cc9">Server</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> shm.<a class="code" href="classSharedMemory.xhtml#a54004c2aeba3756be05225d9f53630a5">Server</a>(); };</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classIPC.xhtml#af74178e54021f05000a5654e30e9a481">Shutdown</a>();</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classIPC.xhtml#a69c62d9ad3d7b4926cd610f0b059065e">Send</a>(<span class="keyword">const</span> wxString&amp; value);</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;};</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;<span class="comment">/*</span></div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;<span class="comment"> *  expemplary code for app.cpp, specifically CodeBlocksApp::ParseCmdLine  &gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;</span></div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;<span class="comment">IPC *ipc = new IPC; // don&#39;t delete</span></div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;<span class="comment">if (ipc-&gt;Server())</span></div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;<span class="comment">{</span></div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;<span class="comment">    ipc-&gt;Run();</span></div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;<span class="comment">}</span></div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;<span class="comment">else</span></div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;<span class="comment">{</span></div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;<span class="comment">    // parser is the wxCmdLineParser</span></div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;<span class="comment">    wxString item;</span></div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;<span class="comment">    wxString buf;</span></div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;<span class="comment">    static const unsigned int max_size = ipc_buf_size / sizeof(wxChar);</span></div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;<span class="comment">    buf.Alloc(4096);</span></div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;<span class="comment">    int count = parser.GetParamCount();</span></div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;<span class="comment">    for (int i = 0; i &lt; count; ++i)</span></div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;<span class="comment">    {</span></div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;<span class="comment">        item = parser.GetParam(i);</span></div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;<span class="comment">        item.append(_T(&#39;\n&#39;));</span></div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;<span class="comment">        if (buf.length() + item.length() + 1) &gt;= max_size)</span></div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;<span class="comment">        {</span></div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;<span class="comment">            buf.append(_T(&#39;\0&#39;));</span></div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;<span class="comment">            ipc-&gt;Send(buf);</span></div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;<span class="comment">            buf.Empty();</span></div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;<span class="comment">        }</span></div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;<span class="comment">        buf.append(item);</span></div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;<span class="comment">    }</span></div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;<span class="comment">    if (buf.length())</span></div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;<span class="comment">    {</span></div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;<span class="comment">        buf.append(_T(&#39;\0&#39;));</span></div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;<span class="comment">        ipc-&gt;Send(buf);</span></div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;<span class="comment">    }</span></div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;<span class="comment">}</span></div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;<span class="comment"> *  &lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt; expemplary code</span></div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;</div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;</div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;</div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;</div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="ttc" id="classSharedMemory_xhtml_ad82f26c5bf106bd11705fc36945e069b"><div class="ttname"><a href="classSharedMemory.xhtml#ad82f26c5bf106bd11705fc36945e069b">SharedMemory::shared</a></div><div class="ttdeci">void * shared</div><div class="ttdef"><b>Definition:</b> ipc.h:55</div></div>
<div class="ttc" id="classSharedMemory_xhtml_a54004c2aeba3756be05225d9f53630a5"><div class="ttname"><a href="classSharedMemory.xhtml#a54004c2aeba3756be05225d9f53630a5">SharedMemory::Server</a></div><div class="ttdeci">bool Server() const </div><div class="ttdef"><b>Definition:</b> ipc.h:71</div></div>
<div class="ttc" id="classSharedMemory_xhtml_adc56751ce1b30224689e71cd3b6c09be"><div class="ttname"><a href="classSharedMemory.xhtml#adc56751ce1b30224689e71cd3b6c09be">SharedMemory::~SharedMemory</a></div><div class="ttdeci">~SharedMemory()</div><div class="ttdef"><b>Definition:</b> ipc.cpp:204</div></div>
<div class="ttc" id="classSharedMemory_xhtml_a5e2e8ab0da5a556acb5226ed886d88a6"><div class="ttname"><a href="classSharedMemory.xhtml#a5e2e8ab0da5a556acb5226ed886d88a6">SharedMemory::Unlock</a></div><div class="ttdeci">void Unlock(rw_t rw)</div><div class="ttdef"><b>Definition:</b> ipc.cpp:244</div></div>
<div class="ttc" id="classIPC_xhtml_af74178e54021f05000a5654e30e9a481"><div class="ttname"><a href="classIPC.xhtml#af74178e54021f05000a5654e30e9a481">IPC::Shutdown</a></div><div class="ttdeci">void Shutdown()</div><div class="ttdef"><b>Definition:</b> ipc.cpp:41</div></div>
<div class="ttc" id="classSharedMemory_xhtml_ad4cee9385b663fa8bc396e934ca9b50e"><div class="ttname"><a href="classSharedMemory.xhtml#ad4cee9385b663fa8bc396e934ca9b50e">SharedMemory::SharedMemory</a></div><div class="ttdeci">SharedMemory()</div><div class="ttdef"><b>Definition:</b> ipc.cpp:138</div></div>
<div class="ttc" id="classIPC_xhtml_ad73b4a6a6f18d6c5c756559bf2e12175"><div class="ttname"><a href="classIPC.xhtml#ad73b4a6a6f18d6c5c756559bf2e12175">IPC::shm</a></div><div class="ttdeci">SharedMemory shm</div><div class="ttdef"><b>Definition:</b> ipc.h:98</div></div>
<div class="ttc" id="classSharedMemory_xhtml_ac56ed7b972111d735a0a101507370be3"><div class="ttname"><a href="classSharedMemory.xhtml#ac56ed7b972111d735a0a101507370be3">SharedMemory::rw_t</a></div><div class="ttdeci">rw_t</div><div class="ttdef"><b>Definition:</b> ipc.h:61</div></div>
<div class="ttc" id="ipc_8h_xhtml_a2bf556e48694c99c37c5297c69ffdfb8"><div class="ttname"><a href="ipc_8h.xhtml#a2bf556e48694c99c37c5297c69ffdfb8">shm_handle_t</a></div><div class="ttdeci">int shm_handle_t</div><div class="ttdef"><b>Definition:</b> ipc.h:36</div></div>
<div class="ttc" id="ipc_8h_xhtml_adff944f3814ee72e53075724fce0abc9"><div class="ttname"><a href="ipc_8h.xhtml#adff944f3814ee72e53075724fce0abc9">semaphore_t</a></div><div class="ttdeci">int semaphore_t</div><div class="ttdef"><b>Definition:</b> ipc.h:37</div></div>
<div class="ttc" id="classIPC_xhtml_a69c62d9ad3d7b4926cd610f0b059065e"><div class="ttname"><a href="classIPC.xhtml#a69c62d9ad3d7b4926cd610f0b059065e">IPC::Send</a></div><div class="ttdeci">void Send(const wxString &amp;value)</div><div class="ttdef"><b>Definition:</b> ipc.cpp:17</div></div>
<div class="ttc" id="classIPC_xhtml_a0a5158a361abb5a79cc36edbd8691e51"><div class="ttname"><a href="classIPC.xhtml#a0a5158a361abb5a79cc36edbd8691e51">IPC::IPC</a></div><div class="ttdeci">IPC()</div><div class="ttdef"><b>Definition:</b> ipc.h:101</div></div>
<div class="ttc" id="classIPC_xhtml_a6788538e876bcceb94dee59b89c17d93"><div class="ttname"><a href="classIPC.xhtml#a6788538e876bcceb94dee59b89c17d93">IPC::is_shutdown</a></div><div class="ttdeci">volatile bool is_shutdown</div><div class="ttdef"><b>Definition:</b> ipc.h:97</div></div>
<div class="ttc" id="classSharedMemory_xhtml_ac56ed7b972111d735a0a101507370be3a1982ec1e2786f8d120f34da94cf05867"><div class="ttname"><a href="classSharedMemory.xhtml#ac56ed7b972111d735a0a101507370be3a1982ec1e2786f8d120f34da94cf05867">SharedMemory::writer</a></div><div class="ttdef"><b>Definition:</b> ipc.h:61</div></div>
<div class="ttc" id="classSharedMemory_xhtml_a441b6e87a13b0d8d53818e9ed50bb73a"><div class="ttname"><a href="classSharedMemory.xhtml#a441b6e87a13b0d8d53818e9ed50bb73a">SharedMemory::ok</a></div><div class="ttdeci">bool ok</div><div class="ttdef"><b>Definition:</b> ipc.h:56</div></div>
<div class="ttc" id="classSharedMemory_xhtml_aed6740e969e1d81ec75317de9406abe0"><div class="ttname"><a href="classSharedMemory.xhtml#aed6740e969e1d81ec75317de9406abe0">SharedMemory::server</a></div><div class="ttdeci">bool server</div><div class="ttdef"><b>Definition:</b> ipc.h:57</div></div>
<div class="ttc" id="sdk_8h_xhtml"><div class="ttname"><a href="sdk_8h.xhtml">sdk.h</a></div></div>
<div class="ttc" id="classIPC_xhtml"><div class="ttname"><a href="classIPC.xhtml">IPC</a></div><div class="ttdef"><b>Definition:</b> ipc.h:95</div></div>
<div class="ttc" id="classSharedMemory_xhtml_a12276107643989592da9d002522f454e"><div class="ttname"><a href="classSharedMemory.xhtml#a12276107643989592da9d002522f454e">SharedMemory::Lock</a></div><div class="ttdeci">bool Lock(rw_t rw)</div><div class="ttdef"><b>Definition:</b> ipc.cpp:214</div></div>
<div class="ttc" id="classSharedMemory_xhtml_adda89ef5508e0f384fc0ee8ee0e24457"><div class="ttname"><a href="classSharedMemory.xhtml#adda89ef5508e0f384fc0ee8ee0e24457">SharedMemory::handle</a></div><div class="ttdeci">shm_handle_t handle</div><div class="ttdef"><b>Definition:</b> ipc.h:47</div></div>
<div class="ttc" id="classSharedMemory_xhtml_ac56ed7b972111d735a0a101507370be3ab5d2acfa842d581ed6740f4bf9b19280"><div class="ttname"><a href="classSharedMemory.xhtml#ac56ed7b972111d735a0a101507370be3ab5d2acfa842d581ed6740f4bf9b19280">SharedMemory::reader</a></div><div class="ttdef"><b>Definition:</b> ipc.h:61</div></div>
<div class="ttc" id="classIPC_xhtml_a7dca8f853dce810eaf5457ee0a8e9cc9"><div class="ttname"><a href="classIPC.xhtml#a7dca8f853dce810eaf5457ee0a8e9cc9">IPC::Server</a></div><div class="ttdeci">bool Server() const </div><div class="ttdef"><b>Definition:</b> ipc.h:105</div></div>
<div class="ttc" id="classSharedMemory_xhtml"><div class="ttname"><a href="classSharedMemory.xhtml">SharedMemory</a></div><div class="ttdef"><b>Definition:</b> ipc.h:45</div></div>
<div class="ttc" id="classSharedMemory_xhtml_aded25c32a481f5b94a4fbafc628bc7b4"><div class="ttname"><a href="classSharedMemory.xhtml#aded25c32a481f5b94a4fbafc628bc7b4">SharedMemory::Client</a></div><div class="ttdeci">bool Client() const </div><div class="ttdef"><b>Definition:</b> ipc.h:72</div></div>
<div class="ttc" id="classSharedMemory_xhtml_ae4bf0aab5cc417d0aedb1318b522e31c"><div class="ttname"><a href="classSharedMemory.xhtml#ae4bf0aab5cc417d0aedb1318b522e31c">SharedMemory::BasePointer</a></div><div class="ttdeci">void * BasePointer() const </div><div class="ttdef"><b>Definition:</b> ipc.h:68</div></div>
<div class="ttc" id="ipc_8h_xhtml_aef6856fcab4361d353e6ca24b01c549f"><div class="ttname"><a href="ipc_8h.xhtml#aef6856fcab4361d353e6ca24b01c549f">ipc_buf_size</a></div><div class="ttdeci">static const int ipc_buf_size</div><div class="ttdef"><b>Definition:</b> ipc.h:42</div></div>
<div class="ttc" id="classSharedMemory_xhtml_ac63c23dc33025654cc5cf90ceeb4a5d7"><div class="ttname"><a href="classSharedMemory.xhtml#ac63c23dc33025654cc5cf90ceeb4a5d7">SharedMemory::Size</a></div><div class="ttdeci">size_t Size() const </div><div class="ttdef"><b>Definition:</b> ipc.h:69</div></div>
<div class="ttc" id="classIPC_xhtml_a20426029f07c76bc21b48e4313aa1d50"><div class="ttname"><a href="classIPC.xhtml#a20426029f07c76bc21b48e4313aa1d50">IPC::Entry</a></div><div class="ttdeci">virtual ExitCode Entry()</div><div class="ttdef"><b>Definition:</b> ipc.cpp:51</div></div>
<div class="ttc" id="classSharedMemory_xhtml_a22f39c0fcb0b26c2929fe666e7654191"><div class="ttname"><a href="classSharedMemory.xhtml#a22f39c0fcb0b26c2929fe666e7654191">SharedMemory::OK</a></div><div class="ttdeci">bool OK() const </div><div class="ttdef"><b>Definition:</b> ipc.h:66</div></div>
</div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.8
</small></address>
</body>
</html>
