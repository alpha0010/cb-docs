<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.8"/>
<title>Code::Blocks: cclogger.h Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">Code::Blocks
   &#160;<span id="projectnumber">SVN r10170</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.8 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li class="current"><a href="files.xhtml"><span>Files</span></a></li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.xhtml"><span>File&#160;List</span></a></li>
      <li><a href="globals.xhtml"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_38c8d24aef3972a7f87b834274e76e31.xhtml">plugins</a></li><li class="navelem"><a class="el" href="dir_5b9772d57d438712a6aae555d46a39df.xhtml">codecompletion</a></li><li class="navelem"><a class="el" href="dir_0d1509cb81559cfbecabf91fcb08b3b7.xhtml">parser</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">cclogger.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="cclogger_8h.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * This file is part of the Code::Blocks IDE and licensed under the GNU General Public License, version 3</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> * http://www.gnu.org/licenses/gpl-3.0.html</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;</div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="preprocessor">#ifndef CCLOGGER_H</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="preprocessor">#define CCLOGGER_H</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;</div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="preprocessor">#include &lt;wx/string.h&gt;</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="preprocessor">#include &lt;wx/thread.h&gt;</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;</div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="preprocessor">#include &lt;memory&gt;</span> <span class="comment">// auto_ptr</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;</div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="cbexception_8h.xhtml">cbexception.h</a>&gt;</span> <span class="comment">// cbAssert</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="logmanager_8h.xhtml">logmanager.h</a>&gt;</span>  <span class="comment">// F()</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="prep_8h.xhtml">prep.h</a>&gt;</span>        <span class="comment">// nullptr</span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;</div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="keyword">class </span>wxEvtHandler;</div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;</div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="preprocessor">#ifndef CC_PROCESS_LOG_EVENT_TO_PARENT</span></div>
<div class="line"><a name="l00021"></a><span class="lineno"><a class="line" href="cclogger_8h.xhtml#a97d646595bca94f85e4f927829e39d96">   21</a></span>&#160;<span class="preprocessor">    #define CC_PROCESS_LOG_EVENT_TO_PARENT 0</span></div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;</div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#ifdef CC_PARSER_TEST</span></div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="preprocessor">    #undef CC_PROCESS_LOG_EVENT_TO_PARENT</span></div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="preprocessor">    #define CC_PROCESS_LOG_EVENT_TO_PARENT 1</span></div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;</div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="keyword">extern</span> <span class="keywordtype">bool</span>           <a class="code" href="cclogger_8h.xhtml#a1a072f4e6b604ac2d14aa3a587864362">g_EnableDebugTrace</a>; </div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="keyword">extern</span> <span class="keyword">const</span> wxString <a class="code" href="cclogger_8h.xhtml#ad9ea7ec934bb4a4d9580989fe3bc0254">g_DebugTraceFile</a>;   </div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="keyword">extern</span> <span class="keywordtype">long</span>           <a class="code" href="cclogger_8h.xhtml#ad70e11258f77bdcc063f67e443ff172a">g_idCCAddToken</a>;</div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="keyword">extern</span> <span class="keywordtype">long</span>           <a class="code" href="cclogger_8h.xhtml#a54c86d071acd7d34269ac082367bdd36">g_idCCLogger</a>;</div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="keyword">extern</span> <span class="keywordtype">long</span>           <a class="code" href="cclogger_8h.xhtml#aff4dca442dad690ba5f9498adc8a5966">g_idCCDebugLogger</a>;</div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;</div>
<div class="line"><a name="l00035"></a><span class="lineno"><a class="line" href="classCCLogger.xhtml">   35</a></span>&#160;<span class="keyword">class </span><a class="code" href="classCCLogger.xhtml">CCLogger</a></div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;{</div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;    <span class="keyword">static</span> <a class="code" href="classCCLogger.xhtml">CCLogger</a>* <a class="code" href="classCCLogger.xhtml#a8026c2410c4373264868a80352638508">Get</a>();</div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classCCLogger.xhtml#a24de698fee206f0a5099aea44333f99b">Init</a>(wxEvtHandler* parent, <span class="keywordtype">int</span> logId, <span class="keywordtype">int</span> debugLogId, <span class="keywordtype">int</span> addTokenId = -1);</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classCCLogger.xhtml#ac27cf1f883d67fe3dec18bf096005915">AddToken</a>(<span class="keyword">const</span> wxString&amp; msg);</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classCCLogger.xhtml#ac7eba0d1456ff1cdea67e20e0d99ed53">Log</a>(<span class="keyword">const</span> wxString&amp; msg);</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classCCLogger.xhtml#aa64a8ddd35ee6847500ee8afa9905d07">DebugLog</a>(<span class="keyword">const</span> wxString&amp; msg);</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;<span class="keyword">protected</span>:</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;    <a class="code" href="classCCLogger.xhtml#ad85549e6db7844730bf928c88032e405">CCLogger</a>();</div>
<div class="line"><a name="l00047"></a><span class="lineno"><a class="line" href="classCCLogger.xhtml#a9af7b0bd15f60d1005600dbc0c281d54">   47</a></span>&#160;    <span class="keyword">virtual</span> <a class="code" href="classCCLogger.xhtml#a9af7b0bd15f60d1005600dbc0c281d54">~CCLogger</a>()                  { ; }</div>
<div class="line"><a name="l00048"></a><span class="lineno"><a class="line" href="classCCLogger.xhtml#aa992a3006eb6214ed1a6ba3bba9b66b6">   48</a></span>&#160;    <a class="code" href="classCCLogger.xhtml#aa992a3006eb6214ed1a6ba3bba9b66b6">CCLogger</a>(<span class="keyword">const</span> <a class="code" href="classCCLogger.xhtml">CCLogger</a>&amp;)            { ; }</div>
<div class="line"><a name="l00049"></a><span class="lineno"><a class="line" href="classCCLogger.xhtml#a4f932a23a944a231949fafb6764e1990">   49</a></span>&#160;    <a class="code" href="classCCLogger.xhtml">CCLogger</a>&amp; <a class="code" href="classCCLogger.xhtml#a4f932a23a944a231949fafb6764e1990">operator=</a>(<span class="keyword">const</span> <a class="code" href="classCCLogger.xhtml">CCLogger</a>&amp;) { <span class="keywordflow">return</span> *<span class="keyword">this</span>; }</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;    <span class="comment">// static member variables (instance and critical section for Parser)</span></div>
<div class="line"><a name="l00052"></a><span class="lineno"><a class="line" href="classCCLogger.xhtml#a0dde2d54250c93db4dfffaedc9adc71e">   52</a></span>&#160;    <span class="keyword">friend</span> <span class="keyword">class </span>std::auto_ptr&lt;<a class="code" href="classCCLogger.xhtml">CCLogger</a>&gt;;</div>
<div class="line"><a name="l00053"></a><span class="lineno"><a class="line" href="classCCLogger.xhtml#ac9a67f2a660c416d68827091aa850943">   53</a></span>&#160;    <span class="keyword">static</span> std::auto_ptr&lt;CCLogger&gt; <a class="code" href="classCCLogger.xhtml#ac9a67f2a660c416d68827091aa850943">s_Inst</a>;</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;<span class="keyword">private</span>:</div>
<div class="line"><a name="l00056"></a><span class="lineno"><a class="line" href="classCCLogger.xhtml#a37cb54d4f1bb9d7e020fdd803c362203">   56</a></span>&#160;    wxEvtHandler* <a class="code" href="classCCLogger.xhtml#a37cb54d4f1bb9d7e020fdd803c362203">m_Parent</a>;</div>
<div class="line"><a name="l00057"></a><span class="lineno"><a class="line" href="classCCLogger.xhtml#a94f85dcd561db0565918eeed62353bbc">   57</a></span>&#160;    <span class="keywordtype">int</span>           <a class="code" href="classCCLogger.xhtml#a94f85dcd561db0565918eeed62353bbc">m_LogId</a>;</div>
<div class="line"><a name="l00058"></a><span class="lineno"><a class="line" href="classCCLogger.xhtml#a3d2e95fb5cc985e0d50f4c3a90befe54">   58</a></span>&#160;    <span class="keywordtype">int</span>           <a class="code" href="classCCLogger.xhtml#a3d2e95fb5cc985e0d50f4c3a90befe54">m_DebugLogId</a>;</div>
<div class="line"><a name="l00059"></a><span class="lineno"><a class="line" href="classCCLogger.xhtml#a15894ddcb5518419fb792f208b42aa21">   59</a></span>&#160;    <span class="keywordtype">int</span>           <a class="code" href="classCCLogger.xhtml#a15894ddcb5518419fb792f208b42aa21">m_AddTokenId</a>;</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;};</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;<span class="comment">// For tracking, either uncomment:</span></div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;<span class="comment">//#define CC_ENABLE_LOCKER_TRACK</span></div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;<span class="comment">// ...or:</span></div>
<div class="line"><a name="l00065"></a><span class="lineno"><a class="line" href="cclogger_8h.xhtml#a3e1d05cb57addb645360cb5aa69c20a3">   65</a></span>&#160;<span class="preprocessor">#define CC_ENABLE_LOCKER_ASSERT</span></div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;<span class="comment">// ..or none of the above.</span></div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;<span class="preprocessor">#if defined(CC_ENABLE_LOCKER_TRACK)</span></div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;    <span class="comment">// TRACKING MUTXES</span></div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;    <span class="comment">// [1] Implementations for tracking mutexes:</span></div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;<span class="preprocessor">    #define THREAD_LOCKER_MTX_LOCK(NAME)                                         \</span></div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;<span class="preprocessor">        CCLogger::Get()-&gt;DebugLog(F(_T(&quot;%s.Lock() : %s(), %s, %d&quot;),              \</span></div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;<span class="preprocessor">                                    wxString(#NAME, wxConvUTF8).wx_str(),        \</span></div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;<span class="preprocessor">                                    wxString(__FUNCTION__, wxConvUTF8).wx_str(), \</span></div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;<span class="preprocessor">                                    wxString(__FILE__, wxConvUTF8).wx_str(),     \</span></div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;<span class="preprocessor">                                    __LINE__))</span></div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;<span class="preprocessor">    #define THREAD_LOCKER_MTX_LOCK_SUCCESS(NAME)                                 \</span></div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;<span class="preprocessor">        CCLogger::Get()-&gt;DebugLog(F(_T(&quot;%s.Lock().Success() : %s(), %s, %d&quot;),    \</span></div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;<span class="preprocessor">                                    wxString(#NAME, wxConvUTF8).wx_str(),        \</span></div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;<span class="preprocessor">                                    wxString(__FUNCTION__, wxConvUTF8).wx_str(), \</span></div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;<span class="preprocessor">                                    wxString(__FILE__, wxConvUTF8).wx_str(),     \</span></div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;<span class="preprocessor">                                    __LINE__))</span></div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;<span class="preprocessor">    #define THREAD_LOCKER_MTX_UNLOCK(NAME)                                       \</span></div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;<span class="preprocessor">        CCLogger::Get()-&gt;DebugLog(F(_T(&quot;%s.Unlock() : %s(), %s, %d&quot;),            \</span></div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;<span class="preprocessor">                                    wxString(#NAME, wxConvUTF8).wx_str(),        \</span></div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;<span class="preprocessor">                                    wxString(__FUNCTION__, wxConvUTF8).wx_str(), \</span></div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;<span class="preprocessor">                                    wxString(__FILE__, wxConvUTF8).wx_str(),     \</span></div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;<span class="preprocessor">                                    __LINE__))</span></div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;<span class="preprocessor">    #define THREAD_LOCKER_MTX_UNLOCK_SUCCESS(NAME)                               \</span></div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;<span class="preprocessor">        CCLogger::Get()-&gt;DebugLog(F(_T(&quot;%s.Unlock().Success() : %s(), %s, %d&quot;),  \</span></div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;<span class="preprocessor">                                    wxString(#NAME, wxConvUTF8).wx_str(),        \</span></div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;<span class="preprocessor">                                    wxString(__FUNCTION__, wxConvUTF8).wx_str(), \</span></div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;<span class="preprocessor">                                    wxString(__FILE__, wxConvUTF8).wx_str(),     \</span></div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;<span class="preprocessor">                                    __LINE__))</span></div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;<span class="preprocessor">    #define THREAD_LOCKER_MTX_FAIL(NAME)                                         \</span></div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;<span class="preprocessor">        CCLogger::Get()-&gt;DebugLog(F(_T(&quot;%s.Fail() : %s(), %s, %d&quot;),              \</span></div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;<span class="preprocessor">                                    wxString(#NAME, wxConvUTF8).wx_str(),        \</span></div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;<span class="preprocessor">                                    wxString(__FUNCTION__, wxConvUTF8).wx_str(), \</span></div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;<span class="preprocessor">                                    wxString(__FILE__, wxConvUTF8).wx_str(),     \</span></div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;<span class="preprocessor">                                    __LINE__))</span></div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;    <span class="comment">// [2] Cumulative convenient macros for tracking mutexes [USE THESE!]:</span></div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;<span class="preprocessor">    #define CC_LOCKER_TRACK_TT_MTX_LOCK(M)    \</span></div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;<span class="preprocessor">    {                                         \</span></div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;<span class="preprocessor">        THREAD_LOCKER_MTX_LOCK(M);            \</span></div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;<span class="preprocessor">        if (M.Lock()==wxMUTEX_NO_ERROR)       \</span></div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;<span class="preprocessor">          THREAD_LOCKER_MTX_LOCK_SUCCESS(M);  \</span></div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;<span class="preprocessor">        else                                  \</span></div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;<span class="preprocessor">          THREAD_LOCKER_MTX_FAIL(M);          \</span></div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;<span class="preprocessor">    }</span></div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;<span class="preprocessor">    #define CC_LOCKER_TRACK_TT_MTX_UNLOCK(M)    \</span></div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;<span class="preprocessor">    {                                           \</span></div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;<span class="preprocessor">        THREAD_LOCKER_MTX_UNLOCK(M);            \</span></div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;<span class="preprocessor">        if (M.Unlock()==wxMUTEX_NO_ERROR)       \</span></div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;<span class="preprocessor">          THREAD_LOCKER_MTX_UNLOCK_SUCCESS(M);  \</span></div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;<span class="preprocessor">        else                                    \</span></div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;<span class="preprocessor">          THREAD_LOCKER_MTX_FAIL(M);            \</span></div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;<span class="preprocessor">    }</span></div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;<span class="preprocessor">    #define CC_LOCKER_TRACK_CBBT_MTX_LOCK   CC_LOCKER_TRACK_TT_MTX_LOCK</span></div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;<span class="preprocessor">    #define CC_LOCKER_TRACK_CBBT_MTX_UNLOCK CC_LOCKER_TRACK_TT_MTX_UNLOCK</span></div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;<span class="preprocessor">    #define CC_LOCKER_TRACK_P_MTX_LOCK      CC_LOCKER_TRACK_TT_MTX_LOCK</span></div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;<span class="preprocessor">    #define CC_LOCKER_TRACK_P_MTX_UNLOCK    CC_LOCKER_TRACK_TT_MTX_UNLOCK</span></div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;    <span class="comment">// TRACKING CRITICAL SECIONS</span></div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;    <span class="comment">// [2] Implementations for tracking critical sections:</span></div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;<span class="preprocessor">    #define THREAD_LOCKER_CS_ENTER(NAME)                                         \</span></div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;<span class="preprocessor">        CCLogger::Get()-&gt;DebugLog(F(_T(&quot;%s.Enter() : %s(), %s, %d&quot;),             \</span></div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;<span class="preprocessor">                                    wxString(#NAME, wxConvUTF8).wx_str(),        \</span></div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;<span class="preprocessor">                                    wxString(__FUNCTION__, wxConvUTF8).wx_str(), \</span></div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;<span class="preprocessor">                                    wxString(__FILE__, wxConvUTF8).wx_str(),     \</span></div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;<span class="preprocessor">                                    __LINE__))</span></div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;<span class="preprocessor">    #define THREAD_LOCKER_CS_ENTERED(NAME)                                       \</span></div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;<span class="preprocessor">        CCLogger::Get()-&gt;DebugLog(F(_T(&quot;%s.Entered() : %s(), %s, %d&quot;),           \</span></div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;<span class="preprocessor">                                    wxString(#NAME, wxConvUTF8).wx_str(),        \</span></div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;<span class="preprocessor">                                    wxString(__FUNCTION__, wxConvUTF8).wx_str(), \</span></div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;<span class="preprocessor">                                    wxString(__FILE__, wxConvUTF8).wx_str(),     \</span></div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;<span class="preprocessor">                                    __LINE__))</span></div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;<span class="preprocessor">    #define THREAD_LOCKER_CS_LEAVE(NAME)                                         \</span></div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;<span class="preprocessor">        CCLogger::Get()-&gt;DebugLog(F(_T(&quot;%s.Leave() : %s(), %s, %d&quot;),             \</span></div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;<span class="preprocessor">                                    wxString(#NAME, wxConvUTF8).wx_str(),        \</span></div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;<span class="preprocessor">                                    wxString(__FUNCTION__, wxConvUTF8).wx_str(), \</span></div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;<span class="preprocessor">                                    wxString(__FILE__, wxConvUTF8).wx_str(),     \</span></div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;<span class="preprocessor">                                    __LINE__))</span></div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;    <span class="comment">// [2] Cumulative convenient macros for tracking critical sections [USE THESE!]:</span></div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;<span class="preprocessor">    #define CC_LOCKER_TRACK_CS_ENTER(CS) \</span></div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;<span class="preprocessor">    {                                    \</span></div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;<span class="preprocessor">         THREAD_LOCKER_CS_ENTER(CS);     \</span></div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;<span class="preprocessor">         CS.Enter();                     \</span></div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;<span class="preprocessor">         THREAD_LOCKER_CS_ENTERED(CS);   \</span></div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;<span class="preprocessor">    }</span></div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;<span class="preprocessor">    #define CC_LOCKER_TRACK_CS_LEAVE(CS) \</span></div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;<span class="preprocessor">    {                                    \</span></div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;<span class="preprocessor">          THREAD_LOCKER_CS_LEAVE(CS);    \</span></div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;<span class="preprocessor">          CS.Leave();                    \</span></div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;<span class="preprocessor">    }</span></div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;<span class="preprocessor">#elif defined CC_ENABLE_LOCKER_ASSERT</span></div>
<div class="line"><a name="l00156"></a><span class="lineno"><a class="line" href="cclogger_8h.xhtml#a231daba32be180ad7ef4947d29d9a112">  156</a></span>&#160;<span class="preprocessor">    #define CC_LOCKER_TRACK_CS_ENTER(CS)     CS.Enter();</span></div>
<div class="line"><a name="l00157"></a><span class="lineno"><a class="line" href="cclogger_8h.xhtml#abebec84580d9b077615756a9bd802b6f">  157</a></span>&#160;<span class="preprocessor">    #define CC_LOCKER_TRACK_CS_LEAVE(CS)     CS.Leave();</span></div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;</div>
<div class="line"><a name="l00159"></a><span class="lineno"><a class="line" href="cclogger_8h.xhtml#abeaaa24b840507a2dce16ea2306b7995">  159</a></span>&#160;<span class="preprocessor">    #define CC_LOCKER_TRACK_TT_MTX_LOCK(M)   cbAssert(M.Lock()==wxMUTEX_NO_ERROR);</span></div>
<div class="line"><a name="l00160"></a><span class="lineno"><a class="line" href="cclogger_8h.xhtml#a12481e66c0dee266f5a45a7ba7565a17">  160</a></span>&#160;<span class="preprocessor">    #define CC_LOCKER_TRACK_TT_MTX_UNLOCK(M) cbAssert(M.Unlock()==wxMUTEX_NO_ERROR);</span></div>
<div class="line"><a name="l00161"></a><span class="lineno"><a class="line" href="cclogger_8h.xhtml#a4d8b796448e35a8237e820342bf0e4dd">  161</a></span>&#160;<span class="preprocessor">    #define CC_LOCKER_TRACK_CBBT_MTX_LOCK    CC_LOCKER_TRACK_TT_MTX_LOCK</span></div>
<div class="line"><a name="l00162"></a><span class="lineno"><a class="line" href="cclogger_8h.xhtml#a2e626dd494774efebba5271c3efb97b0">  162</a></span>&#160;<span class="preprocessor">    #define CC_LOCKER_TRACK_CBBT_MTX_UNLOCK  CC_LOCKER_TRACK_TT_MTX_UNLOCK</span></div>
<div class="line"><a name="l00163"></a><span class="lineno"><a class="line" href="cclogger_8h.xhtml#a3685f6e5fe9b865b115feb7ddce265ab">  163</a></span>&#160;<span class="preprocessor">    #define CC_LOCKER_TRACK_P_MTX_LOCK       CC_LOCKER_TRACK_TT_MTX_LOCK</span></div>
<div class="line"><a name="l00164"></a><span class="lineno"><a class="line" href="cclogger_8h.xhtml#a00ce2e12a8ca191ad19c47430b51f1bd">  164</a></span>&#160;<span class="preprocessor">    #define CC_LOCKER_TRACK_P_MTX_UNLOCK     CC_LOCKER_TRACK_TT_MTX_UNLOCK</span></div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;<span class="preprocessor">#else</span></div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;<span class="preprocessor">    #define CC_LOCKER_TRACK_CS_ENTER(CS)     CS.Enter();</span></div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;<span class="preprocessor">    #define CC_LOCKER_TRACK_CS_LEAVE(CS)     CS.Leave();</span></div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;</div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;<span class="preprocessor">    #define CC_LOCKER_TRACK_TT_MTX_LOCK(M)   M.Lock();</span></div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;<span class="preprocessor">    #define CC_LOCKER_TRACK_TT_MTX_UNLOCK(M) M.Unlock();</span></div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;<span class="preprocessor">    #define CC_LOCKER_TRACK_CBBT_MTX_LOCK    CC_LOCKER_TRACK_TT_MTX_LOCK</span></div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;<span class="preprocessor">    #define CC_LOCKER_TRACK_CBBT_MTX_UNLOCK  CC_LOCKER_TRACK_TT_MTX_UNLOCK</span></div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;<span class="preprocessor">    #define CC_LOCKER_TRACK_P_MTX_LOCK       CC_LOCKER_TRACK_TT_MTX_LOCK</span></div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;<span class="preprocessor">    #define CC_LOCKER_TRACK_P_MTX_UNLOCK     CC_LOCKER_TRACK_TT_MTX_UNLOCK</span></div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;</div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;<span class="preprocessor">#endif // CCLOGGER_H</span></div>
<div class="ttc" id="cclogger_8h_xhtml_a54c86d071acd7d34269ac082367bdd36"><div class="ttname"><a href="cclogger_8h.xhtml#a54c86d071acd7d34269ac082367bdd36">g_idCCLogger</a></div><div class="ttdeci">long g_idCCLogger</div><div class="ttdef"><b>Definition:</b> cclogger.cpp:25</div></div>
<div class="ttc" id="prep_8h_xhtml"><div class="ttname"><a href="prep_8h.xhtml">prep.h</a></div></div>
<div class="ttc" id="classCCLogger_xhtml_a3d2e95fb5cc985e0d50f4c3a90befe54"><div class="ttname"><a href="classCCLogger.xhtml#a3d2e95fb5cc985e0d50f4c3a90befe54">CCLogger::m_DebugLogId</a></div><div class="ttdeci">int m_DebugLogId</div><div class="ttdef"><b>Definition:</b> cclogger.h:58</div></div>
<div class="ttc" id="logmanager_8h_xhtml"><div class="ttname"><a href="logmanager_8h.xhtml">logmanager.h</a></div></div>
<div class="ttc" id="cclogger_8h_xhtml_ad70e11258f77bdcc063f67e443ff172a"><div class="ttname"><a href="cclogger_8h.xhtml#ad70e11258f77bdcc063f67e443ff172a">g_idCCAddToken</a></div><div class="ttdeci">long g_idCCAddToken</div><div class="ttdef"><b>Definition:</b> cclogger.cpp:24</div></div>
<div class="ttc" id="classCCLogger_xhtml_a8026c2410c4373264868a80352638508"><div class="ttname"><a href="classCCLogger.xhtml#a8026c2410c4373264868a80352638508">CCLogger::Get</a></div><div class="ttdeci">static CCLogger * Get()</div><div class="ttdef"><b>Definition:</b> cclogger.cpp:58</div></div>
<div class="ttc" id="classCCLogger_xhtml_aa992a3006eb6214ed1a6ba3bba9b66b6"><div class="ttname"><a href="classCCLogger.xhtml#aa992a3006eb6214ed1a6ba3bba9b66b6">CCLogger::CCLogger</a></div><div class="ttdeci">CCLogger(const CCLogger &amp;)</div><div class="ttdef"><b>Definition:</b> cclogger.h:48</div></div>
<div class="ttc" id="cclogger_8h_xhtml_a1a072f4e6b604ac2d14aa3a587864362"><div class="ttname"><a href="cclogger_8h.xhtml#a1a072f4e6b604ac2d14aa3a587864362">g_EnableDebugTrace</a></div><div class="ttdeci">bool g_EnableDebugTrace</div><div class="ttdoc">Toggles tracing into file. </div><div class="ttdef"><b>Definition:</b> cclogger.cpp:21</div></div>
<div class="ttc" id="classCCLogger_xhtml_ad85549e6db7844730bf928c88032e405"><div class="ttname"><a href="classCCLogger.xhtml#ad85549e6db7844730bf928c88032e405">CCLogger::CCLogger</a></div><div class="ttdeci">CCLogger()</div><div class="ttdef"><b>Definition:</b> cclogger.cpp:50</div></div>
<div class="ttc" id="classCCLogger_xhtml_ac7eba0d1456ff1cdea67e20e0d99ed53"><div class="ttname"><a href="classCCLogger.xhtml#ac7eba0d1456ff1cdea67e20e0d99ed53">CCLogger::Log</a></div><div class="ttdeci">void Log(const wxString &amp;msg)</div><div class="ttdef"><b>Definition:</b> cclogger.cpp:88</div></div>
<div class="ttc" id="cbexception_8h_xhtml"><div class="ttname"><a href="cbexception_8h.xhtml">cbexception.h</a></div></div>
<div class="ttc" id="classCCLogger_xhtml_ac9a67f2a660c416d68827091aa850943"><div class="ttname"><a href="classCCLogger.xhtml#ac9a67f2a660c416d68827091aa850943">CCLogger::s_Inst</a></div><div class="ttdeci">static std::auto_ptr&lt; CCLogger &gt; s_Inst</div><div class="ttdef"><b>Definition:</b> cclogger.h:53</div></div>
<div class="ttc" id="classCCLogger_xhtml_aa64a8ddd35ee6847500ee8afa9905d07"><div class="ttname"><a href="classCCLogger.xhtml#aa64a8ddd35ee6847500ee8afa9905d07">CCLogger::DebugLog</a></div><div class="ttdeci">void DebugLog(const wxString &amp;msg)</div><div class="ttdef"><b>Definition:</b> cclogger.cpp:101</div></div>
<div class="ttc" id="cclogger_8h_xhtml_ad9ea7ec934bb4a4d9580989fe3bc0254"><div class="ttname"><a href="cclogger_8h.xhtml#ad9ea7ec934bb4a4d9580989fe3bc0254">g_DebugTraceFile</a></div><div class="ttdeci">const wxString g_DebugTraceFile</div><div class="ttdoc">Trace file name (if above is enabled). </div><div class="ttdef"><b>Definition:</b> cclogger.cpp:23</div></div>
<div class="ttc" id="classCCLogger_xhtml_a4f932a23a944a231949fafb6764e1990"><div class="ttname"><a href="classCCLogger.xhtml#a4f932a23a944a231949fafb6764e1990">CCLogger::operator=</a></div><div class="ttdeci">CCLogger &amp; operator=(const CCLogger &amp;)</div><div class="ttdef"><b>Definition:</b> cclogger.h:49</div></div>
<div class="ttc" id="classCCLogger_xhtml_a94f85dcd561db0565918eeed62353bbc"><div class="ttname"><a href="classCCLogger.xhtml#a94f85dcd561db0565918eeed62353bbc">CCLogger::m_LogId</a></div><div class="ttdeci">int m_LogId</div><div class="ttdef"><b>Definition:</b> cclogger.h:57</div></div>
<div class="ttc" id="classCCLogger_xhtml_a9af7b0bd15f60d1005600dbc0c281d54"><div class="ttname"><a href="classCCLogger.xhtml#a9af7b0bd15f60d1005600dbc0c281d54">CCLogger::~CCLogger</a></div><div class="ttdeci">virtual ~CCLogger()</div><div class="ttdef"><b>Definition:</b> cclogger.h:47</div></div>
<div class="ttc" id="classCCLogger_xhtml_a37cb54d4f1bb9d7e020fdd803c362203"><div class="ttname"><a href="classCCLogger.xhtml#a37cb54d4f1bb9d7e020fdd803c362203">CCLogger::m_Parent</a></div><div class="ttdeci">wxEvtHandler * m_Parent</div><div class="ttdef"><b>Definition:</b> cclogger.h:56</div></div>
<div class="ttc" id="classCCLogger_xhtml_a15894ddcb5518419fb792f208b42aa21"><div class="ttname"><a href="classCCLogger.xhtml#a15894ddcb5518419fb792f208b42aa21">CCLogger::m_AddTokenId</a></div><div class="ttdeci">int m_AddTokenId</div><div class="ttdef"><b>Definition:</b> cclogger.h:59</div></div>
<div class="ttc" id="classCCLogger_xhtml_a24de698fee206f0a5099aea44333f99b"><div class="ttname"><a href="classCCLogger.xhtml#a24de698fee206f0a5099aea44333f99b">CCLogger::Init</a></div><div class="ttdeci">void Init(wxEvtHandler *parent, int logId, int debugLogId, int addTokenId=-1)</div><div class="ttdef"><b>Definition:</b> cclogger.cpp:67</div></div>
<div class="ttc" id="cclogger_8h_xhtml_aff4dca442dad690ba5f9498adc8a5966"><div class="ttname"><a href="cclogger_8h.xhtml#aff4dca442dad690ba5f9498adc8a5966">g_idCCDebugLogger</a></div><div class="ttdeci">long g_idCCDebugLogger</div><div class="ttdef"><b>Definition:</b> cclogger.cpp:26</div></div>
<div class="ttc" id="classCCLogger_xhtml"><div class="ttname"><a href="classCCLogger.xhtml">CCLogger</a></div><div class="ttdef"><b>Definition:</b> cclogger.h:35</div></div>
<div class="ttc" id="classCCLogger_xhtml_ac27cf1f883d67fe3dec18bf096005915"><div class="ttname"><a href="classCCLogger.xhtml#ac27cf1f883d67fe3dec18bf096005915">CCLogger::AddToken</a></div><div class="ttdeci">void AddToken(const wxString &amp;msg)</div><div class="ttdef"><b>Definition:</b> cclogger.cpp:75</div></div>
</div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.8
</small></address>
</body>
</html>
