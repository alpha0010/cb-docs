<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.9.1"/>
<title>Code::Blocks: nativeparser_base.h Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">Code::Blocks
   &#160;<span id="projectnumber">SVN r10314</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.9.1 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li class="current"><a href="files.xhtml"><span>Files</span></a></li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.xhtml"><span>File&#160;List</span></a></li>
      <li><a href="globals.xhtml"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_38c8d24aef3972a7f87b834274e76e31.xhtml">plugins</a></li><li class="navelem"><a class="el" href="dir_5b9772d57d438712a6aae555d46a39df.xhtml">codecompletion</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">nativeparser_base.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="nativeparser__base_8h.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * This file is part of the Code::Blocks IDE and licensed under the GNU General Public License, version 3</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> * http://www.gnu.org/licenses/gpl-3.0.html</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;</div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="preprocessor">#ifndef NATIVEPARSERBASE_H</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="preprocessor">#define NATIVEPARSERBASE_H</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;</div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="preprocessor">#if wxCHECK_VERSION(2, 9, 0)</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="preprocessor">#include &lt;wx/wxcrt.h&gt;</span> <span class="comment">// wxIsalnum</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="preprocessor">#include &lt;wx/string.h&gt;</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;</div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="preprocessor">#include &lt;map&gt;</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="preprocessor">#include &lt;queue&gt;</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;</div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="token_8h.xhtml">parser/token.h</a>&quot;</span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="tokentree_8h.xhtml">parser/tokentree.h</a>&quot;</span></div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;</div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="keyword">extern</span> <span class="keywordtype">bool</span> <a class="code" href="nativeparser__base_8h.xhtml#aae6889eb5da84bada7b9f050d803c61d">s_DebugSmartSense</a>;</div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;</div>
<div class="line"><a name="l00023"></a><span class="lineno"><a class="line" href="classNativeParserBase.xhtml">   23</a></span>&#160;<span class="keyword">class </span><a class="code" href="classNativeParserBase.xhtml">NativeParserBase</a></div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;{</div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00027"></a><span class="lineno"><a class="line" href="classNativeParserBase.xhtml#a12aae162661ce9aa643d40552d38b155">   27</a></span>&#160;    <span class="keyword">enum</span> <a class="code" href="classNativeParserBase.xhtml#a12aae162661ce9aa643d40552d38b155">ParserTokenType</a></div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;    {</div>
<div class="line"><a name="l00029"></a><span class="lineno"><a class="line" href="classNativeParserBase.xhtml#a12aae162661ce9aa643d40552d38b155a1d846f7a84d0eec5dc760e406e20efa3">   29</a></span>&#160;        <a class="code" href="classNativeParserBase.xhtml#a12aae162661ce9aa643d40552d38b155a1d846f7a84d0eec5dc760e406e20efa3">pttUndefined</a> = 0,</div>
<div class="line"><a name="l00030"></a><span class="lineno"><a class="line" href="classNativeParserBase.xhtml#a12aae162661ce9aa643d40552d38b155a3a570ba6912abaae180ec08aacc6d6cc">   30</a></span>&#160;        <a class="code" href="classNativeParserBase.xhtml#a12aae162661ce9aa643d40552d38b155a3a570ba6912abaae180ec08aacc6d6cc">pttSearchText</a>,</div>
<div class="line"><a name="l00031"></a><span class="lineno"><a class="line" href="classNativeParserBase.xhtml#a12aae162661ce9aa643d40552d38b155a8a13933956c950d133e3feb897e058d0">   31</a></span>&#160;        <a class="code" href="classNativeParserBase.xhtml#a12aae162661ce9aa643d40552d38b155a8a13933956c950d133e3feb897e058d0">pttClass</a>,</div>
<div class="line"><a name="l00032"></a><span class="lineno"><a class="line" href="classNativeParserBase.xhtml#a12aae162661ce9aa643d40552d38b155ae4697edb3786b3cc445eb37c00ef89b3">   32</a></span>&#160;        <a class="code" href="classNativeParserBase.xhtml#a12aae162661ce9aa643d40552d38b155ae4697edb3786b3cc445eb37c00ef89b3">pttNamespace</a>,</div>
<div class="line"><a name="l00033"></a><span class="lineno"><a class="line" href="classNativeParserBase.xhtml#a12aae162661ce9aa643d40552d38b155ade77216b9ec7507ba754fd14605516e5">   33</a></span>&#160;        <a class="code" href="classNativeParserBase.xhtml#a12aae162661ce9aa643d40552d38b155ade77216b9ec7507ba754fd14605516e5">pttFunction</a></div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;    };</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;</div>
<div class="line"><a name="l00037"></a><span class="lineno"><a class="line" href="classNativeParserBase.xhtml#a0e249f14e7e08e05d829924e5f4a0563">   37</a></span>&#160;    <span class="keyword">enum</span> <a class="code" href="classNativeParserBase.xhtml#a0e249f14e7e08e05d829924e5f4a0563">OperatorType</a></div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;    {</div>
<div class="line"><a name="l00039"></a><span class="lineno"><a class="line" href="classNativeParserBase.xhtml#a0e249f14e7e08e05d829924e5f4a0563a49f9faaddddd4b054d84ab57dbfa98a6">   39</a></span>&#160;        <a class="code" href="classNativeParserBase.xhtml#a0e249f14e7e08e05d829924e5f4a0563a49f9faaddddd4b054d84ab57dbfa98a6">otOperatorUndefined</a> = 0,</div>
<div class="line"><a name="l00040"></a><span class="lineno"><a class="line" href="classNativeParserBase.xhtml#a0e249f14e7e08e05d829924e5f4a0563af7502ae8810958998fbb492128325d36">   40</a></span>&#160;        <a class="code" href="classNativeParserBase.xhtml#a0e249f14e7e08e05d829924e5f4a0563af7502ae8810958998fbb492128325d36">otOperatorSquare</a>,</div>
<div class="line"><a name="l00041"></a><span class="lineno"><a class="line" href="classNativeParserBase.xhtml#a0e249f14e7e08e05d829924e5f4a0563a58514c87e1f017ad4860130de3d7fe86">   41</a></span>&#160;        <a class="code" href="classNativeParserBase.xhtml#a0e249f14e7e08e05d829924e5f4a0563a58514c87e1f017ad4860130de3d7fe86">otOperatorParentheses</a>,</div>
<div class="line"><a name="l00042"></a><span class="lineno"><a class="line" href="classNativeParserBase.xhtml#a0e249f14e7e08e05d829924e5f4a0563a210fa66c199df8da96f17e6f833ba40b">   42</a></span>&#160;        <a class="code" href="classNativeParserBase.xhtml#a0e249f14e7e08e05d829924e5f4a0563a210fa66c199df8da96f17e6f833ba40b">otOperatorPointer</a>,</div>
<div class="line"><a name="l00043"></a><span class="lineno"><a class="line" href="classNativeParserBase.xhtml#a0e249f14e7e08e05d829924e5f4a0563ad6dd6ba4590df41d0613d5fb8c980e9d">   43</a></span>&#160;        <a class="code" href="classNativeParserBase.xhtml#a0e249f14e7e08e05d829924e5f4a0563ad6dd6ba4590df41d0613d5fb8c980e9d">otOperatorStar</a></div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;    };</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;</div>
<div class="line"><a name="l00057"></a><span class="lineno"><a class="line" href="structNativeParserBase_1_1ParserComponent.xhtml">   57</a></span>&#160;    <span class="keyword">struct </span><a class="code" href="structNativeParserBase_1_1ParserComponent.xhtml">ParserComponent</a></div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;    {</div>
<div class="line"><a name="l00059"></a><span class="lineno"><a class="line" href="structNativeParserBase_1_1ParserComponent.xhtml#a9dbbe530bb70590c982d8000aa593e40">   59</a></span>&#160;        wxString        <a class="code" href="structNativeParserBase_1_1ParserComponent.xhtml#a9dbbe530bb70590c982d8000aa593e40">component</a>;          </div>
<div class="line"><a name="l00060"></a><span class="lineno"><a class="line" href="structNativeParserBase_1_1ParserComponent.xhtml#a14bf6b65cf68e34acf4b1f32f0b664a7">   60</a></span>&#160;        <a class="code" href="classNativeParserBase.xhtml#a12aae162661ce9aa643d40552d38b155">ParserTokenType</a> <a class="code" href="structNativeParserBase_1_1ParserComponent.xhtml#a14bf6b65cf68e34acf4b1f32f0b664a7">tokenType</a>;          </div>
<div class="line"><a name="l00061"></a><span class="lineno"><a class="line" href="structNativeParserBase_1_1ParserComponent.xhtml#a7a2d91111918c78d37d6f6ad0d9a0469">   61</a></span>&#160;        <a class="code" href="classNativeParserBase.xhtml#a0e249f14e7e08e05d829924e5f4a0563">OperatorType</a>    <a class="code" href="structNativeParserBase_1_1ParserComponent.xhtml#a7a2d91111918c78d37d6f6ad0d9a0469">tokenOperatorType</a>;  </div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;</div>
<div class="line"><a name="l00063"></a><span class="lineno"><a class="line" href="structNativeParserBase_1_1ParserComponent.xhtml#a22c9daa0327fa8bd830b182d97611644">   63</a></span>&#160;        <a class="code" href="structNativeParserBase_1_1ParserComponent.xhtml#a22c9daa0327fa8bd830b182d97611644">ParserComponent</a>() { <a class="code" href="structNativeParserBase_1_1ParserComponent.xhtml#a2319702bbd82d0d06e083712f97d0824">Clear</a>(); }</div>
<div class="line"><a name="l00064"></a><span class="lineno"><a class="line" href="structNativeParserBase_1_1ParserComponent.xhtml#a2319702bbd82d0d06e083712f97d0824">   64</a></span>&#160;        <span class="keywordtype">void</span> <a class="code" href="structNativeParserBase_1_1ParserComponent.xhtml#a2319702bbd82d0d06e083712f97d0824">Clear</a>()</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;        {</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;            component         = wxEmptyString;</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;            tokenType         = <a class="code" href="classNativeParserBase.xhtml#a12aae162661ce9aa643d40552d38b155a1d846f7a84d0eec5dc760e406e20efa3">pttUndefined</a>;</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;            tokenOperatorType = <a class="code" href="classNativeParserBase.xhtml#a0e249f14e7e08e05d829924e5f4a0563a49f9faaddddd4b054d84ab57dbfa98a6">otOperatorUndefined</a>;</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;        }</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;    };</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;    <a class="code" href="classNativeParserBase.xhtml#a70b951898f29e41229b74e2e3f72b909">NativeParserBase</a>();</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;    <span class="keyword">virtual</span> <a class="code" href="classNativeParserBase.xhtml#a1292a0c0d4abc43681f3cd9b5e3d1381">~NativeParserBase</a>();</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;<span class="keyword">protected</span>:</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classNativeParserBase.xhtml#a93d5aa593e2432de7e3b5cf7629d5465">Reset</a>();</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;    <span class="keywordtype">size_t</span> <a class="code" href="classNativeParserBase.xhtml#a19e3a08fe55e65fa023d885bc2457fdc">FindAIMatches</a>(<a class="code" href="classTokenTree.xhtml">TokenTree</a>*                  tree,</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;                         std::queue&lt;ParserComponent&gt; components,</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;                         <a class="code" href="token_8h.xhtml#a10e4417d2285abddb9d4c2e97cddcec4">TokenIdxSet</a>&amp;                result,</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;                         <span class="keywordtype">int</span>                         parentTokenIdx = -1,</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;                         <span class="keywordtype">bool</span>                        isPrefix = <span class="keyword">false</span>,</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;                         <span class="keywordtype">bool</span>                        caseSensitive = <span class="keyword">false</span>,</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;                         <span class="keywordtype">bool</span>                        use_inheritance = <span class="keyword">true</span>,</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;                         <span class="keywordtype">short</span> <span class="keywordtype">int</span>                   kindMask = 0xFFFF,</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;                         <a class="code" href="token_8h.xhtml#a10e4417d2285abddb9d4c2e97cddcec4">TokenIdxSet</a>*                search_scope = 0);</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classNativeParserBase.xhtml#a94874c741ccf2fe009d4ff13aca2e93c">FindCurrentFunctionScope</a>(<a class="code" href="classTokenTree.xhtml">TokenTree</a>*         tree,</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;                                  <span class="keyword">const</span> <a class="code" href="token_8h.xhtml#a10e4417d2285abddb9d4c2e97cddcec4">TokenIdxSet</a>&amp; procResult,</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;                                  <a class="code" href="token_8h.xhtml#a10e4417d2285abddb9d4c2e97cddcec4">TokenIdxSet</a>&amp;       scopeResult);</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classNativeParserBase.xhtml#ad0076378dbf40e41ae66bd04876fd795">CleanupSearchScope</a>(<a class="code" href="classTokenTree.xhtml">TokenTree</a>*  tree,</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;                            <a class="code" href="token_8h.xhtml#a10e4417d2285abddb9d4c2e97cddcec4">TokenIdxSet</a>* searchScope);</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classNativeParserBase.xhtml#a72af340580b2d53ce914aec86a4d875b">GetCallTipHighlight</a>(<span class="keyword">const</span> wxString&amp; calltip,</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;                             <span class="keywordtype">int</span>*            start,</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;                             <span class="keywordtype">int</span>*            end,</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;                             <span class="keywordtype">int</span>             typedCommas);</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;    <span class="keywordtype">int</span> <a class="code" href="classNativeParserBase.xhtml#abcdfe0f5a07b39cd7353d8779540efa4">FindFunctionOpenParenthesis</a>(<span class="keyword">const</span> wxString&amp; calltip);</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;</div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;    wxString <a class="code" href="classNativeParserBase.xhtml#a41a37e7e5c205f2316ca530675f25bd1">GetCCToken</a>(wxString&amp;        line,</div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;                        <a class="code" href="classNativeParserBase.xhtml#a12aae162661ce9aa643d40552d38b155">ParserTokenType</a>&amp; tokenType,</div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;                        <a class="code" href="classNativeParserBase.xhtml#a0e249f14e7e08e05d829924e5f4a0563">OperatorType</a>&amp;    tokenOperatorType);</div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;</div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="classNativeParserBase.xhtml#a70232a4a2168f656abe4c53ec9e0d9fc">FindCCTokenStart</a>(<span class="keyword">const</span> wxString&amp; line);</div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;</div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;    wxString <a class="code" href="classNativeParserBase.xhtml#a35e7c059bb20010170ea4cfa79331e4b">GetNextCCToken</a>(<span class="keyword">const</span> wxString&amp; line,</div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;                            <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>&amp;   startAt,</div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;                            <a class="code" href="classNativeParserBase.xhtml#a0e249f14e7e08e05d829924e5f4a0563">OperatorType</a>&amp;   tokenOperatorType);</div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;</div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classNativeParserBase.xhtml#ad30855bda279972bc74fcce358984c0b">RemoveLastFunctionChildren</a>(<a class="code" href="classTokenTree.xhtml">TokenTree</a>* tree, <span class="keywordtype">int</span>&amp; lastFuncTokenIdx);</div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;</div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;    <span class="keywordtype">size_t</span> <a class="code" href="classNativeParserBase.xhtml#a22419effe0b8f2d1b6b40ffb4d24c22e">BreakUpComponents</a>(<span class="keyword">const</span> wxString&amp;              actual,</div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;                             std::queue&lt;ParserComponent&gt;&amp; components);</div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;</div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;    <span class="keywordtype">size_t</span> <a class="code" href="classNativeParserBase.xhtml#a6aa4aad75ff50dcf5eec5882728a337b">ResolveExpression</a>(<a class="code" href="classTokenTree.xhtml">TokenTree</a>*                  tree,</div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;                             std::queue&lt;ParserComponent&gt; components,</div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;                             <span class="keyword">const</span> <a class="code" href="token_8h.xhtml#a10e4417d2285abddb9d4c2e97cddcec4">TokenIdxSet</a>&amp;          searchScope,</div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;                             <a class="code" href="token_8h.xhtml#a10e4417d2285abddb9d4c2e97cddcec4">TokenIdxSet</a>&amp;                result,</div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;                             <span class="keywordtype">bool</span>                        caseSense = <span class="keyword">true</span>,</div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;                             <span class="keywordtype">bool</span>                        isPrefix = <span class="keyword">false</span>);</div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;</div>
<div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classNativeParserBase.xhtml#a2d1f66cf93ed2a22beb09db81cfc1fdf">ResolveOperator</a>(<a class="code" href="classTokenTree.xhtml">TokenTree</a>*          tree,</div>
<div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;                         <span class="keyword">const</span> <a class="code" href="classNativeParserBase.xhtml#a0e249f14e7e08e05d829924e5f4a0563">OperatorType</a>&amp; tokenOperatorType,</div>
<div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;                         <span class="keyword">const</span> <a class="code" href="token_8h.xhtml#a10e4417d2285abddb9d4c2e97cddcec4">TokenIdxSet</a>&amp;  tokens,</div>
<div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;                         <span class="keyword">const</span> <a class="code" href="token_8h.xhtml#a10e4417d2285abddb9d4c2e97cddcec4">TokenIdxSet</a>&amp;  searchScope,</div>
<div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;                         <a class="code" href="token_8h.xhtml#a10e4417d2285abddb9d4c2e97cddcec4">TokenIdxSet</a>&amp;        result);</div>
<div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;</div>
<div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;    <span class="keywordtype">size_t</span> <a class="code" href="classNativeParserBase.xhtml#a2f413ee746298a9b4078470f12cd622d">ResolveActualType</a>(<a class="code" href="classTokenTree.xhtml">TokenTree</a>*         tree,</div>
<div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;                             wxString           searchText,</div>
<div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;                             <span class="keyword">const</span> <a class="code" href="token_8h.xhtml#a10e4417d2285abddb9d4c2e97cddcec4">TokenIdxSet</a>&amp; searchScope,</div>
<div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;                             <a class="code" href="token_8h.xhtml#a10e4417d2285abddb9d4c2e97cddcec4">TokenIdxSet</a>&amp;       result);</div>
<div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;</div>
<div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classNativeParserBase.xhtml#a20c4e8a051ef3ff1777a6d193c69366e">ResolveTemplateMap</a>(<a class="code" href="classTokenTree.xhtml">TokenTree</a>*         tree,</div>
<div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;                            <span class="keyword">const</span> wxString&amp;    searchStr,</div>
<div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;                            <span class="keyword">const</span> <a class="code" href="token_8h.xhtml#a10e4417d2285abddb9d4c2e97cddcec4">TokenIdxSet</a>&amp; actualTypeScope,</div>
<div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;                            <a class="code" href="token_8h.xhtml#a10e4417d2285abddb9d4c2e97cddcec4">TokenIdxSet</a>&amp;       initialScope);</div>
<div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;</div>
<div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classNativeParserBase.xhtml#a47bf1cda3eab2a2921e9f82c1cc0adb3">AddTemplateAlias</a>(<a class="code" href="classTokenTree.xhtml">TokenTree</a>*         tree,</div>
<div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;                          <span class="keyword">const</span> <span class="keywordtype">int</span>&amp;         <span class="keywordtype">id</span>,</div>
<div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;                          <span class="keyword">const</span> <a class="code" href="token_8h.xhtml#a10e4417d2285abddb9d4c2e97cddcec4">TokenIdxSet</a>&amp; actualTypeScope,</div>
<div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;                          <a class="code" href="token_8h.xhtml#a10e4417d2285abddb9d4c2e97cddcec4">TokenIdxSet</a>&amp;       initialScope);</div>
<div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;</div>
<div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;    <span class="keywordtype">size_t</span> <a class="code" href="classNativeParserBase.xhtml#a730bf4ebbf118d7c5707ee7f2023d519">GenerateResultSet</a>(<a class="code" href="classTokenTree.xhtml">TokenTree</a>*      tree,</div>
<div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;                             <span class="keyword">const</span> wxString&amp; target,</div>
<div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;                             <span class="keywordtype">int</span>             parentIdx,</div>
<div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;                             <a class="code" href="token_8h.xhtml#a10e4417d2285abddb9d4c2e97cddcec4">TokenIdxSet</a>&amp;    result,</div>
<div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;                             <span class="keywordtype">bool</span>            caseSens = <span class="keyword">true</span>,</div>
<div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;                             <span class="keywordtype">bool</span>            isPrefix = <span class="keyword">false</span>,</div>
<div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;                             <span class="keywordtype">short</span> <span class="keywordtype">int</span>       kindMask = 0xFFFF);</div>
<div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;</div>
<div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;    <span class="keywordtype">size_t</span> <a class="code" href="classNativeParserBase.xhtml#a730bf4ebbf118d7c5707ee7f2023d519">GenerateResultSet</a>(<a class="code" href="classTokenTree.xhtml">TokenTree</a>*         tree,</div>
<div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;                             <span class="keyword">const</span> wxString&amp;    target,</div>
<div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;                             <span class="keyword">const</span> <a class="code" href="token_8h.xhtml#a10e4417d2285abddb9d4c2e97cddcec4">TokenIdxSet</a>&amp; ptrParentID,</div>
<div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;                             <a class="code" href="token_8h.xhtml#a10e4417d2285abddb9d4c2e97cddcec4">TokenIdxSet</a>&amp;       result,</div>
<div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;                             <span class="keywordtype">bool</span>               caseSens = <span class="keyword">true</span>,</div>
<div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;                             <span class="keywordtype">bool</span>               isPrefix = <span class="keyword">false</span>,</div>
<div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;                             <span class="keywordtype">short</span> <span class="keywordtype">int</span>          kindMask = 0xFFFF);</div>
<div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;</div>
<div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classNativeParserBase.xhtml#a41940b0d68082c9c64067e6068e1d8ad">CollectSearchScopes</a>(<span class="keyword">const</span> <a class="code" href="token_8h.xhtml#a10e4417d2285abddb9d4c2e97cddcec4">TokenIdxSet</a>&amp; searchScope,</div>
<div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;                             <a class="code" href="token_8h.xhtml#a10e4417d2285abddb9d4c2e97cddcec4">TokenIdxSet</a>&amp;       actualTypeScope,</div>
<div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;                             <a class="code" href="classTokenTree.xhtml">TokenTree</a>*         tree);</div>
<div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;</div>
<div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;    <span class="keywordtype">int</span> <a class="code" href="classNativeParserBase.xhtml#a327bd9b943cb9cc7a5a45142e5c4bd12">GetTokenFromCurrentLine</a>(<a class="code" href="classTokenTree.xhtml">TokenTree</a>*         tree,</div>
<div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;                                <span class="keyword">const</span> <a class="code" href="token_8h.xhtml#a10e4417d2285abddb9d4c2e97cddcec4">TokenIdxSet</a>&amp; tokens,</div>
<div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;                                <span class="keywordtype">size_t</span>             curLine,</div>
<div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;                                <span class="keyword">const</span> wxString&amp;    file);</div>
<div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;</div>
<div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classNativeParserBase.xhtml#ac41cce829ef11e3f5807abc9c1ae9c3f">ComputeCallTip</a>(<a class="code" href="classTokenTree.xhtml">TokenTree</a>*         tree,</div>
<div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;                        <span class="keyword">const</span> <a class="code" href="token_8h.xhtml#a10e4417d2285abddb9d4c2e97cddcec4">TokenIdxSet</a>&amp; tokens,</div>
<div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;                        wxArrayString&amp;     items);</div>
<div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;</div>
<div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classNativeParserBase.xhtml#af3bf96bcb490770e14a464dd57b42478">PrettyPrintToken</a>(<a class="code" href="classTokenTree.xhtml">TokenTree</a>*   tree,</div>
<div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;                          <span class="keyword">const</span> <a class="code" href="classToken.xhtml">Token</a>* token,</div>
<div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;                          wxString&amp;    result,</div>
<div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;                          <span class="keywordtype">bool</span>         isRoot = <span class="keyword">true</span>);</div>
<div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;</div>
<div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;    <span class="comment">// convenient static funcs for fast access and improved readability</span></div>
<div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;</div>
<div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;    <span class="comment">// count commas in lineText (nesting parentheses)</span></div>
<div class="line"><a name="l00334"></a><span class="lineno"><a class="line" href="classNativeParserBase.xhtml#a515db7dbc6e50f2817d19126d751bf8b">  334</a></span>&#160;    <span class="keyword">static</span> <span class="keywordtype">int</span> <a class="code" href="classNativeParserBase.xhtml#a515db7dbc6e50f2817d19126d751bf8b">CountCommas</a>(<span class="keyword">const</span> wxString&amp; lineText, <span class="keywordtype">int</span> start)</div>
<div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;    {</div>
<div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;        <span class="keywordtype">int</span> commas = 0;</div>
<div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;        <span class="keywordtype">int</span> nest = 0;</div>
<div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;        <span class="keywordflow">while</span> (<span class="keyword">true</span>)</div>
<div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;        {</div>
<div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;            wxChar c = lineText.GetChar(start++);</div>
<div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;            <span class="keywordflow">if</span> (c == <span class="charliteral">&#39;\0&#39;</span>)</div>
<div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;                <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;            <span class="keywordflow">else</span> <span class="keywordflow">if</span> (c == <span class="charliteral">&#39;(&#39;</span>)</div>
<div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;                ++nest;</div>
<div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;            <span class="keywordflow">else</span> <span class="keywordflow">if</span> (c == <span class="charliteral">&#39;)&#39;</span>)</div>
<div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;                --nest;</div>
<div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;            <span class="keywordflow">else</span> <span class="keywordflow">if</span> (c == <span class="charliteral">&#39;,&#39;</span> &amp;&amp; nest == 1)</div>
<div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;                ++commas;</div>
<div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;        }</div>
<div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;        <span class="keywordflow">return</span> commas;</div>
<div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;    }</div>
<div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;</div>
<div class="line"><a name="l00357"></a><span class="lineno"><a class="line" href="classNativeParserBase.xhtml#a8fc2c501707603f10de6fc381ecb5ad7">  357</a></span>&#160;    <span class="keyword">static</span> <span class="keywordtype">bool</span> <a class="code" href="classNativeParserBase.xhtml#a8fc2c501707603f10de6fc381ecb5ad7">InsideToken</a>(<span class="keywordtype">int</span> startAt, <span class="keyword">const</span> wxString&amp; line)</div>
<div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;    {</div>
<div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;        <span class="keywordflow">return</span> (   (startAt &gt;= 0)</div>
<div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;                &amp;&amp; ((<span class="keywordtype">size_t</span>)startAt &lt; line.Len())</div>
<div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;                &amp;&amp; (   (wxIsalnum(line.GetChar(startAt)))</div>
<div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;                    || (line.GetChar(startAt) == <span class="charliteral">&#39;_&#39;</span>) ) );</div>
<div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;    }</div>
<div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;</div>
<div class="line"><a name="l00370"></a><span class="lineno"><a class="line" href="classNativeParserBase.xhtml#af3474165096e398ed6dabff30a5c7a9f">  370</a></span>&#160;    <span class="keyword">static</span> <span class="keywordtype">int</span> <a class="code" href="classNativeParserBase.xhtml#af3474165096e398ed6dabff30a5c7a9f">BeginOfToken</a>(<span class="keywordtype">int</span> startAt, <span class="keyword">const</span> wxString&amp; line)</div>
<div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;    {</div>
<div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;        <span class="keywordflow">while</span> (   (startAt &gt;= 0)</div>
<div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;               &amp;&amp; ((<span class="keywordtype">size_t</span>)startAt &lt; line.Len())</div>
<div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;               &amp;&amp; (   (wxIsalnum(line.GetChar(startAt)))</div>
<div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;                   || (line.GetChar(startAt) == <span class="charliteral">&#39;_&#39;</span>) ) )</div>
<div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;            --startAt;</div>
<div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;        <span class="keywordflow">return</span> startAt;</div>
<div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;    }</div>
<div class="line"><a name="l00379"></a><span class="lineno"><a class="line" href="classNativeParserBase.xhtml#ad0f663db3c8703fbab998cb1a2b83690">  379</a></span>&#160;    <span class="keyword">static</span> <span class="keywordtype">int</span> <a class="code" href="classNativeParserBase.xhtml#ad0f663db3c8703fbab998cb1a2b83690">BeforeToken</a>(<span class="keywordtype">int</span> startAt, <span class="keyword">const</span> wxString&amp; line)</div>
<div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;    {</div>
<div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;        <span class="keywordflow">if</span> (   (startAt &gt; 0)</div>
<div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;            &amp;&amp; ((<span class="keywordtype">size_t</span>)startAt &lt; line.Len() + 1)</div>
<div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;            &amp;&amp; (   (wxIsalnum(line.GetChar(startAt - 1)))</div>
<div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;                || (line.GetChar(startAt - 1) == <span class="charliteral">&#39;_&#39;</span>) ) )</div>
<div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;            --startAt;</div>
<div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;        <span class="keywordflow">return</span> startAt;</div>
<div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;    }</div>
<div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;</div>
<div class="line"><a name="l00395"></a><span class="lineno"><a class="line" href="classNativeParserBase.xhtml#acb7cbe0b971470fc583bb9da6fb5d86b">  395</a></span>&#160;    <span class="keyword">static</span> <span class="keywordtype">bool</span> <a class="code" href="classNativeParserBase.xhtml#acb7cbe0b971470fc583bb9da6fb5d86b">IsOperatorEnd</a>(<span class="keywordtype">int</span> startAt, <span class="keyword">const</span> wxString&amp; line)</div>
<div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;    {</div>
<div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;        <span class="keywordflow">return</span> (   (startAt &gt; 0)</div>
<div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;                &amp;&amp; ((<span class="keywordtype">size_t</span>)startAt &lt; line.Len())</div>
<div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;                &amp;&amp; (   (   (line.GetChar(startAt) == <span class="charliteral">&#39;&gt;&#39;</span>)</div>
<div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;                        &amp;&amp; (line.GetChar(startAt - 1) == <span class="charliteral">&#39;-&#39;</span>) )</div>
<div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;                    || (   (line.GetChar(startAt) == <span class="charliteral">&#39;:&#39;</span>)</div>
<div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;                        &amp;&amp; (line.GetChar(startAt - 1) == <span class="charliteral">&#39;:&#39;</span>) ) ) );</div>
<div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;    }</div>
<div class="line"><a name="l00404"></a><span class="lineno"><a class="line" href="classNativeParserBase.xhtml#a18fe560152e0b824a8ad2b0990972923">  404</a></span>&#160;    <span class="keyword">static</span> <span class="keywordtype">bool</span> <a class="code" href="classNativeParserBase.xhtml#a18fe560152e0b824a8ad2b0990972923">IsOperatorPointer</a>(<span class="keywordtype">int</span> startAt, <span class="keyword">const</span> wxString&amp; line)</div>
<div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;    {</div>
<div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;        <span class="keywordflow">return</span> (   (startAt &gt; 0)</div>
<div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;            &amp;&amp; ((<span class="keywordtype">size_t</span>)startAt &lt; line.Len())</div>
<div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;            &amp;&amp; (   (   (line.GetChar(startAt) == <span class="charliteral">&#39;&gt;&#39;</span>)</div>
<div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;                    &amp;&amp; (line.GetChar(startAt - 1) == <span class="charliteral">&#39;-&#39;</span>) )));</div>
<div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;    }</div>
<div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;</div>
<div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;     <span class="comment">// FIXME (ollydbg#1#): should be startAt+1 &lt; line.Len()?</span></div>
<div class="line"><a name="l00414"></a><span class="lineno"><a class="line" href="classNativeParserBase.xhtml#aa46c34016b62f4f48eb71338395ab604">  414</a></span>&#160;    <span class="keyword">static</span> <span class="keywordtype">bool</span> <a class="code" href="classNativeParserBase.xhtml#aa46c34016b62f4f48eb71338395ab604">IsOperatorBegin</a>(<span class="keywordtype">int</span> startAt, <span class="keyword">const</span> wxString&amp; line)</div>
<div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;    {</div>
<div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160;        <span class="keywordflow">return</span> (   (startAt &gt;= 0)</div>
<div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;                &amp;&amp; ((<span class="keywordtype">size_t</span>)startAt &lt; line.Len())</div>
<div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;                &amp;&amp; (   (   (line.GetChar(startAt ) == <span class="charliteral">&#39;-&#39;</span>)</div>
<div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;                        &amp;&amp; (line.GetChar(startAt + 1) == <span class="charliteral">&#39;&gt;&#39;</span>) )</div>
<div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;                    || (   (line.GetChar(startAt) == <span class="charliteral">&#39;:&#39;</span>)</div>
<div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;                        &amp;&amp; (line.GetChar(startAt + 1) == <span class="charliteral">&#39;:&#39;</span>) ) ) );</div>
<div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;    }</div>
<div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160;</div>
<div class="line"><a name="l00425"></a><span class="lineno"><a class="line" href="classNativeParserBase.xhtml#aee2ec25f284973e0eabd9e85214123da">  425</a></span>&#160;    <span class="keyword">static</span> <span class="keywordtype">bool</span> <a class="code" href="classNativeParserBase.xhtml#aee2ec25f284973e0eabd9e85214123da">IsOperatorDot</a>(<span class="keywordtype">int</span> startAt, <span class="keyword">const</span> wxString&amp; line)</div>
<div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;    {</div>
<div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;        <span class="keywordflow">return</span> (   (startAt &gt;= 0)</div>
<div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160;                &amp;&amp; ((<span class="keywordtype">size_t</span>)startAt &lt; line.Len())</div>
<div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;                &amp;&amp; (line.GetChar(startAt) == <span class="charliteral">&#39;.&#39;</span>) );</div>
<div class="line"><a name="l00430"></a><span class="lineno">  430</span>&#160;    }</div>
<div class="line"><a name="l00431"></a><span class="lineno">  431</span>&#160;</div>
<div class="line"><a name="l00440"></a><span class="lineno"><a class="line" href="classNativeParserBase.xhtml#a508eda25d5019c70067848b32b9f3aa3">  440</a></span>&#160;    <span class="keyword">static</span> <span class="keywordtype">int</span> <a class="code" href="classNativeParserBase.xhtml#a508eda25d5019c70067848b32b9f3aa3">BeforeWhitespace</a>(<span class="keywordtype">int</span> startAt, <span class="keyword">const</span> wxString&amp; line)</div>
<div class="line"><a name="l00441"></a><span class="lineno">  441</span>&#160;    {</div>
<div class="line"><a name="l00442"></a><span class="lineno">  442</span>&#160;        <span class="keywordflow">while</span> (   (startAt &gt;= 0)</div>
<div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160;               &amp;&amp; ((<span class="keywordtype">size_t</span>)startAt &lt; line.Len())</div>
<div class="line"><a name="l00444"></a><span class="lineno">  444</span>&#160;               &amp;&amp; (   (line.GetChar(startAt) == <span class="charliteral">&#39; &#39;</span>)</div>
<div class="line"><a name="l00445"></a><span class="lineno">  445</span>&#160;                   || (line.GetChar(startAt) == <span class="charliteral">&#39;\t&#39;</span>) ) )</div>
<div class="line"><a name="l00446"></a><span class="lineno">  446</span>&#160;            --startAt;</div>
<div class="line"><a name="l00447"></a><span class="lineno">  447</span>&#160;        <span class="keywordflow">return</span> startAt;</div>
<div class="line"><a name="l00448"></a><span class="lineno">  448</span>&#160;    }</div>
<div class="line"><a name="l00449"></a><span class="lineno">  449</span>&#160;</div>
<div class="line"><a name="l00454"></a><span class="lineno"><a class="line" href="classNativeParserBase.xhtml#ae561e148ddf33a1b12f2bcc207b0bbf5">  454</a></span>&#160;    <span class="keyword">static</span> <span class="keywordtype">int</span> <a class="code" href="classNativeParserBase.xhtml#ae561e148ddf33a1b12f2bcc207b0bbf5">AfterWhitespace</a>(<span class="keywordtype">int</span> startAt, <span class="keyword">const</span> wxString&amp; line)</div>
<div class="line"><a name="l00455"></a><span class="lineno">  455</span>&#160;    {</div>
<div class="line"><a name="l00456"></a><span class="lineno">  456</span>&#160;        <span class="keywordflow">if</span> (startAt &lt; 0)</div>
<div class="line"><a name="l00457"></a><span class="lineno">  457</span>&#160;            startAt = 0;</div>
<div class="line"><a name="l00458"></a><span class="lineno">  458</span>&#160;        <span class="keywordflow">while</span> (   ((<span class="keywordtype">size_t</span>)startAt &lt; line.Len())</div>
<div class="line"><a name="l00459"></a><span class="lineno">  459</span>&#160;               &amp;&amp; (   (line.GetChar(startAt) == <span class="charliteral">&#39; &#39;</span>)</div>
<div class="line"><a name="l00460"></a><span class="lineno">  460</span>&#160;                   || (line.GetChar(startAt) == <span class="charliteral">&#39;\t&#39;</span>) ) )</div>
<div class="line"><a name="l00461"></a><span class="lineno">  461</span>&#160;            ++startAt;</div>
<div class="line"><a name="l00462"></a><span class="lineno">  462</span>&#160;        <span class="keywordflow">return</span> startAt;</div>
<div class="line"><a name="l00463"></a><span class="lineno">  463</span>&#160;    }</div>
<div class="line"><a name="l00464"></a><span class="lineno"><a class="line" href="classNativeParserBase.xhtml#ab4e29d422cd3ecf6a5fb028d56236248">  464</a></span>&#160;    <span class="keyword">static</span> <span class="keywordtype">bool</span> <a class="code" href="classNativeParserBase.xhtml#ab4e29d422cd3ecf6a5fb028d56236248">IsOpeningBracket</a>(<span class="keywordtype">int</span> startAt, <span class="keyword">const</span> wxString&amp; line)</div>
<div class="line"><a name="l00465"></a><span class="lineno">  465</span>&#160;    {</div>
<div class="line"><a name="l00466"></a><span class="lineno">  466</span>&#160;        <span class="keywordflow">return</span> (   ((<span class="keywordtype">size_t</span>)startAt &lt; line.Len())</div>
<div class="line"><a name="l00467"></a><span class="lineno">  467</span>&#160;                &amp;&amp; (   (line.GetChar(startAt) == <span class="charliteral">&#39;(&#39;</span>)</div>
<div class="line"><a name="l00468"></a><span class="lineno">  468</span>&#160;                    || (line.GetChar(startAt) == <span class="charliteral">&#39;[&#39;</span>) ) );</div>
<div class="line"><a name="l00469"></a><span class="lineno">  469</span>&#160;    }</div>
<div class="line"><a name="l00470"></a><span class="lineno">  470</span>&#160;</div>
<div class="line"><a name="l00472"></a><span class="lineno"><a class="line" href="classNativeParserBase.xhtml#a133feced460dcdd2baae780d8361cd79">  472</a></span>&#160;    <span class="keyword">static</span> <span class="keywordtype">bool</span> <a class="code" href="classNativeParserBase.xhtml#a133feced460dcdd2baae780d8361cd79">IsClosingBracket</a>(<span class="keywordtype">int</span> startAt, <span class="keyword">const</span> wxString&amp; line)</div>
<div class="line"><a name="l00473"></a><span class="lineno">  473</span>&#160;    {</div>
<div class="line"><a name="l00474"></a><span class="lineno">  474</span>&#160;        <span class="keywordflow">return</span> (   (startAt &gt;= 0)</div>
<div class="line"><a name="l00475"></a><span class="lineno">  475</span>&#160;                &amp;&amp; (   (line.GetChar(startAt) == <span class="charliteral">&#39;)&#39;</span>)</div>
<div class="line"><a name="l00476"></a><span class="lineno">  476</span>&#160;                    || (line.GetChar(startAt) == <span class="charliteral">&#39;]&#39;</span>) ) );</div>
<div class="line"><a name="l00477"></a><span class="lineno">  477</span>&#160;    }</div>
<div class="line"><a name="l00478"></a><span class="lineno">  478</span>&#160;</div>
<div class="line"><a name="l00479"></a><span class="lineno">  479</span>&#160;<span class="keyword">protected</span>:</div>
<div class="line"><a name="l00480"></a><span class="lineno">  480</span>&#160;</div>
<div class="line"><a name="l00481"></a><span class="lineno">  481</span>&#160;<span class="keyword">private</span>:</div>
<div class="line"><a name="l00482"></a><span class="lineno">  482</span>&#160;    <span class="comment">// Helper utilities called only by GenerateResultSet!</span></div>
<div class="line"><a name="l00483"></a><span class="lineno">  483</span>&#160;    <span class="comment">// No critical section needed! All functions that call these functions,</span></div>
<div class="line"><a name="l00484"></a><span class="lineno">  484</span>&#160;    <span class="comment">// should already entered a critical section.</span></div>
<div class="line"><a name="l00485"></a><span class="lineno">  485</span>&#160;</div>
<div class="line"><a name="l00494"></a><span class="lineno"><a class="line" href="classNativeParserBase.xhtml#ac96ea37f147376e6727d37b649c9c5c4">  494</a></span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classNativeParserBase.xhtml#ac96ea37f147376e6727d37b649c9c5c4">AddChildrenOfUnnamed</a>(<a class="code" href="classTokenTree.xhtml">TokenTree</a>* tree, <span class="keyword">const</span> <a class="code" href="classToken.xhtml">Token</a>* parent, <a class="code" href="token_8h.xhtml#a10e4417d2285abddb9d4c2e97cddcec4">TokenIdxSet</a>&amp; result)</div>
<div class="line"><a name="l00495"></a><span class="lineno">  495</span>&#160;    {</div>
<div class="line"><a name="l00496"></a><span class="lineno">  496</span>&#160;        <span class="keywordflow">if</span> (  ( (parent-&gt;<a class="code" href="classToken.xhtml#aae52d5bca7a44fcd03345e405ab979b6">m_TokenKind</a> &amp; (<a class="code" href="token_8h.xhtml#a7a47dce04185ce6008048622cc792f25a36d9f3721a93b1c4a60b1d50d0198af2">tkClass</a> | <a class="code" href="token_8h.xhtml#a7a47dce04185ce6008048622cc792f25a5bf7196b13ca1ae329ed8a409c1c41c0">tkEnum</a>)) != 0 )</div>
<div class="line"><a name="l00497"></a><span class="lineno">  497</span>&#160;            &amp;&amp; parent-&gt;<a class="code" href="classToken.xhtml#acdc09e733cf2a6342767e714e8f86bc7">m_IsAnonymous</a> == <span class="keyword">true</span> )</div>
<div class="line"><a name="l00498"></a><span class="lineno">  498</span>&#160;        {</div>
<div class="line"><a name="l00499"></a><span class="lineno">  499</span>&#160;            <span class="comment">// add all its children</span></div>
<div class="line"><a name="l00500"></a><span class="lineno">  500</span>&#160;            <span class="keywordflow">for</span> (TokenIdxSet::const_iterator it = parent-&gt;<a class="code" href="classToken.xhtml#a7b5dce935f88261f7e20580a599aeee2">m_Children</a>.begin();</div>
<div class="line"><a name="l00501"></a><span class="lineno">  501</span>&#160;                                             it != parent-&gt;<a class="code" href="classToken.xhtml#a7b5dce935f88261f7e20580a599aeee2">m_Children</a>.end(); ++it)</div>
<div class="line"><a name="l00502"></a><span class="lineno">  502</span>&#160;            {</div>
<div class="line"><a name="l00503"></a><span class="lineno">  503</span>&#160;                <a class="code" href="classToken.xhtml">Token</a>* tokenChild = tree-&gt;<a class="code" href="classTokenTree.xhtml#a27fc4ea2842b026514e7b7f92a5e578e">at</a>(*it);</div>
<div class="line"><a name="l00504"></a><span class="lineno">  504</span>&#160;                <span class="keywordflow">if</span> (    tokenChild</div>
<div class="line"><a name="l00505"></a><span class="lineno">  505</span>&#160;                    &amp;&amp; (parent-&gt;<a class="code" href="classToken.xhtml#aae52d5bca7a44fcd03345e405ab979b6">m_TokenKind</a> == <a class="code" href="token_8h.xhtml#a7a47dce04185ce6008048622cc792f25a36d9f3721a93b1c4a60b1d50d0198af2">tkClass</a> || tokenChild-&gt;<a class="code" href="classToken.xhtml#afb74e3ed595b693bb171d53daf226dc7">m_Scope</a> != <a class="code" href="token_8h.xhtml#a51914652d471a4b2e79baaa727cef729a935af98e116660761ab579df64af700c">tsPrivate</a>) )</div>
<div class="line"><a name="l00506"></a><span class="lineno">  506</span>&#160;                {</div>
<div class="line"><a name="l00507"></a><span class="lineno">  507</span>&#160;                    <span class="comment">// NOTE: recurse (eg: class A contains struct contains union or enum)</span></div>
<div class="line"><a name="l00508"></a><span class="lineno">  508</span>&#160;                    <span class="keywordflow">if</span> ( !<a class="code" href="classNativeParserBase.xhtml#ac96ea37f147376e6727d37b649c9c5c4">AddChildrenOfUnnamed</a>(tree, tokenChild, result) )</div>
<div class="line"><a name="l00509"></a><span class="lineno">  509</span>&#160;                    {</div>
<div class="line"><a name="l00510"></a><span class="lineno">  510</span>&#160;                        result.insert(*it);</div>
<div class="line"><a name="l00511"></a><span class="lineno">  511</span>&#160;                        <a class="code" href="classNativeParserBase.xhtml#a4247e13f3d453b6b9c7b4e2c408bcb01">AddChildrenOfEnum</a>(tree, tokenChild, result);</div>
<div class="line"><a name="l00512"></a><span class="lineno">  512</span>&#160;                    }</div>
<div class="line"><a name="l00513"></a><span class="lineno">  513</span>&#160;                }</div>
<div class="line"><a name="l00514"></a><span class="lineno">  514</span>&#160;            }</div>
<div class="line"><a name="l00515"></a><span class="lineno">  515</span>&#160;            <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00516"></a><span class="lineno">  516</span>&#160;        }</div>
<div class="line"><a name="l00517"></a><span class="lineno">  517</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00518"></a><span class="lineno">  518</span>&#160;    }</div>
<div class="line"><a name="l00519"></a><span class="lineno">  519</span>&#160;</div>
<div class="line"><a name="l00520"></a><span class="lineno"><a class="line" href="classNativeParserBase.xhtml#a4247e13f3d453b6b9c7b4e2c408bcb01">  520</a></span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classNativeParserBase.xhtml#a4247e13f3d453b6b9c7b4e2c408bcb01">AddChildrenOfEnum</a>(<a class="code" href="classTokenTree.xhtml">TokenTree</a>* tree, <span class="keyword">const</span> <a class="code" href="classToken.xhtml">Token</a>* parent, <a class="code" href="token_8h.xhtml#a10e4417d2285abddb9d4c2e97cddcec4">TokenIdxSet</a>&amp; result)</div>
<div class="line"><a name="l00521"></a><span class="lineno">  521</span>&#160;    {</div>
<div class="line"><a name="l00522"></a><span class="lineno">  522</span>&#160;        <span class="keywordflow">if</span> (parent-&gt;<a class="code" href="classToken.xhtml#aae52d5bca7a44fcd03345e405ab979b6">m_TokenKind</a> == <a class="code" href="token_8h.xhtml#a7a47dce04185ce6008048622cc792f25a5bf7196b13ca1ae329ed8a409c1c41c0">tkEnum</a>)</div>
<div class="line"><a name="l00523"></a><span class="lineno">  523</span>&#160;        {</div>
<div class="line"><a name="l00524"></a><span class="lineno">  524</span>&#160;            <span class="comment">// add all its children</span></div>
<div class="line"><a name="l00525"></a><span class="lineno">  525</span>&#160;            <span class="keywordflow">for</span> (TokenIdxSet::const_iterator it = parent-&gt;<a class="code" href="classToken.xhtml#a7b5dce935f88261f7e20580a599aeee2">m_Children</a>.begin();</div>
<div class="line"><a name="l00526"></a><span class="lineno">  526</span>&#160;                                             it != parent-&gt;<a class="code" href="classToken.xhtml#a7b5dce935f88261f7e20580a599aeee2">m_Children</a>.end(); ++it)</div>
<div class="line"><a name="l00527"></a><span class="lineno">  527</span>&#160;            {</div>
<div class="line"><a name="l00528"></a><span class="lineno">  528</span>&#160;                <a class="code" href="classToken.xhtml">Token</a>* tokenChild = tree-&gt;<a class="code" href="classTokenTree.xhtml#a27fc4ea2842b026514e7b7f92a5e578e">at</a>(*it);</div>
<div class="line"><a name="l00529"></a><span class="lineno">  529</span>&#160;                <span class="keywordflow">if</span> (tokenChild &amp;&amp; tokenChild-&gt;<a class="code" href="classToken.xhtml#afb74e3ed595b693bb171d53daf226dc7">m_Scope</a> != <a class="code" href="token_8h.xhtml#a51914652d471a4b2e79baaa727cef729a935af98e116660761ab579df64af700c">tsPrivate</a>)</div>
<div class="line"><a name="l00530"></a><span class="lineno">  530</span>&#160;                    result.insert(*it);</div>
<div class="line"><a name="l00531"></a><span class="lineno">  531</span>&#160;            }</div>
<div class="line"><a name="l00532"></a><span class="lineno">  532</span>&#160;</div>
<div class="line"><a name="l00533"></a><span class="lineno">  533</span>&#160;            <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00534"></a><span class="lineno">  534</span>&#160;        }</div>
<div class="line"><a name="l00535"></a><span class="lineno">  535</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00536"></a><span class="lineno">  536</span>&#160;    }</div>
<div class="line"><a name="l00537"></a><span class="lineno">  537</span>&#160;</div>
<div class="line"><a name="l00546"></a><span class="lineno"><a class="line" href="classNativeParserBase.xhtml#a1470d04a041cc280dae90a5838fe87a6">  546</a></span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classNativeParserBase.xhtml#a1470d04a041cc280dae90a5838fe87a6">IsChildOfUnnamedOrEnum</a>(<a class="code" href="classTokenTree.xhtml">TokenTree</a>* tree, <span class="keyword">const</span> <span class="keywordtype">int</span> targetIdx, <span class="keyword">const</span> <span class="keywordtype">int</span> parentIdx)</div>
<div class="line"><a name="l00547"></a><span class="lineno">  547</span>&#160;    {</div>
<div class="line"><a name="l00548"></a><span class="lineno">  548</span>&#160;        <span class="keywordflow">if</span> (targetIdx == parentIdx)</div>
<div class="line"><a name="l00549"></a><span class="lineno">  549</span>&#160;            <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00550"></a><span class="lineno">  550</span>&#160;        <span class="keywordflow">if</span> (parentIdx == -1)</div>
<div class="line"><a name="l00551"></a><span class="lineno">  551</span>&#160;            <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00552"></a><span class="lineno">  552</span>&#160;</div>
<div class="line"><a name="l00553"></a><span class="lineno">  553</span>&#160;        <a class="code" href="classToken.xhtml">Token</a>* parent = tree-&gt;<a class="code" href="classTokenTree.xhtml#a27fc4ea2842b026514e7b7f92a5e578e">at</a>(parentIdx);</div>
<div class="line"><a name="l00554"></a><span class="lineno">  554</span>&#160;        <span class="keywordflow">if</span> (parent &amp;&amp; (parent-&gt;<a class="code" href="classToken.xhtml#aae52d5bca7a44fcd03345e405ab979b6">m_TokenKind</a> &amp; <a class="code" href="token_8h.xhtml#a7a47dce04185ce6008048622cc792f25a36d9f3721a93b1c4a60b1d50d0198af2">tkClass</a>))</div>
<div class="line"><a name="l00555"></a><span class="lineno">  555</span>&#160;        {</div>
<div class="line"><a name="l00556"></a><span class="lineno">  556</span>&#160;            <span class="comment">// loop all children of the parent token</span></div>
<div class="line"><a name="l00557"></a><span class="lineno">  557</span>&#160;            <span class="keywordflow">for</span> (TokenIdxSet::const_iterator it = parent-&gt;<a class="code" href="classToken.xhtml#a7b5dce935f88261f7e20580a599aeee2">m_Children</a>.begin();</div>
<div class="line"><a name="l00558"></a><span class="lineno">  558</span>&#160;                                             it != parent-&gt;<a class="code" href="classToken.xhtml#a7b5dce935f88261f7e20580a599aeee2">m_Children</a>.end(); ++it)</div>
<div class="line"><a name="l00559"></a><span class="lineno">  559</span>&#160;            {</div>
<div class="line"><a name="l00560"></a><span class="lineno">  560</span>&#160;                <a class="code" href="classToken.xhtml">Token</a>* token = tree-&gt;<a class="code" href="classTokenTree.xhtml#a27fc4ea2842b026514e7b7f92a5e578e">at</a>(*it);</div>
<div class="line"><a name="l00561"></a><span class="lineno">  561</span>&#160;                <span class="comment">// an unnamed class is much similar like the enum</span></div>
<div class="line"><a name="l00562"></a><span class="lineno">  562</span>&#160;                <span class="keywordflow">if</span> (token &amp;&amp; (((token-&gt;<a class="code" href="classToken.xhtml#aae52d5bca7a44fcd03345e405ab979b6">m_TokenKind</a> &amp; <a class="code" href="token_8h.xhtml#a7a47dce04185ce6008048622cc792f25a36d9f3721a93b1c4a60b1d50d0198af2">tkClass</a>)</div>
<div class="line"><a name="l00563"></a><span class="lineno">  563</span>&#160;                                &amp;&amp; (token-&gt;<a class="code" href="classToken.xhtml#acdc09e733cf2a6342767e714e8f86bc7">m_IsAnonymous</a> == <span class="keyword">true</span>))</div>
<div class="line"><a name="l00564"></a><span class="lineno">  564</span>&#160;                             || (token-&gt;<a class="code" href="classToken.xhtml#aae52d5bca7a44fcd03345e405ab979b6">m_TokenKind</a> &amp; <a class="code" href="token_8h.xhtml#a7a47dce04185ce6008048622cc792f25a5bf7196b13ca1ae329ed8a409c1c41c0">tkEnum</a>)))</div>
<div class="line"><a name="l00565"></a><span class="lineno">  565</span>&#160;                {</div>
<div class="line"><a name="l00566"></a><span class="lineno">  566</span>&#160;                    <span class="comment">// if target token matches on child, we can return success</span></div>
<div class="line"><a name="l00567"></a><span class="lineno">  567</span>&#160;                    <span class="comment">// other wise, we try to see the target token matches child&#39;s child.</span></div>
<div class="line"><a name="l00568"></a><span class="lineno">  568</span>&#160;                    <span class="keywordflow">if</span> ((targetIdx == (*it)) || <a class="code" href="classNativeParserBase.xhtml#a1470d04a041cc280dae90a5838fe87a6">IsChildOfUnnamedOrEnum</a>(tree, targetIdx, (*it)))</div>
<div class="line"><a name="l00569"></a><span class="lineno">  569</span>&#160;                        <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00570"></a><span class="lineno">  570</span>&#160;                }</div>
<div class="line"><a name="l00571"></a><span class="lineno">  571</span>&#160;            }</div>
<div class="line"><a name="l00572"></a><span class="lineno">  572</span>&#160;        }</div>
<div class="line"><a name="l00573"></a><span class="lineno">  573</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00574"></a><span class="lineno">  574</span>&#160;    }</div>
<div class="line"><a name="l00575"></a><span class="lineno">  575</span>&#160;</div>
<div class="line"><a name="l00576"></a><span class="lineno">  576</span>&#160;</div>
<div class="line"><a name="l00578"></a><span class="lineno">  578</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classNativeParserBase.xhtml#a2bc72779b9b888d91aec47f7ca943170">AddConstructors</a>(<a class="code" href="classTokenTree.xhtml">TokenTree</a> *tree, <span class="keyword">const</span> <a class="code" href="token_8h.xhtml#a10e4417d2285abddb9d4c2e97cddcec4">TokenIdxSet</a>&amp; source, <a class="code" href="token_8h.xhtml#a10e4417d2285abddb9d4c2e97cddcec4">TokenIdxSet</a>&amp; dest);</div>
<div class="line"><a name="l00579"></a><span class="lineno">  579</span>&#160;</div>
<div class="line"><a name="l00580"></a><span class="lineno">  580</span>&#160;    <span class="comment">// for GenerateResultSet()</span></div>
<div class="line"><a name="l00581"></a><span class="lineno"><a class="line" href="classNativeParserBase.xhtml#aa6a65f399a92022167ca261d5b9bd8cb">  581</a></span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classNativeParserBase.xhtml#aa6a65f399a92022167ca261d5b9bd8cb">MatchText</a>(<span class="keyword">const</span> wxString&amp; text, <span class="keyword">const</span> wxString&amp; target, <span class="keywordtype">bool</span> caseSens, <span class="keywordtype">bool</span> isPrefix)</div>
<div class="line"><a name="l00582"></a><span class="lineno">  582</span>&#160;    {</div>
<div class="line"><a name="l00583"></a><span class="lineno">  583</span>&#160;        <span class="keywordflow">if</span> (isPrefix &amp;&amp; target.IsEmpty())</div>
<div class="line"><a name="l00584"></a><span class="lineno">  584</span>&#160;            <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00585"></a><span class="lineno">  585</span>&#160;        <span class="keywordflow">if</span> (!isPrefix)</div>
<div class="line"><a name="l00586"></a><span class="lineno">  586</span>&#160;            <span class="keywordflow">return</span> text.CompareTo(target, caseSens ? wxString::exact : wxString::ignoreCase) == 0;</div>
<div class="line"><a name="l00587"></a><span class="lineno">  587</span>&#160;        <span class="comment">// isPrefix == true</span></div>
<div class="line"><a name="l00588"></a><span class="lineno">  588</span>&#160;        <span class="keywordflow">if</span> (caseSens)</div>
<div class="line"><a name="l00589"></a><span class="lineno">  589</span>&#160;            <span class="keywordflow">return</span> text.StartsWith(target);</div>
<div class="line"><a name="l00590"></a><span class="lineno">  590</span>&#160;        <span class="keywordflow">return</span> text.Upper().StartsWith(target.Upper());</div>
<div class="line"><a name="l00591"></a><span class="lineno">  591</span>&#160;    }</div>
<div class="line"><a name="l00592"></a><span class="lineno">  592</span>&#160;</div>
<div class="line"><a name="l00593"></a><span class="lineno">  593</span>&#160;    <span class="comment">// for GenerateResultSet()</span></div>
<div class="line"><a name="l00594"></a><span class="lineno"><a class="line" href="classNativeParserBase.xhtml#ab21edecad63324030d937d837b807aa2">  594</a></span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classNativeParserBase.xhtml#ab21edecad63324030d937d837b807aa2">MatchType</a>(<a class="code" href="token_8h.xhtml#a7a47dce04185ce6008048622cc792f25">TokenKind</a> kind, <span class="keywordtype">short</span> <span class="keywordtype">int</span> kindMask)</div>
<div class="line"><a name="l00595"></a><span class="lineno">  595</span>&#160;    {</div>
<div class="line"><a name="l00596"></a><span class="lineno">  596</span>&#160;        <span class="keywordflow">return</span> kind &amp; kindMask;</div>
<div class="line"><a name="l00597"></a><span class="lineno">  597</span>&#160;    }</div>
<div class="line"><a name="l00598"></a><span class="lineno">  598</span>&#160;</div>
<div class="line"><a name="l00599"></a><span class="lineno">  599</span>&#160;<span class="keyword">private</span>:</div>
<div class="line"><a name="l00600"></a><span class="lineno"><a class="line" href="classNativeParserBase.xhtml#a92e847fa872207cf3dcffb1eabd6682f">  600</a></span>&#160;    <a class="code" href="structNativeParserBase_1_1ParserComponent.xhtml">ParserComponent</a>              <a class="code" href="classNativeParserBase.xhtml#a92e847fa872207cf3dcffb1eabd6682f">m_LastComponent</a>;</div>
<div class="line"><a name="l00601"></a><span class="lineno"><a class="line" href="classNativeParserBase.xhtml#a44f138ba5a521aabb08770f53f2c4c25">  601</a></span>&#160;    std::map&lt;wxString, wxString&gt; <a class="code" href="classNativeParserBase.xhtml#a44f138ba5a521aabb08770f53f2c4c25">m_TemplateMap</a>;</div>
<div class="line"><a name="l00602"></a><span class="lineno">  602</span>&#160;};</div>
<div class="line"><a name="l00603"></a><span class="lineno">  603</span>&#160;</div>
<div class="line"><a name="l00604"></a><span class="lineno">  604</span>&#160;<span class="preprocessor">#endif // NATIVEPARSERBASE_H</span></div>
<div class="ttc" id="classNativeParserBase_xhtml_a19e3a08fe55e65fa023d885bc2457fdc"><div class="ttname"><a href="classNativeParserBase.xhtml#a19e3a08fe55e65fa023d885bc2457fdc">NativeParserBase::FindAIMatches</a></div><div class="ttdeci">size_t FindAIMatches(TokenTree *tree, std::queue&lt; ParserComponent &gt; components, TokenIdxSet &amp;result, int parentTokenIdx=-1, bool isPrefix=false, bool caseSensitive=false, bool use_inheritance=true, short int kindMask=0xFFFF, TokenIdxSet *search_scope=0)</div><div class="ttdoc">Artificial Intelligence Matching. </div><div class="ttdef"><b>Definition:</b> nativeparser_base.cpp:87</div></div>
<div class="ttc" id="classNativeParserBase_xhtml_ab4e29d422cd3ecf6a5fb028d56236248"><div class="ttname"><a href="classNativeParserBase.xhtml#ab4e29d422cd3ecf6a5fb028d56236248">NativeParserBase::IsOpeningBracket</a></div><div class="ttdeci">static bool IsOpeningBracket(int startAt, const wxString &amp;line)</div><div class="ttdef"><b>Definition:</b> nativeparser_base.h:464</div></div>
<div class="ttc" id="classTokenTree_xhtml_a27fc4ea2842b026514e7b7f92a5e578e"><div class="ttname"><a href="classTokenTree.xhtml#a27fc4ea2842b026514e7b7f92a5e578e">TokenTree::at</a></div><div class="ttdeci">Token * at(int idx)</div><div class="ttdef"><b>Definition:</b> tokentree.h:51</div></div>
<div class="ttc" id="tokentree_8h_xhtml"><div class="ttname"><a href="tokentree_8h.xhtml">tokentree.h</a></div></div>
<div class="ttc" id="structNativeParserBase_1_1ParserComponent_xhtml_a7a2d91111918c78d37d6f6ad0d9a0469"><div class="ttname"><a href="structNativeParserBase_1_1ParserComponent.xhtml#a7a2d91111918c78d37d6f6ad0d9a0469">NativeParserBase::ParserComponent::tokenOperatorType</a></div><div class="ttdeci">OperatorType tokenOperatorType</div><div class="ttdoc">type </div><div class="ttdef"><b>Definition:</b> nativeparser_base.h:61</div></div>
<div class="ttc" id="classNativeParserBase_xhtml_a6aa4aad75ff50dcf5eec5882728a337b"><div class="ttname"><a href="classNativeParserBase.xhtml#a6aa4aad75ff50dcf5eec5882728a337b">NativeParserBase::ResolveExpression</a></div><div class="ttdeci">size_t ResolveExpression(TokenTree *tree, std::queue&lt; ParserComponent &gt; components, const TokenIdxSet &amp;searchScope, TokenIdxSet &amp;result, bool caseSense=true, bool isPrefix=false)</div><div class="ttdef"><b>Definition:</b> nativeparser_base.cpp:735</div></div>
<div class="ttc" id="classNativeParserBase_xhtml_a133feced460dcdd2baae780d8361cd79"><div class="ttname"><a href="classNativeParserBase.xhtml#a133feced460dcdd2baae780d8361cd79">NativeParserBase::IsClosingBracket</a></div><div class="ttdeci">static bool IsClosingBracket(int startAt, const wxString &amp;line)</div><div class="ttdef"><b>Definition:</b> nativeparser_base.h:472</div></div>
<div class="ttc" id="token_8h_xhtml"><div class="ttname"><a href="token_8h.xhtml">token.h</a></div></div>
<div class="ttc" id="classNativeParserBase_xhtml_ab21edecad63324030d937d837b807aa2"><div class="ttname"><a href="classNativeParserBase.xhtml#ab21edecad63324030d937d837b807aa2">NativeParserBase::MatchType</a></div><div class="ttdeci">bool MatchType(TokenKind kind, short int kindMask)</div><div class="ttdef"><b>Definition:</b> nativeparser_base.h:594</div></div>
<div class="ttc" id="classNativeParserBase_xhtml_a0e249f14e7e08e05d829924e5f4a0563af7502ae8810958998fbb492128325d36"><div class="ttname"><a href="classNativeParserBase.xhtml#a0e249f14e7e08e05d829924e5f4a0563af7502ae8810958998fbb492128325d36">NativeParserBase::otOperatorSquare</a></div><div class="ttdef"><b>Definition:</b> nativeparser_base.h:40</div></div>
<div class="ttc" id="classNativeParserBase_xhtml_af3bf96bcb490770e14a464dd57b42478"><div class="ttname"><a href="classNativeParserBase.xhtml#af3bf96bcb490770e14a464dd57b42478">NativeParserBase::PrettyPrintToken</a></div><div class="ttdeci">bool PrettyPrintToken(TokenTree *tree, const Token *token, wxString &amp;result, bool isRoot=true)</div><div class="ttdef"><b>Definition:</b> nativeparser_base.cpp:1688</div></div>
<div class="ttc" id="classNativeParserBase_xhtml_a92e847fa872207cf3dcffb1eabd6682f"><div class="ttname"><a href="classNativeParserBase.xhtml#a92e847fa872207cf3dcffb1eabd6682f">NativeParserBase::m_LastComponent</a></div><div class="ttdeci">ParserComponent m_LastComponent</div><div class="ttdef"><b>Definition:</b> nativeparser_base.h:600</div></div>
<div class="ttc" id="classNativeParserBase_xhtml_acb7cbe0b971470fc583bb9da6fb5d86b"><div class="ttname"><a href="classNativeParserBase.xhtml#acb7cbe0b971470fc583bb9da6fb5d86b">NativeParserBase::IsOperatorEnd</a></div><div class="ttdeci">static bool IsOperatorEnd(int startAt, const wxString &amp;line)</div><div class="ttdef"><b>Definition:</b> nativeparser_base.h:395</div></div>
<div class="ttc" id="classTokenTree_xhtml"><div class="ttname"><a href="classTokenTree.xhtml">TokenTree</a></div><div class="ttdef"><b>Definition:</b> tokentree.h:37</div></div>
<div class="ttc" id="classToken_xhtml_aae52d5bca7a44fcd03345e405ab979b6"><div class="ttname"><a href="classToken.xhtml#aae52d5bca7a44fcd03345e405ab979b6">Token::m_TokenKind</a></div><div class="ttdeci">TokenKind m_TokenKind</div><div class="ttdef"><b>Definition:</b> token.h:228</div></div>
<div class="ttc" id="classToken_xhtml_afb74e3ed595b693bb171d53daf226dc7"><div class="ttname"><a href="classToken.xhtml#afb74e3ed595b693bb171d53daf226dc7">Token::m_Scope</a></div><div class="ttdeci">TokenScope m_Scope</div><div class="ttdef"><b>Definition:</b> token.h:225</div></div>
<div class="ttc" id="classNativeParserBase_xhtml_a508eda25d5019c70067848b32b9f3aa3"><div class="ttname"><a href="classNativeParserBase.xhtml#a508eda25d5019c70067848b32b9f3aa3">NativeParserBase::BeforeWhitespace</a></div><div class="ttdeci">static int BeforeWhitespace(int startAt, const wxString &amp;line)</div><div class="ttdef"><b>Definition:</b> nativeparser_base.h:440</div></div>
<div class="ttc" id="classNativeParserBase_xhtml_aa6a65f399a92022167ca261d5b9bd8cb"><div class="ttname"><a href="classNativeParserBase.xhtml#aa6a65f399a92022167ca261d5b9bd8cb">NativeParserBase::MatchText</a></div><div class="ttdeci">bool MatchText(const wxString &amp;text, const wxString &amp;target, bool caseSens, bool isPrefix)</div><div class="ttdef"><b>Definition:</b> nativeparser_base.h:581</div></div>
<div class="ttc" id="structNativeParserBase_1_1ParserComponent_xhtml_a9dbbe530bb70590c982d8000aa593e40"><div class="ttname"><a href="structNativeParserBase_1_1ParserComponent.xhtml#a9dbbe530bb70590c982d8000aa593e40">NativeParserBase::ParserComponent::component</a></div><div class="ttdeci">wxString component</div><div class="ttdef"><b>Definition:</b> nativeparser_base.h:59</div></div>
<div class="ttc" id="token_8h_xhtml_a10e4417d2285abddb9d4c2e97cddcec4"><div class="ttname"><a href="token_8h.xhtml#a10e4417d2285abddb9d4c2e97cddcec4">TokenIdxSet</a></div><div class="ttdeci">std::set&lt; int, std::less&lt; int &gt; &gt; TokenIdxSet</div><div class="ttdef"><b>Definition:</b> token.h:16</div></div>
<div class="ttc" id="token_8h_xhtml_a7a47dce04185ce6008048622cc792f25a36d9f3721a93b1c4a60b1d50d0198af2"><div class="ttname"><a href="token_8h.xhtml#a7a47dce04185ce6008048622cc792f25a36d9f3721a93b1c4a60b1d50d0198af2">tkClass</a></div><div class="ttdef"><b>Definition:</b> token.h:37</div></div>
<div class="ttc" id="classNativeParserBase_xhtml_a72af340580b2d53ce914aec86a4d875b"><div class="ttname"><a href="classNativeParserBase.xhtml#a72af340580b2d53ce914aec86a4d875b">NativeParserBase::GetCallTipHighlight</a></div><div class="ttdeci">void GetCallTipHighlight(const wxString &amp;calltip, int *start, int *end, int typedCommas)</div><div class="ttdef"><b>Definition:</b> nativeparser_base.cpp:360</div></div>
<div class="ttc" id="classNativeParserBase_xhtml_a1292a0c0d4abc43681f3cd9b5e3d1381"><div class="ttname"><a href="classNativeParserBase.xhtml#a1292a0c0d4abc43681f3cd9b5e3d1381">NativeParserBase::~NativeParserBase</a></div><div class="ttdeci">virtual ~NativeParserBase()</div><div class="ttdef"><b>Definition:</b> nativeparser_base.cpp:69</div></div>
<div class="ttc" id="classNativeParserBase_xhtml_a12aae162661ce9aa643d40552d38b155a8a13933956c950d133e3feb897e058d0"><div class="ttname"><a href="classNativeParserBase.xhtml#a12aae162661ce9aa643d40552d38b155a8a13933956c950d133e3feb897e058d0">NativeParserBase::pttClass</a></div><div class="ttdef"><b>Definition:</b> nativeparser_base.h:31</div></div>
<div class="ttc" id="classNativeParserBase_xhtml_ae561e148ddf33a1b12f2bcc207b0bbf5"><div class="ttname"><a href="classNativeParserBase.xhtml#ae561e148ddf33a1b12f2bcc207b0bbf5">NativeParserBase::AfterWhitespace</a></div><div class="ttdeci">static int AfterWhitespace(int startAt, const wxString &amp;line)</div><div class="ttdef"><b>Definition:</b> nativeparser_base.h:454</div></div>
<div class="ttc" id="structNativeParserBase_1_1ParserComponent_xhtml_a14bf6b65cf68e34acf4b1f32f0b664a7"><div class="ttname"><a href="structNativeParserBase_1_1ParserComponent.xhtml#a14bf6b65cf68e34acf4b1f32f0b664a7">NativeParserBase::ParserComponent::tokenType</a></div><div class="ttdeci">ParserTokenType tokenType</div><div class="ttdoc">name </div><div class="ttdef"><b>Definition:</b> nativeparser_base.h:60</div></div>
<div class="ttc" id="classNativeParserBase_xhtml_a327bd9b943cb9cc7a5a45142e5c4bd12"><div class="ttname"><a href="classNativeParserBase.xhtml#a327bd9b943cb9cc7a5a45142e5c4bd12">NativeParserBase::GetTokenFromCurrentLine</a></div><div class="ttdeci">int GetTokenFromCurrentLine(TokenTree *tree, const TokenIdxSet &amp;tokens, size_t curLine, const wxString &amp;file)</div><div class="ttdef"><b>Definition:</b> nativeparser_base.cpp:1515</div></div>
<div class="ttc" id="classNativeParserBase_xhtml_aa46c34016b62f4f48eb71338395ab604"><div class="ttname"><a href="classNativeParserBase.xhtml#aa46c34016b62f4f48eb71338395ab604">NativeParserBase::IsOperatorBegin</a></div><div class="ttdeci">static bool IsOperatorBegin(int startAt, const wxString &amp;line)</div><div class="ttdef"><b>Definition:</b> nativeparser_base.h:414</div></div>
<div class="ttc" id="structNativeParserBase_1_1ParserComponent_xhtml_a2319702bbd82d0d06e083712f97d0824"><div class="ttname"><a href="structNativeParserBase_1_1ParserComponent.xhtml#a2319702bbd82d0d06e083712f97d0824">NativeParserBase::ParserComponent::Clear</a></div><div class="ttdeci">void Clear()</div><div class="ttdef"><b>Definition:</b> nativeparser_base.h:64</div></div>
<div class="ttc" id="nativeparser__base_8h_xhtml_aae6889eb5da84bada7b9f050d803c61d"><div class="ttname"><a href="nativeparser__base_8h.xhtml#aae6889eb5da84bada7b9f050d803c61d">s_DebugSmartSense</a></div><div class="ttdeci">bool s_DebugSmartSense</div><div class="ttdef"><b>Definition:</b> nativeparser.cpp:127</div></div>
<div class="ttc" id="classNativeParserBase_xhtml_a94874c741ccf2fe009d4ff13aca2e93c"><div class="ttname"><a href="classNativeParserBase.xhtml#a94874c741ccf2fe009d4ff13aca2e93c">NativeParserBase::FindCurrentFunctionScope</a></div><div class="ttdeci">void FindCurrentFunctionScope(TokenTree *tree, const TokenIdxSet &amp;procResult, TokenIdxSet &amp;scopeResult)</div><div class="ttdef"><b>Definition:</b> nativeparser_base.cpp:306</div></div>
<div class="ttc" id="classNativeParserBase_xhtml_a1470d04a041cc280dae90a5838fe87a6"><div class="ttname"><a href="classNativeParserBase.xhtml#a1470d04a041cc280dae90a5838fe87a6">NativeParserBase::IsChildOfUnnamedOrEnum</a></div><div class="ttdeci">bool IsChildOfUnnamedOrEnum(TokenTree *tree, const int targetIdx, const int parentIdx)</div><div class="ttdoc">check to see if the token is an unnamed class or enum under the parent token </div><div class="ttdef"><b>Definition:</b> nativeparser_base.h:546</div></div>
<div class="ttc" id="classNativeParserBase_xhtml_a12aae162661ce9aa643d40552d38b155"><div class="ttname"><a href="classNativeParserBase.xhtml#a12aae162661ce9aa643d40552d38b155">NativeParserBase::ParserTokenType</a></div><div class="ttdeci">ParserTokenType</div><div class="ttdef"><b>Definition:</b> nativeparser_base.h:27</div></div>
<div class="ttc" id="classNativeParserBase_xhtml_a0e249f14e7e08e05d829924e5f4a0563a49f9faaddddd4b054d84ab57dbfa98a6"><div class="ttname"><a href="classNativeParserBase.xhtml#a0e249f14e7e08e05d829924e5f4a0563a49f9faaddddd4b054d84ab57dbfa98a6">NativeParserBase::otOperatorUndefined</a></div><div class="ttdef"><b>Definition:</b> nativeparser_base.h:39</div></div>
<div class="ttc" id="classNativeParserBase_xhtml_aee2ec25f284973e0eabd9e85214123da"><div class="ttname"><a href="classNativeParserBase.xhtml#aee2ec25f284973e0eabd9e85214123da">NativeParserBase::IsOperatorDot</a></div><div class="ttdeci">static bool IsOperatorDot(int startAt, const wxString &amp;line)</div><div class="ttdef"><b>Definition:</b> nativeparser_base.h:425</div></div>
<div class="ttc" id="classNativeParserBase_xhtml_a12aae162661ce9aa643d40552d38b155ae4697edb3786b3cc445eb37c00ef89b3"><div class="ttname"><a href="classNativeParserBase.xhtml#a12aae162661ce9aa643d40552d38b155ae4697edb3786b3cc445eb37c00ef89b3">NativeParserBase::pttNamespace</a></div><div class="ttdef"><b>Definition:</b> nativeparser_base.h:32</div></div>
<div class="ttc" id="token_8h_xhtml_a51914652d471a4b2e79baaa727cef729a935af98e116660761ab579df64af700c"><div class="ttname"><a href="token_8h.xhtml#a51914652d471a4b2e79baaa727cef729a935af98e116660761ab579df64af700c">tsPrivate</a></div><div class="ttdef"><b>Definition:</b> token.h:24</div></div>
<div class="ttc" id="classNativeParserBase_xhtml_abcdfe0f5a07b39cd7353d8779540efa4"><div class="ttname"><a href="classNativeParserBase.xhtml#abcdfe0f5a07b39cd7353d8779540efa4">NativeParserBase::FindFunctionOpenParenthesis</a></div><div class="ttdeci">int FindFunctionOpenParenthesis(const wxString &amp;calltip)</div><div class="ttdef"><b>Definition:</b> nativeparser_base.cpp:401</div></div>
<div class="ttc" id="classNativeParserBase_xhtml_a12aae162661ce9aa643d40552d38b155a1d846f7a84d0eec5dc760e406e20efa3"><div class="ttname"><a href="classNativeParserBase.xhtml#a12aae162661ce9aa643d40552d38b155a1d846f7a84d0eec5dc760e406e20efa3">NativeParserBase::pttUndefined</a></div><div class="ttdef"><b>Definition:</b> nativeparser_base.h:29</div></div>
<div class="ttc" id="classNativeParserBase_xhtml_a35e7c059bb20010170ea4cfa79331e4b"><div class="ttname"><a href="classNativeParserBase.xhtml#a35e7c059bb20010170ea4cfa79331e4b">NativeParserBase::GetNextCCToken</a></div><div class="ttdeci">wxString GetNextCCToken(const wxString &amp;line, unsigned int &amp;startAt, OperatorType &amp;tokenOperatorType)</div><div class="ttdef"><b>Definition:</b> nativeparser_base.cpp:553</div></div>
<div class="ttc" id="structNativeParserBase_1_1ParserComponent_xhtml"><div class="ttname"><a href="structNativeParserBase_1_1ParserComponent.xhtml">NativeParserBase::ParserComponent</a></div><div class="ttdoc">a long statement can be divided to a ParserComponent chain. </div><div class="ttdef"><b>Definition:</b> nativeparser_base.h:57</div></div>
<div class="ttc" id="classNativeParserBase_xhtml_a2f413ee746298a9b4078470f12cd622d"><div class="ttname"><a href="classNativeParserBase.xhtml#a2f413ee746298a9b4078470f12cd622d">NativeParserBase::ResolveActualType</a></div><div class="ttdeci">size_t ResolveActualType(TokenTree *tree, wxString searchText, const TokenIdxSet &amp;searchScope, TokenIdxSet &amp;result)</div><div class="ttdef"><b>Definition:</b> nativeparser_base.cpp:1078</div></div>
<div class="ttc" id="classNativeParserBase_xhtml_a18fe560152e0b824a8ad2b0990972923"><div class="ttname"><a href="classNativeParserBase.xhtml#a18fe560152e0b824a8ad2b0990972923">NativeParserBase::IsOperatorPointer</a></div><div class="ttdeci">static bool IsOperatorPointer(int startAt, const wxString &amp;line)</div><div class="ttdef"><b>Definition:</b> nativeparser_base.h:404</div></div>
<div class="ttc" id="classNativeParserBase_xhtml_a4247e13f3d453b6b9c7b4e2c408bcb01"><div class="ttname"><a href="classNativeParserBase.xhtml#a4247e13f3d453b6b9c7b4e2c408bcb01">NativeParserBase::AddChildrenOfEnum</a></div><div class="ttdeci">bool AddChildrenOfEnum(TokenTree *tree, const Token *parent, TokenIdxSet &amp;result)</div><div class="ttdef"><b>Definition:</b> nativeparser_base.h:520</div></div>
<div class="ttc" id="classNativeParserBase_xhtml_a730bf4ebbf118d7c5707ee7f2023d519"><div class="ttname"><a href="classNativeParserBase.xhtml#a730bf4ebbf118d7c5707ee7f2023d519">NativeParserBase::GenerateResultSet</a></div><div class="ttdeci">size_t GenerateResultSet(TokenTree *tree, const wxString &amp;target, int parentIdx, TokenIdxSet &amp;result, bool caseSens=true, bool isPrefix=false, short int kindMask=0xFFFF)</div><div class="ttdef"><b>Definition:</b> nativeparser_base.cpp:1188</div></div>
<div class="ttc" id="classNativeParserBase_xhtml_ad0f663db3c8703fbab998cb1a2b83690"><div class="ttname"><a href="classNativeParserBase.xhtml#ad0f663db3c8703fbab998cb1a2b83690">NativeParserBase::BeforeToken</a></div><div class="ttdeci">static int BeforeToken(int startAt, const wxString &amp;line)</div><div class="ttdef"><b>Definition:</b> nativeparser_base.h:379</div></div>
<div class="ttc" id="classNativeParserBase_xhtml_a41a37e7e5c205f2316ca530675f25bd1"><div class="ttname"><a href="classNativeParserBase.xhtml#a41a37e7e5c205f2316ca530675f25bd1">NativeParserBase::GetCCToken</a></div><div class="ttdeci">wxString GetCCToken(wxString &amp;line, ParserTokenType &amp;tokenType, OperatorType &amp;tokenOperatorType)</div><div class="ttdef"><b>Definition:</b> nativeparser_base.cpp:419</div></div>
<div class="ttc" id="classNativeParserBase_xhtml_a0e249f14e7e08e05d829924e5f4a0563ad6dd6ba4590df41d0613d5fb8c980e9d"><div class="ttname"><a href="classNativeParserBase.xhtml#a0e249f14e7e08e05d829924e5f4a0563ad6dd6ba4590df41d0613d5fb8c980e9d">NativeParserBase::otOperatorStar</a></div><div class="ttdef"><b>Definition:</b> nativeparser_base.h:43</div></div>
<div class="ttc" id="classNativeParserBase_xhtml_ad0076378dbf40e41ae66bd04876fd795"><div class="ttname"><a href="classNativeParserBase.xhtml#ad0076378dbf40e41ae66bd04876fd795">NativeParserBase::CleanupSearchScope</a></div><div class="ttdeci">void CleanupSearchScope(TokenTree *tree, TokenIdxSet *searchScope)</div><div class="ttdef"><b>Definition:</b> nativeparser_base.cpp:339</div></div>
<div class="ttc" id="classNativeParserBase_xhtml_a70232a4a2168f656abe4c53ec9e0d9fc"><div class="ttname"><a href="classNativeParserBase.xhtml#a70232a4a2168f656abe4c53ec9e0d9fc">NativeParserBase::FindCCTokenStart</a></div><div class="ttdeci">unsigned int FindCCTokenStart(const wxString &amp;line)</div><div class="ttdef"><b>Definition:</b> nativeparser_base.cpp:477</div></div>
<div class="ttc" id="structNativeParserBase_1_1ParserComponent_xhtml_a22c9daa0327fa8bd830b182d97611644"><div class="ttname"><a href="structNativeParserBase_1_1ParserComponent.xhtml#a22c9daa0327fa8bd830b182d97611644">NativeParserBase::ParserComponent::ParserComponent</a></div><div class="ttdeci">ParserComponent()</div><div class="ttdoc">operator type </div><div class="ttdef"><b>Definition:</b> nativeparser_base.h:63</div></div>
<div class="ttc" id="classNativeParserBase_xhtml_a22419effe0b8f2d1b6b40ffb4d24c22e"><div class="ttname"><a href="classNativeParserBase.xhtml#a22419effe0b8f2d1b6b40ffb4d24c22e">NativeParserBase::BreakUpComponents</a></div><div class="ttdeci">size_t BreakUpComponents(const wxString &amp;actual, std::queue&lt; ParserComponent &gt; &amp;components)</div><div class="ttdoc">break a statement to several ParserComponents, and store them in a queue. </div><div class="ttdef"><b>Definition:</b> nativeparser_base.cpp:676</div></div>
<div class="ttc" id="token_8h_xhtml_a7a47dce04185ce6008048622cc792f25"><div class="ttname"><a href="token_8h.xhtml#a7a47dce04185ce6008048622cc792f25">TokenKind</a></div><div class="ttdeci">TokenKind</div><div class="ttdef"><b>Definition:</b> token.h:29</div></div>
<div class="ttc" id="classToken_xhtml_a7b5dce935f88261f7e20580a599aeee2"><div class="ttname"><a href="classToken.xhtml#a7b5dce935f88261f7e20580a599aeee2">Token::m_Children</a></div><div class="ttdeci">TokenIdxSet m_Children</div><div class="ttdef"><b>Definition:</b> token.h:262</div></div>
<div class="ttc" id="classNativeParserBase_xhtml_af3474165096e398ed6dabff30a5c7a9f"><div class="ttname"><a href="classNativeParserBase.xhtml#af3474165096e398ed6dabff30a5c7a9f">NativeParserBase::BeginOfToken</a></div><div class="ttdeci">static int BeginOfToken(int startAt, const wxString &amp;line)</div><div class="ttdef"><b>Definition:</b> nativeparser_base.h:370</div></div>
<div class="ttc" id="classNativeParserBase_xhtml_a47bf1cda3eab2a2921e9f82c1cc0adb3"><div class="ttname"><a href="classNativeParserBase.xhtml#a47bf1cda3eab2a2921e9f82c1cc0adb3">NativeParserBase::AddTemplateAlias</a></div><div class="ttdeci">void AddTemplateAlias(TokenTree *tree, const int &amp;id, const TokenIdxSet &amp;actualTypeScope, TokenIdxSet &amp;initialScope)</div><div class="ttdef"><b>Definition:</b> nativeparser_base.cpp:1152</div></div>
<div class="ttc" id="classNativeParserBase_xhtml_a0e249f14e7e08e05d829924e5f4a0563a58514c87e1f017ad4860130de3d7fe86"><div class="ttname"><a href="classNativeParserBase.xhtml#a0e249f14e7e08e05d829924e5f4a0563a58514c87e1f017ad4860130de3d7fe86">NativeParserBase::otOperatorParentheses</a></div><div class="ttdef"><b>Definition:</b> nativeparser_base.h:41</div></div>
<div class="ttc" id="classNativeParserBase_xhtml_a20c4e8a051ef3ff1777a6d193c69366e"><div class="ttname"><a href="classNativeParserBase.xhtml#a20c4e8a051ef3ff1777a6d193c69366e">NativeParserBase::ResolveTemplateMap</a></div><div class="ttdeci">void ResolveTemplateMap(TokenTree *tree, const wxString &amp;searchStr, const TokenIdxSet &amp;actualTypeScope, TokenIdxSet &amp;initialScope)</div><div class="ttdef"><b>Definition:</b> nativeparser_base.cpp:1129</div></div>
<div class="ttc" id="classNativeParserBase_xhtml_a0e249f14e7e08e05d829924e5f4a0563"><div class="ttname"><a href="classNativeParserBase.xhtml#a0e249f14e7e08e05d829924e5f4a0563">NativeParserBase::OperatorType</a></div><div class="ttdeci">OperatorType</div><div class="ttdef"><b>Definition:</b> nativeparser_base.h:37</div></div>
<div class="ttc" id="classNativeParserBase_xhtml_a2d1f66cf93ed2a22beb09db81cfc1fdf"><div class="ttname"><a href="classNativeParserBase.xhtml#a2d1f66cf93ed2a22beb09db81cfc1fdf">NativeParserBase::ResolveOperator</a></div><div class="ttdeci">void ResolveOperator(TokenTree *tree, const OperatorType &amp;tokenOperatorType, const TokenIdxSet &amp;tokens, const TokenIdxSet &amp;searchScope, TokenIdxSet &amp;result)</div><div class="ttdef"><b>Definition:</b> nativeparser_base.cpp:987</div></div>
<div class="ttc" id="token_8h_xhtml_a7a47dce04185ce6008048622cc792f25a5bf7196b13ca1ae329ed8a409c1c41c0"><div class="ttname"><a href="token_8h.xhtml#a7a47dce04185ce6008048622cc792f25a5bf7196b13ca1ae329ed8a409c1c41c0">tkEnum</a></div><div class="ttdef"><b>Definition:</b> token.h:40</div></div>
<div class="ttc" id="classNativeParserBase_xhtml_a0e249f14e7e08e05d829924e5f4a0563a210fa66c199df8da96f17e6f833ba40b"><div class="ttname"><a href="classNativeParserBase.xhtml#a0e249f14e7e08e05d829924e5f4a0563a210fa66c199df8da96f17e6f833ba40b">NativeParserBase::otOperatorPointer</a></div><div class="ttdef"><b>Definition:</b> nativeparser_base.h:42</div></div>
<div class="ttc" id="classNativeParserBase_xhtml_ad30855bda279972bc74fcce358984c0b"><div class="ttname"><a href="classNativeParserBase.xhtml#ad30855bda279972bc74fcce358984c0b">NativeParserBase::RemoveLastFunctionChildren</a></div><div class="ttdeci">void RemoveLastFunctionChildren(TokenTree *tree, int &amp;lastFuncTokenIdx)</div><div class="ttdef"><b>Definition:</b> nativeparser_base.cpp:646</div></div>
<div class="ttc" id="classNativeParserBase_xhtml_a2bc72779b9b888d91aec47f7ca943170"><div class="ttname"><a href="classNativeParserBase.xhtml#a2bc72779b9b888d91aec47f7ca943170">NativeParserBase::AddConstructors</a></div><div class="ttdeci">void AddConstructors(TokenTree *tree, const TokenIdxSet &amp;source, TokenIdxSet &amp;dest)</div><div class="ttdef"><b>Definition:</b> nativeparser_base.cpp:958</div></div>
<div class="ttc" id="classNativeParserBase_xhtml_a12aae162661ce9aa643d40552d38b155a3a570ba6912abaae180ec08aacc6d6cc"><div class="ttname"><a href="classNativeParserBase.xhtml#a12aae162661ce9aa643d40552d38b155a3a570ba6912abaae180ec08aacc6d6cc">NativeParserBase::pttSearchText</a></div><div class="ttdef"><b>Definition:</b> nativeparser_base.h:30</div></div>
<div class="ttc" id="classToken_xhtml"><div class="ttname"><a href="classToken.xhtml">Token</a></div><div class="ttdef"><b>Definition:</b> token.h:82</div></div>
<div class="ttc" id="classNativeParserBase_xhtml_ac41cce829ef11e3f5807abc9c1ae9c3f"><div class="ttname"><a href="classNativeParserBase.xhtml#ac41cce829ef11e3f5807abc9c1ae9c3f">NativeParserBase::ComputeCallTip</a></div><div class="ttdeci">void ComputeCallTip(TokenTree *tree, const TokenIdxSet &amp;tokens, wxArrayString &amp;items)</div><div class="ttdef"><b>Definition:</b> nativeparser_base.cpp:1586</div></div>
<div class="ttc" id="classNativeParserBase_xhtml_a8fc2c501707603f10de6fc381ecb5ad7"><div class="ttname"><a href="classNativeParserBase.xhtml#a8fc2c501707603f10de6fc381ecb5ad7">NativeParserBase::InsideToken</a></div><div class="ttdeci">static bool InsideToken(int startAt, const wxString &amp;line)</div><div class="ttdef"><b>Definition:</b> nativeparser_base.h:357</div></div>
<div class="ttc" id="classNativeParserBase_xhtml_a70b951898f29e41229b74e2e3f72b909"><div class="ttname"><a href="classNativeParserBase.xhtml#a70b951898f29e41229b74e2e3f72b909">NativeParserBase::NativeParserBase</a></div><div class="ttdeci">NativeParserBase()</div><div class="ttdef"><b>Definition:</b> nativeparser_base.cpp:65</div></div>
<div class="ttc" id="classNativeParserBase_xhtml_a93d5aa593e2432de7e3b5cf7629d5465"><div class="ttname"><a href="classNativeParserBase.xhtml#a93d5aa593e2432de7e3b5cf7629d5465">NativeParserBase::Reset</a></div><div class="ttdeci">void Reset()</div><div class="ttdef"><b>Definition:</b> nativeparser_base.cpp:73</div></div>
<div class="ttc" id="classNativeParserBase_xhtml"><div class="ttname"><a href="classNativeParserBase.xhtml">NativeParserBase</a></div><div class="ttdef"><b>Definition:</b> nativeparser_base.h:23</div></div>
<div class="ttc" id="classNativeParserBase_xhtml_ac96ea37f147376e6727d37b649c9c5c4"><div class="ttname"><a href="classNativeParserBase.xhtml#ac96ea37f147376e6727d37b649c9c5c4">NativeParserBase::AddChildrenOfUnnamed</a></div><div class="ttdeci">bool AddChildrenOfUnnamed(TokenTree *tree, const Token *parent, TokenIdxSet &amp;result)</div><div class="ttdoc">collect child tokens of the specified token, the specified token must be unnamed. ...</div><div class="ttdef"><b>Definition:</b> nativeparser_base.h:494</div></div>
<div class="ttc" id="classNativeParserBase_xhtml_a41940b0d68082c9c64067e6068e1d8ad"><div class="ttname"><a href="classNativeParserBase.xhtml#a41940b0d68082c9c64067e6068e1d8ad">NativeParserBase::CollectSearchScopes</a></div><div class="ttdeci">void CollectSearchScopes(const TokenIdxSet &amp;searchScope, TokenIdxSet &amp;actualTypeScope, TokenTree *tree)</div><div class="ttdef"><b>Definition:</b> nativeparser_base.cpp:1484</div></div>
<div class="ttc" id="classNativeParserBase_xhtml_a44f138ba5a521aabb08770f53f2c4c25"><div class="ttname"><a href="classNativeParserBase.xhtml#a44f138ba5a521aabb08770f53f2c4c25">NativeParserBase::m_TemplateMap</a></div><div class="ttdeci">std::map&lt; wxString, wxString &gt; m_TemplateMap</div><div class="ttdef"><b>Definition:</b> nativeparser_base.h:601</div></div>
<div class="ttc" id="classToken_xhtml_acdc09e733cf2a6342767e714e8f86bc7"><div class="ttname"><a href="classToken.xhtml#acdc09e733cf2a6342767e714e8f86bc7">Token::m_IsAnonymous</a></div><div class="ttdeci">bool m_IsAnonymous</div><div class="ttdef"><b>Definition:</b> token.h:248</div></div>
<div class="ttc" id="classNativeParserBase_xhtml_a12aae162661ce9aa643d40552d38b155ade77216b9ec7507ba754fd14605516e5"><div class="ttname"><a href="classNativeParserBase.xhtml#a12aae162661ce9aa643d40552d38b155ade77216b9ec7507ba754fd14605516e5">NativeParserBase::pttFunction</a></div><div class="ttdef"><b>Definition:</b> nativeparser_base.h:33</div></div>
<div class="ttc" id="classNativeParserBase_xhtml_a515db7dbc6e50f2817d19126d751bf8b"><div class="ttname"><a href="classNativeParserBase.xhtml#a515db7dbc6e50f2817d19126d751bf8b">NativeParserBase::CountCommas</a></div><div class="ttdeci">static int CountCommas(const wxString &amp;lineText, int start)</div><div class="ttdef"><b>Definition:</b> nativeparser_base.h:334</div></div>
</div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.9.1
</small></address>
</body>
</html>
