<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.8"/>
<title>Code::Blocks: ParserThread Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">Code::Blocks
   &#160;<span id="projectnumber">SVN r10054</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.8 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li><a href="files.xhtml"><span>Files</span></a></li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.xhtml"><span>Class&#160;List</span></a></li>
      <li><a href="classes.xhtml"><span>Class&#160;Index</span></a></li>
      <li><a href="inherits.xhtml"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.xhtml"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pro-types">Protected Types</a> &#124;
<a href="#pro-methods">Protected Member Functions</a> &#124;
<a href="#pri-methods">Private Member Functions</a> &#124;
<a href="#pri-attribs">Private Attributes</a> &#124;
<a href="classParserThread-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">ParserThread Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>A parser threaded task, which can be assigned to the thread task pool, and run there.  
 <a href="classParserThread.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="parserthread_8h_source.xhtml">parserthread.h</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for ParserThread:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="classParserThread__inherit__graph.svg" width="238" height="830"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Collaboration diagram for ParserThread:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="classParserThread__coll__graph.svg" width="2230" height="3639"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:aa0954aedee321fdedc4e49ca4c75482c"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classParserThread.xhtml#aa0954aedee321fdedc4e49ca4c75482c">ParserThread</a> (<a class="el" href="classParserBase.xhtml">ParserBase</a> *parent, const wxString &amp;bufferOrFilename, bool isLocal, <a class="el" href="structParserThreadOptions.xhtml">ParserThreadOptions</a> &amp;parserThreadOptions, <a class="el" href="classTokenTree.xhtml">TokenTree</a> *tokenTree)</td></tr>
<tr class="separator:aa0954aedee321fdedc4e49ca4c75482c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3162055a66112bef67ca7ac94a01a077"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classParserThread.xhtml#a3162055a66112bef67ca7ac94a01a077">~ParserThread</a> ()</td></tr>
<tr class="separator:a3162055a66112bef67ca7ac94a01a077"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a87e5624dfc192efb0bba2d69f4be7214"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classParserThread.xhtml#a87e5624dfc192efb0bba2d69f4be7214">Parse</a> ()</td></tr>
<tr class="separator:a87e5624dfc192efb0bba2d69f4be7214"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7a2c99d6130cdb0df26472b6cc8b6b16"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classParserThread.xhtml#a7a2c99d6130cdb0df26472b6cc8b6b16">ParseBufferForNamespaces</a> (const wxString &amp;buffer, <a class="el" href="parserthread_8h.xhtml#adc7acf1313fbbb9b63b163e550d8c439">NameSpaceVec</a> &amp;result)</td></tr>
<tr class="separator:a7a2c99d6130cdb0df26472b6cc8b6b16"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4ab0b49d18939e1879539d2de19e2aab"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classParserThread.xhtml#a4ab0b49d18939e1879539d2de19e2aab">ParseBufferForUsingNamespace</a> (const wxString &amp;buffer, wxArrayString &amp;result)</td></tr>
<tr class="separator:a4ab0b49d18939e1879539d2de19e2aab"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adf623c35632e726ab847d300a6a3decc"><td class="memItemLeft" align="right" valign="top">wxString&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classParserThread.xhtml#adf623c35632e726ab847d300a6a3decc">GetFilename</a> ()</td></tr>
<tr class="separator:adf623c35632e726ab847d300a6a3decc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classcbThreadedTask"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classcbThreadedTask')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classcbThreadedTask.xhtml">cbThreadedTask</a></td></tr>
<tr class="memitem:a1300f09b9a805d17f4a5451eee117427 inherit pub_methods_classcbThreadedTask"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcbThreadedTask.xhtml#a1300f09b9a805d17f4a5451eee117427">cbThreadedTask</a> ()</td></tr>
<tr class="memdesc:a1300f09b9a805d17f4a5451eee117427 inherit pub_methods_classcbThreadedTask"><td class="mdescLeft">&#160;</td><td class="mdescRight"><a class="el" href="classcbThreadedTask.xhtml">cbThreadedTask</a> ctor  <a href="#a1300f09b9a805d17f4a5451eee117427">More...</a><br /></td></tr>
<tr class="separator:a1300f09b9a805d17f4a5451eee117427 inherit pub_methods_classcbThreadedTask"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a540ecf76d478ef4688395de0fb540068 inherit pub_methods_classcbThreadedTask"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcbThreadedTask.xhtml#a540ecf76d478ef4688395de0fb540068">~cbThreadedTask</a> ()=0</td></tr>
<tr class="memdesc:a540ecf76d478ef4688395de0fb540068 inherit pub_methods_classcbThreadedTask"><td class="mdescLeft">&#160;</td><td class="mdescRight"><a class="el" href="classcbThreadedTask.xhtml">cbThreadedTask</a> dtor  <a href="#a540ecf76d478ef4688395de0fb540068">More...</a><br /></td></tr>
<tr class="separator:a540ecf76d478ef4688395de0fb540068 inherit pub_methods_classcbThreadedTask"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa627c91a6405188001870a4191bf87c7 inherit pub_methods_classcbThreadedTask"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcbThreadedTask.xhtml#aa627c91a6405188001870a4191bf87c7">Abort</a> ()</td></tr>
<tr class="memdesc:aa627c91a6405188001870a4191bf87c7 inherit pub_methods_classcbThreadedTask"><td class="mdescLeft">&#160;</td><td class="mdescRight">This function is called to tell the task to abort (check <a class="el" href="classcbThreadPool.xhtml#a3477c26b54ed024450576fc3fa7f865f">cbThreadPool::AbortAllTasks</a>)  <a href="#aa627c91a6405188001870a4191bf87c7">More...</a><br /></td></tr>
<tr class="separator:aa627c91a6405188001870a4191bf87c7 inherit pub_methods_classcbThreadedTask"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-types"></a>
Protected Types</h2></td></tr>
<tr class="memitem:a3eed219f8132be0962c7ed13d5ee46ad"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classParserThread.xhtml#a3eed219f8132be0962c7ed13d5ee46ad">EClassType</a> { <a class="el" href="classParserThread.xhtml#a3eed219f8132be0962c7ed13d5ee46adaa86fb31f67d0c681cbcfd65d85c3b2d2">ctStructure</a> = 0, 
<a class="el" href="classParserThread.xhtml#a3eed219f8132be0962c7ed13d5ee46adad19f6ddcd06b23fb48e55ce9f2322515">ctClass</a> = 1, 
<a class="el" href="classParserThread.xhtml#a3eed219f8132be0962c7ed13d5ee46ada8d0039c683a935d81d52e6edcbe4fa2c">ctUnion</a> = 3
 }</td></tr>
<tr class="separator:a3eed219f8132be0962c7ed13d5ee46ad"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-methods"></a>
Protected Member Functions</h2></td></tr>
<tr class="memitem:a37f1420aefc6d522030a93283d965515"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classParserThread.xhtml#a37f1420aefc6d522030a93283d965515">Execute</a> ()</td></tr>
<tr class="separator:a37f1420aefc6d522030a93283d965515"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3324c3f8b45443f087071a758676134a"><td class="memItemLeft" align="right" valign="top">wxChar&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classParserThread.xhtml#a3324c3f8b45443f087071a758676134a">SkipToOneOfChars</a> (const wxString &amp;chars, bool supportNesting=false, bool singleCharToken=true)</td></tr>
<tr class="separator:a3324c3f8b45443f087071a758676134a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a991cc89e41f0fbff132e3f09585ea70d"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classParserThread.xhtml#a991cc89e41f0fbff132e3f09585ea70d">DoParse</a> ()</td></tr>
<tr class="separator:a991cc89e41f0fbff132e3f09585ea70d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a65973704432137e051aec1541d3d7236"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classParserThread.xhtml#a65973704432137e051aec1541d3d7236">SkipBlock</a> ()</td></tr>
<tr class="separator:a65973704432137e051aec1541d3d7236"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a019c7ff4c9f800ccc583a41699ab5b5e"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classParserThread.xhtml#a019c7ff4c9f800ccc583a41699ab5b5e">SkipAngleBraces</a> ()</td></tr>
<tr class="separator:a019c7ff4c9f800ccc583a41699ab5b5e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa644c4bf5a650801606724f2d4cc90d5"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classParserThread.xhtml#aa644c4bf5a650801606724f2d4cc90d5">HandleIncludes</a> ()</td></tr>
<tr class="separator:aa644c4bf5a650801606724f2d4cc90d5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab55fd2bae9203888c0178c4df058636c"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classParserThread.xhtml#ab55fd2bae9203888c0178c4df058636c">HandleDefines</a> ()</td></tr>
<tr class="separator:ab55fd2bae9203888c0178c4df058636c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae845814e7a52cd585d77065bc3c8d6cb"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classParserThread.xhtml#ae845814e7a52cd585d77065bc3c8d6cb">HandleUndefs</a> ()</td></tr>
<tr class="separator:ae845814e7a52cd585d77065bc3c8d6cb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a11bacf859a9b5a1a02c161331b0278f4"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classParserThread.xhtml#a11bacf859a9b5a1a02c161331b0278f4">HandleNamespace</a> ()</td></tr>
<tr class="separator:a11bacf859a9b5a1a02c161331b0278f4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac899b2ea7761e46bb1f0d061f4d54691"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classParserThread.xhtml#ac899b2ea7761e46bb1f0d061f4d54691">HandleClass</a> (<a class="el" href="classParserThread.xhtml#a3eed219f8132be0962c7ed13d5ee46ad">EClassType</a> ct)</td></tr>
<tr class="separator:ac899b2ea7761e46bb1f0d061f4d54691"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5815c1b5dc1e6f26b69324f2f1842ee0"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classParserThread.xhtml#a5815c1b5dc1e6f26b69324f2f1842ee0">HandleFunction</a> (const wxString &amp;name, bool isOperator=false, bool isPointer=false)</td></tr>
<tr class="separator:a5815c1b5dc1e6f26b69324f2f1842ee0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a650a609cbd9745ae8bad1951586a4bfa"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classParserThread.xhtml#a650a609cbd9745ae8bad1951586a4bfa">HandleForLoopArguments</a> ()</td></tr>
<tr class="separator:a650a609cbd9745ae8bad1951586a4bfa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2ef3649a1395a1c492f38e6b167582b4"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classParserThread.xhtml#a2ef3649a1395a1c492f38e6b167582b4">HandleConditionalArguments</a> ()</td></tr>
<tr class="separator:a2ef3649a1395a1c492f38e6b167582b4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4a9c62b81b02895349a1633ff744e8f7"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classParserThread.xhtml#a4a9c62b81b02895349a1633ff744e8f7">HandleEnum</a> ()</td></tr>
<tr class="separator:a4a9c62b81b02895349a1633ff744e8f7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a997e91f1cbbf64ef9f8220e97dd7a240"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classParserThread.xhtml#a997e91f1cbbf64ef9f8220e97dd7a240">CalcEnumExpression</a> (<a class="el" href="classToken.xhtml">Token</a> *tokenParent, long &amp;result, wxString &amp;peek)</td></tr>
<tr class="separator:a997e91f1cbbf64ef9f8220e97dd7a240"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aab08606cca9480bc978259ef8afc170d"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classParserThread.xhtml#aab08606cca9480bc978259ef8afc170d">HandleTypedef</a> ()</td></tr>
<tr class="separator:aab08606cca9480bc978259ef8afc170d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a36ab4001b8842ae1bea7452474aa63c3"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classParserThread.xhtml#a36ab4001b8842ae1bea7452474aa63c3">HandleMacroExpansion</a> (int id, const wxString &amp;peek)</td></tr>
<tr class="separator:a36ab4001b8842ae1bea7452474aa63c3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae5961cd32c994fa68fec25baa4ee053a"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classParserThread.xhtml#ae5961cd32c994fa68fec25baa4ee053a">ReadVarNames</a> ()</td></tr>
<tr class="separator:ae5961cd32c994fa68fec25baa4ee053a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad78eb9574aefe7f580aaa805f10fbe1b"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classParserThread.xhtml#ad78eb9574aefe7f580aaa805f10fbe1b">ReadClsNames</a> (wxString &amp;ancestor)</td></tr>
<tr class="separator:ad78eb9574aefe7f580aaa805f10fbe1b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae1def46bdb504975217819bb1049d9fd"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classToken.xhtml">Token</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classParserThread.xhtml#ae1def46bdb504975217819bb1049d9fd">DoAddToken</a> (<a class="el" href="token_8h.xhtml#a7a47dce04185ce6008048622cc792f25">TokenKind</a> kind, const wxString &amp;name, int line, int implLineStart=0, int implLineEnd=0, const wxString &amp;args=wxEmptyString, bool isOperator=false, bool isImpl=false)</td></tr>
<tr class="separator:ae1def46bdb504975217819bb1049d9fd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a17fc94b564d71faf3a3b1ccb2708e06a"><td class="memItemLeft" align="right" valign="top">wxString&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classParserThread.xhtml#a17fc94b564d71faf3a3b1ccb2708e06a">GetTokenBaseType</a> ()</td></tr>
<tr class="separator:a17fc94b564d71faf3a3b1ccb2708e06a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pro_methods_classcbThreadedTask"><td colspan="2" onclick="javascript:toggleInherit('pro_methods_classcbThreadedTask')"><img src="closed.png" alt="-"/>&#160;Protected Member Functions inherited from <a class="el" href="classcbThreadedTask.xhtml">cbThreadedTask</a></td></tr>
<tr class="memitem:a4df205663364bfc9e5d0a4c4b4e5eb34 inherit pro_methods_classcbThreadedTask"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcbThreadedTask.xhtml#a4df205663364bfc9e5d0a4c4b4e5eb34">TestDestroy</a> () const </td></tr>
<tr class="memdesc:a4df205663364bfc9e5d0a4c4b4e5eb34 inherit pro_methods_classcbThreadedTask"><td class="mdescLeft">&#160;</td><td class="mdescRight">Be sure to call this function often. If it returns true, quit your task quickly.  <a href="#a4df205663364bfc9e5d0a4c4b4e5eb34">More...</a><br /></td></tr>
<tr class="separator:a4df205663364bfc9e5d0a4c4b4e5eb34 inherit pro_methods_classcbThreadedTask"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1d6b3ac80d7cf645408d5cf2eb630b89 inherit pro_methods_classcbThreadedTask"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcbThreadedTask.xhtml#a1d6b3ac80d7cf645408d5cf2eb630b89">Aborted</a> () const </td></tr>
<tr class="memdesc:a1d6b3ac80d7cf645408d5cf2eb630b89 inherit pro_methods_classcbThreadedTask"><td class="mdescLeft">&#160;</td><td class="mdescRight">Same as <a class="el" href="classcbThreadedTask.xhtml#a4df205663364bfc9e5d0a4c4b4e5eb34" title="Be sure to call this function often. If it returns true, quit your task quickly. ">TestDestroy()</a>  <a href="#a1d6b3ac80d7cf645408d5cf2eb630b89">More...</a><br /></td></tr>
<tr class="separator:a1d6b3ac80d7cf645408d5cf2eb630b89 inherit pro_methods_classcbThreadedTask"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pri-methods"></a>
Private Member Functions</h2></td></tr>
<tr class="memitem:abda91d29be83e7900ad7a5c18cfe6435"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classParserThread.xhtml#abda91d29be83e7900ad7a5c18cfe6435">InitTokenizer</a> ()</td></tr>
<tr class="separator:abda91d29be83e7900ad7a5c18cfe6435"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a080e2d03d7ca0bdcb1552d4aa87c4839"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classToken.xhtml">Token</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classParserThread.xhtml#a080e2d03d7ca0bdcb1552d4aa87c4839">TokenExists</a> (const wxString &amp;name, const <a class="el" href="classToken.xhtml">Token</a> *parent=0, short int kindMask=0xFFFF)</td></tr>
<tr class="separator:a080e2d03d7ca0bdcb1552d4aa87c4839"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a612783ffe0fbf6a5461fdec0bc9d2024"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classToken.xhtml">Token</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classParserThread.xhtml#a612783ffe0fbf6a5461fdec0bc9d2024">TokenExists</a> (const wxString &amp;name, const wxString &amp;baseArgs, const <a class="el" href="classToken.xhtml">Token</a> *parent, <a class="el" href="token_8h.xhtml#a7a47dce04185ce6008048622cc792f25">TokenKind</a> kind)</td></tr>
<tr class="separator:a612783ffe0fbf6a5461fdec0bc9d2024"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1fa2f9d5e4348a8347e82cb563fc4074"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classToken.xhtml">Token</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classParserThread.xhtml#a1fa2f9d5e4348a8347e82cb563fc4074">FindTokenFromQueue</a> (std::queue&lt; wxString &gt; &amp;q, <a class="el" href="classToken.xhtml">Token</a> *parent=0, bool createIfNotExist=false, <a class="el" href="classToken.xhtml">Token</a> *parentIfCreated=0)</td></tr>
<tr class="separator:a1fa2f9d5e4348a8347e82cb563fc4074"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3f66c73b0b5c2481f09ee4b6f6a18f11"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classParserThread.xhtml#a3f66c73b0b5c2481f09ee4b6f6a18f11">GetBaseArgs</a> (const wxString &amp;args, wxString &amp;baseArgs)</td></tr>
<tr class="separator:a3f66c73b0b5c2481f09ee4b6f6a18f11"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a332fb74d8691e77680603e7d90af7029"><td class="memItemLeft" align="right" valign="top">wxString&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classParserThread.xhtml#a332fb74d8691e77680603e7d90af7029">GetClassFromMacro</a> (const wxString &amp;macro)</td></tr>
<tr class="separator:a332fb74d8691e77680603e7d90af7029"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a234c534f952d9c654e5969fe134b23d9"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classParserThread.xhtml#a234c534f952d9c654e5969fe134b23d9">GetRealTypeIfTokenIsMacro</a> (wxString &amp;tokenName)</td></tr>
<tr class="separator:a234c534f952d9c654e5969fe134b23d9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a83a5aafc48794c0b7855cc40c5ccc6cf"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classParserThread.xhtml#a83a5aafc48794c0b7855cc40c5ccc6cf">GetTemplateArgs</a> ()</td></tr>
<tr class="separator:a83a5aafc48794c0b7855cc40c5ccc6cf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6de60c378ea1d299684529374634be59"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classParserThread.xhtml#a6de60c378ea1d299684529374634be59">ResolveTemplateArgs</a> (<a class="el" href="classToken.xhtml">Token</a> *newToken)</td></tr>
<tr class="separator:a6de60c378ea1d299684529374634be59"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adba07ce4471e49fd269aa612af53fdff"><td class="memItemLeft" align="right" valign="top">wxArrayString&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classParserThread.xhtml#adba07ce4471e49fd269aa612af53fdff">GetTemplateArgArray</a> (const wxString &amp;templateArgs, bool remove_gt_lt, bool add_last)</td></tr>
<tr class="separator:adba07ce4471e49fd269aa612af53fdff"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a063f606371064cbf33004832013999bb"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classParserThread.xhtml#a063f606371064cbf33004832013999bb">SplitTemplateFormalParameters</a> (const wxString &amp;templateArgs, wxArrayString &amp;formals)</td></tr>
<tr class="separator:a063f606371064cbf33004832013999bb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaa1d625d691f92d6b5a70932c1418441"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classParserThread.xhtml#aaa1d625d691f92d6b5a70932c1418441">SplitTemplateActualParameters</a> (const wxString &amp;templateArgs, wxArrayString &amp;actuals)</td></tr>
<tr class="separator:aaa1d625d691f92d6b5a70932c1418441"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a83d18bbc35e7a572e3434f8cf3f2e01e"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classParserThread.xhtml#a83d18bbc35e7a572e3434f8cf3f2e01e">ResolveTemplateMap</a> (const wxString &amp;typeStr, const wxArrayString &amp;actuals, <a class="el" href="config-testsuite_8cpp.xhtml#a69836d004005a0d8f2eee22ec4257000">std::map</a>&lt; wxString, wxString &gt; &amp;results)</td></tr>
<tr class="separator:a83d18bbc35e7a572e3434f8cf3f2e01e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9821c59c7aa27f4f7dbf68255c5cb576"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classParserThread.xhtml#a9821c59c7aa27f4f7dbf68255c5cb576">RemoveTemplateArgs</a> (const wxString &amp;expr, wxString &amp;expNoArgs, wxString &amp;templateArgs)</td></tr>
<tr class="separator:a9821c59c7aa27f4f7dbf68255c5cb576"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4d7fd6f0ea1cf357f65af69a16a8ef48"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classParserThread.xhtml#a4d7fd6f0ea1cf357f65af69a16a8ef48">IsStillAlive</a> (const wxString &amp;funcInfo)</td></tr>
<tr class="separator:a4d7fd6f0ea1cf357f65af69a16a8ef48"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a10450ce60ee20a1a7964b51660fb3af9"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classParserThread.xhtml#a10450ce60ee20a1a7964b51660fb3af9">RefineAnonymousTypeToken</a> (short int typeMask, wxString alise)</td></tr>
<tr class="separator:a10450ce60ee20a1a7964b51660fb3af9"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pri-attribs"></a>
Private Attributes</h2></td></tr>
<tr class="memitem:a873fc088c4c8373ac41b407d65885902"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classTokenizer.xhtml">Tokenizer</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classParserThread.xhtml#a873fc088c4c8373ac41b407d65885902">m_Tokenizer</a></td></tr>
<tr class="separator:a873fc088c4c8373ac41b407d65885902"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6fe40c30236e32f403c8fb0368162d4d"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classParserBase.xhtml">ParserBase</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classParserThread.xhtml#a6fe40c30236e32f403c8fb0368162d4d">m_Parent</a></td></tr>
<tr class="separator:a6fe40c30236e32f403c8fb0368162d4d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac98620ec8d07c3515805f59fabd84762"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classTokenTree.xhtml">TokenTree</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classParserThread.xhtml#ac98620ec8d07c3515805f59fabd84762">m_TokenTree</a></td></tr>
<tr class="separator:ac98620ec8d07c3515805f59fabd84762"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a298741b1575002b21418de8b63e37761"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classToken.xhtml">Token</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classParserThread.xhtml#a298741b1575002b21418de8b63e37761">m_LastParent</a></td></tr>
<tr class="separator:a298741b1575002b21418de8b63e37761"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8fc104996d43d1273d57bf438f8c9705"><td class="memItemLeft" align="right" valign="top"><a class="el" href="token_8h.xhtml#a51914652d471a4b2e79baaa727cef729">TokenScope</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classParserThread.xhtml#a8fc104996d43d1273d57bf438f8c9705">m_LastScope</a></td></tr>
<tr class="separator:a8fc104996d43d1273d57bf438f8c9705"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad22d91c9d632db244f2342b00f9b8add"><td class="memItemLeft" align="right" valign="top">wxString&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classParserThread.xhtml#ad22d91c9d632db244f2342b00f9b8add">m_Filename</a></td></tr>
<tr class="separator:ad22d91c9d632db244f2342b00f9b8add"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a22516f9ecb0b957f4abb2ad83e8f0feb"><td class="memItemLeft" align="right" valign="top">unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classParserThread.xhtml#a22516f9ecb0b957f4abb2ad83e8f0feb">m_FileSize</a></td></tr>
<tr class="separator:a22516f9ecb0b957f4abb2ad83e8f0feb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a48ca1fbcfd78c24fab7f443ee5769e32"><td class="memItemLeft" align="right" valign="top">unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classParserThread.xhtml#a48ca1fbcfd78c24fab7f443ee5769e32">m_FileIdx</a></td></tr>
<tr class="separator:a48ca1fbcfd78c24fab7f443ee5769e32"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a682f61a3eedc9c4bef77ba315cf31ed6"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classParserThread.xhtml#a682f61a3eedc9c4bef77ba315cf31ed6">m_IsLocal</a></td></tr>
<tr class="separator:a682f61a3eedc9c4bef77ba315cf31ed6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a730cd9ca1c862f4046e9d12e786005c5"><td class="memItemLeft" align="right" valign="top">wxString&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classParserThread.xhtml#a730cd9ca1c862f4046e9d12e786005c5">m_Str</a></td></tr>
<tr class="separator:a730cd9ca1c862f4046e9d12e786005c5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa0fd2109d3757aa454448ed5ffbc35b5"><td class="memItemLeft" align="right" valign="top">wxString&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classParserThread.xhtml#aa0fd2109d3757aa454448ed5ffbc35b5">m_LastToken</a></td></tr>
<tr class="separator:aa0fd2109d3757aa454448ed5ffbc35b5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a12f6ad0e78e4cc8d914bc7d6e9454863"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structParserThreadOptions.xhtml">ParserThreadOptions</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classParserThread.xhtml#a12f6ad0e78e4cc8d914bc7d6e9454863">m_Options</a></td></tr>
<tr class="separator:a12f6ad0e78e4cc8d914bc7d6e9454863"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac2cfec245d5d63859fa4435e8c7f9cb2"><td class="memItemLeft" align="right" valign="top">std::queue&lt; wxString &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classParserThread.xhtml#ac2cfec245d5d63859fa4435e8c7f9cb2">m_EncounteredNamespaces</a></td></tr>
<tr class="separator:ac2cfec245d5d63859fa4435e8c7f9cb2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aee2522718b35962d760275129a503b5f"><td class="memItemLeft" align="right" valign="top">std::queue&lt; wxString &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classParserThread.xhtml#aee2522718b35962d760275129a503b5f">m_EncounteredTypeNamespaces</a></td></tr>
<tr class="separator:aee2522718b35962d760275129a503b5f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a287151a916e18a53f0a155001bc52685"><td class="memItemLeft" align="right" valign="top"><a class="el" href="token_8h.xhtml#a10e4417d2285abddb9d4c2e97cddcec4">TokenIdxSet</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classParserThread.xhtml#a287151a916e18a53f0a155001bc52685">m_UsedNamespacesIds</a></td></tr>
<tr class="separator:a287151a916e18a53f0a155001bc52685"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af14ba3b010d6ba1988b7c37f395cca0e"><td class="memItemLeft" align="right" valign="top">wxString&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classParserThread.xhtml#af14ba3b010d6ba1988b7c37f395cca0e">m_LastUnnamedTokenName</a></td></tr>
<tr class="separator:af14ba3b010d6ba1988b7c37f395cca0e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a723230e744d109f4881b31b3eb183fe7"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classParserThread.xhtml#a723230e744d109f4881b31b3eb183fe7">m_ParsingTypedef</a></td></tr>
<tr class="separator:a723230e744d109f4881b31b3eb183fe7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3a0e6a3565eec243026e95e2003702fd"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classParserThread.xhtml#a3a0e6a3565eec243026e95e2003702fd">m_IsBuffer</a></td></tr>
<tr class="separator:a3a0e6a3565eec243026e95e2003702fd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a93dabef3412255dc18b01b6febe14351"><td class="memItemLeft" align="right" valign="top">wxString&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classParserThread.xhtml#a93dabef3412255dc18b01b6febe14351">m_Buffer</a></td></tr>
<tr class="separator:a93dabef3412255dc18b01b6febe14351"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9dc59ce4939ad8128201819181b7dc87"><td class="memItemLeft" align="right" valign="top">wxString&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classParserThread.xhtml#a9dc59ce4939ad8128201819181b7dc87">m_PointerOrRef</a></td></tr>
<tr class="separator:a9dc59ce4939ad8128201819181b7dc87"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1f6ab822b2b9d583a2a54e0d9f6352d6"><td class="memItemLeft" align="right" valign="top">wxString&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classParserThread.xhtml#a1f6ab822b2b9d583a2a54e0d9f6352d6">m_TemplateArgument</a></td></tr>
<tr class="separator:a1f6ab822b2b9d583a2a54e0d9f6352d6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a53d1161f115003c2a071ed8af42e72b4"><td class="memItemLeft" align="right" valign="top">size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classParserThread.xhtml#a53d1161f115003c2a071ed8af42e72b4">m_StructUnionUnnamedCount</a></td></tr>
<tr class="separator:a53d1161f115003c2a071ed8af42e72b4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a385d1c73705a0df9412dc501eb7d683a"><td class="memItemLeft" align="right" valign="top">size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classParserThread.xhtml#a385d1c73705a0df9412dc501eb7d683a">m_EnumUnnamedCount</a></td></tr>
<tr class="separator:a385d1c73705a0df9412dc501eb7d683a"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>A parser threaded task, which can be assigned to the thread task pool, and run there. </p>
<p>This class represents a worker threaded task for the Code Completion plug-in, the main task is doing the syntax analysis and add every token to the token tree. The <a class="el" href="classToken.xhtml">Token</a> tree (sometimes, we call it <a class="el" href="classTokenTree.xhtml">TokenTree</a> ) is a Patricia tree structure, more details can be seen in <a class="el" href="token_8h.xhtml">token.h</a> and <a class="el" href="token_8cpp.xhtml">token.cpp</a>. The buffer can either be loaded from a local file or directly used of a wxString. </p>
</div><h2 class="groupheader">Member Enumeration Documentation</h2>
<a class="anchor" id="a3eed219f8132be0962c7ed13d5ee46ad"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="classParserThread.xhtml#a3eed219f8132be0962c7ed13d5ee46ad">ParserThread::EClassType</a></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>specify which "class like type" we are handling: struct or class or union </p>
<table class="fieldtable">
<tr><th colspan="2">Enumerator</th></tr><tr><td class="fieldname"><a class="anchor" id="a3eed219f8132be0962c7ed13d5ee46adaa86fb31f67d0c681cbcfd65d85c3b2d2"></a>ctStructure&#160;</td><td class="fielddoc">
</td></tr>
<tr><td class="fieldname"><a class="anchor" id="a3eed219f8132be0962c7ed13d5ee46adad19f6ddcd06b23fb48e55ce9f2322515"></a>ctClass&#160;</td><td class="fielddoc">
</td></tr>
<tr><td class="fieldname"><a class="anchor" id="a3eed219f8132be0962c7ed13d5ee46ada8d0039c683a935d81d52e6edcbe4fa2c"></a>ctUnion&#160;</td><td class="fielddoc">
</td></tr>
</table>

</div>
</div>
<h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="aa0954aedee321fdedc4e49ca4c75482c"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">ParserThread::ParserThread </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classParserBase.xhtml">ParserBase</a> *&#160;</td>
          <td class="paramname"><em>parent</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const wxString &amp;&#160;</td>
          <td class="paramname"><em>bufferOrFilename</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>isLocal</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structParserThreadOptions.xhtml">ParserThreadOptions</a> &amp;&#160;</td>
          <td class="paramname"><em>parserThreadOptions</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classTokenTree.xhtml">TokenTree</a> *&#160;</td>
          <td class="paramname"><em>tokenTree</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p><a class="el" href="classParserThread.xhtml" title="A parser threaded task, which can be assigned to the thread task pool, and run there. ">ParserThread</a> constructor. </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">parent</td><td>the parent <a class="el" href="classParser.xhtml" title="Parser class holds all the tokens of a C::B project. ">Parser</a> object which contain the token tree. </td></tr>
    <tr><td class="paramname">bufferOrFilename</td><td>if isLocal is true, it's the filename to open, otherwise it is a wxString already in memory. </td></tr>
    <tr><td class="paramname">isLocal</td><td>determine whether this is a file in local disk or already in memory. </td></tr>
    <tr><td class="paramname">parserThreadOptions</td><td>parser thread options, see <a class="el" href="structParserThreadOptions.xhtml">ParserThreadOptions</a> Class for details. </td></tr>
    <tr><td class="paramname">tokenTree</td><td>it is the tree structure holding all the tokens, <a class="el" href="classParserThread.xhtml" title="A parser threaded task, which can be assigned to the thread task pool, and run there. ">ParserThread</a> will add every token when it parsed. </td></tr>
  </table>
  </dd>
</dl>

<p>References <a class="el" href="cbexception_8h.xhtml#aeec64d86b96037e2ed72a0cde22f9c6f">cbThrow</a>, <a class="el" href="classParserThread.xhtml#a873fc088c4c8373ac41b407d65885902">m_Tokenizer</a>, <a class="el" href="classParserThread.xhtml#ac98620ec8d07c3515805f59fabd84762">m_TokenTree</a>, <a class="el" href="classTokenizer.xhtml#ab2d02ca538bc1f189147da232ca3193d">Tokenizer::SetTokenizerOption()</a>, <a class="el" href="structParserThreadOptions.xhtml#a77b85fbad99b2ea8fe8ff03ec239f343">ParserThreadOptions::storeDocumentation</a>, and <a class="el" href="structParserThreadOptions.xhtml#a2dfae93949fc45b9dd32d54df35390d2">ParserThreadOptions::wantPreprocessor</a>.</p>

</div>
</div>
<a class="anchor" id="a3162055a66112bef67ca7ac94a01a077"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">ParserThread::~ParserThread </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p><a class="el" href="classParserThread.xhtml" title="A parser threaded task, which can be assigned to the thread task pool, and run there. ">ParserThread</a> destructor. </p>

<p>References <a class="el" href="structParserThreadOptions.xhtml#a5f75bb53f1c0236df8949ef181c3a580">ParserThreadOptions::loader</a>, <a class="el" href="classParserThread.xhtml#a12f6ad0e78e4cc8d914bc7d6e9454863">m_Options</a>, and <a class="el" href="classLoaderBase.xhtml#a7a8153eac3b9926d92890b739a8500f3">LoaderBase::Sync()</a>.</p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a class="anchor" id="a997e91f1cbbf64ef9f8220e97dd7a240"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool ParserThread::CalcEnumExpression </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classToken.xhtml">Token</a> *&#160;</td>
          <td class="paramname"><em>tokenParent</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">long &amp;&#160;</td>
          <td class="paramname"><em>result</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">wxString &amp;&#160;</td>
          <td class="paramname"><em>peek</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>calculate the value assigned to enumerator </p>

<p>References <a class="el" href="classExpression.xhtml#aa306d6b8aa85d8aace16fa1ca2f3982c">Expression::AddToInfixExpression()</a>, <a class="el" href="classTokenTree.xhtml#a27fc4ea2842b026514e7b7f92a5e578e">TokenTree::at()</a>, <a class="el" href="classExpression.xhtml#a32086003bded432c02f80b8a4c5e80a4">Expression::CalcPostfix()</a>, <a class="el" href="namespaceParserConsts.xhtml#ab87f8f74e3708d33dd53e26a5f5d46d7">ParserConsts::clbrace()</a>, <a class="el" href="classExpression.xhtml#aed986b1f8aad5fe9b52359c419329f51">Expression::Clear()</a>, <a class="el" href="namespaceParserConsts.xhtml#a92e7853fd29d63c18fed66e6dc73698f">ParserConsts::comma()</a>, <a class="el" href="namespaceParserConsts.xhtml#a7a334528c1f6318534284190c9cc1e01">ParserConsts::commaclbrace()</a>, <a class="el" href="classExpression.xhtml#abd5d6655e417fd17da55637b3d6a7c59">Expression::ConvertInfixToPostfix()</a>, <a class="el" href="namespaceParserConsts.xhtml#a59b23e0ca2ff0bf15d9fb263a2f6386c">ParserConsts::dcolon()</a>, <a class="el" href="classExpression.xhtml#a43747eeaeb1b0fbd44cd45848fff73b5">Expression::GetResult()</a>, <a class="el" href="classTokenizer.xhtml#a60cb0bbabbc5c926ae8d8c2cd1dcdd50">Tokenizer::GetState()</a>, <a class="el" href="classExpression.xhtml#ae2f6ceebd80fd2a792d0ae0d840c2af7">Expression::GetStatus()</a>, <a class="el" href="classTokenizer.xhtml#ac7addae7ad10df1c1550739eaf786d89">Tokenizer::GetToken()</a>, <a class="el" href="parserthread_8cpp.xhtml#af50a854374d3749ee0d47aa3a18e6ae5">IS_ALIVE</a>, <a class="el" href="classToken.xhtml#a083cc36fabdd1fe73c8887314594c240">Token::m_Args</a>, <a class="el" href="classToken.xhtml#a1b939df520f020469a4023c9e121040f">Token::m_FullType</a>, <a class="el" href="classToken.xhtml#ad3a46f07f6d3d8851188695914a79907">Token::m_Index</a>, <a class="el" href="classToken.xhtml#a66d4391491a9244d9c0e060045d9cdee">Token::m_Name</a>, <a class="el" href="classParserThread.xhtml#a873fc088c4c8373ac41b407d65885902">m_Tokenizer</a>, <a class="el" href="classParserThread.xhtml#ac98620ec8d07c3515805f59fabd84762">m_TokenTree</a>, <a class="el" href="classTokenizer.xhtml#ac929769563e5b389e6444568d06eb6ef">Tokenizer::ReplaceBufferText()</a>, <a class="el" href="classTokenizer.xhtml#a1586b3f6ef6979c9938f1205a9749e47">Tokenizer::ReplaceMacroUsage()</a>, <a class="el" href="classTokenizer.xhtml#a0d9b0da5d3c5a5a82772fa181687deb3">Tokenizer::SetState()</a>, <a class="el" href="classParserThread.xhtml#a3324c3f8b45443f087071a758676134a">SkipToOneOfChars()</a>, <a class="el" href="token_8h.xhtml#a7a47dce04185ce6008048622cc792f25af243c38b30bb76a5cb385c5398edf629">tkEnumerator</a>, <a class="el" href="token_8h.xhtml#a7a47dce04185ce6008048622cc792f25aa0ca06d013acd15e8fd2be8cb57c2f20">tkMacroDef</a>, <a class="el" href="classTokenTree.xhtml#a17bd02412b63df67ac246f89c4ad7997">TokenTree::TokenExists()</a>, <a class="el" href="tokenizer_8h.xhtml#a5b1175f256359a25a7374d4ab1e5f845a80da3efdca4e1162abce8315798a8791">tsReadRawExpression</a>, <a class="el" href="namespaceParserConsts.xhtml#a15dd62576c69e2e47962beb590b6089a">ParserConsts::underscore_chr()</a>, and <a class="el" href="classTokenizer.xhtml#ac7f992387098dd3a486a9c994c9d5d7f">Tokenizer::UngetToken()</a>.</p>

<p>Referenced by <a class="el" href="classParserThread.xhtml#a4a9c62b81b02895349a1633ff744e8f7">HandleEnum()</a>.</p>

</div>
</div>
<a class="anchor" id="ae1def46bdb504975217819bb1049d9fd"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classToken.xhtml">Token</a> * ParserThread::DoAddToken </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="token_8h.xhtml#a7a47dce04185ce6008048622cc792f25">TokenKind</a>&#160;</td>
          <td class="paramname"><em>kind</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const wxString &amp;&#160;</td>
          <td class="paramname"><em>name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>line</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>implLineStart</em> = <code>0</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>implLineEnd</em> = <code>0</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const wxString &amp;&#160;</td>
          <td class="paramname"><em>args</em> = <code>wxEmptyString</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>isOperator</em> = <code>false</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>isImpl</em> = <code>false</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>add one token to the token tree </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">kind</td><td><a class="el" href="classToken.xhtml">Token</a> type, see  Emun for more details </td></tr>
    <tr><td class="paramname">name</td><td><a class="el" href="classToken.xhtml">Token</a> name, this is the key string to be searched in the token tree </td></tr>
    <tr><td class="paramname">line</td><td>line number of the source file where the current <a class="el" href="classToken.xhtml">Token</a> locates </td></tr>
    <tr><td class="paramname">implLineStart</td><td>if this is a function implementation, it is the start of function body </td></tr>
    <tr><td class="paramname">implLineEnd</td><td>like the one above, it is the end line of the function implementation body </td></tr>
    <tr><td class="paramname">args</td><td>if the token type is a function, this is the function arguments </td></tr>
    <tr><td class="paramname">isOperator</td><td>bool variable to determine an operator override function or not </td></tr>
    <tr><td class="paramname">isTmpl</td><td>bool variable to determine it is a function declaration or implementation </td></tr>
  </table>
  </dd>
</dl>

<p>References <a class="el" href="classToken.xhtml#a37e1f41c1d2d0e6ac5bfaa0c0c877b57">Token::AddChild()</a>, <a class="el" href="parserthread_8cpp.xhtml#aa2cb37edeef48f2b33f92f0e43ed34e5">ADDTOKEN</a>, <a class="el" href="classTokenTree.xhtml#a27fc4ea2842b026514e7b7f92a5e578e">TokenTree::at()</a>, <a class="el" href="namespaceParserConsts.xhtml#a59b23e0ca2ff0bf15d9fb263a2f6386c">ParserConsts::dcolon()</a>, <a class="el" href="classParserThread.xhtml#a1fa2f9d5e4348a8347e82cb563fc4074">FindTokenFromQueue()</a>, <a class="el" href="classParserThread.xhtml#a3f66c73b0b5c2481f09ee4b6f6a18f11">GetBaseArgs()</a>, <a class="el" href="classParserThread.xhtml#a17fc94b564d71faf3a3b1ccb2708e06a">GetTokenBaseType()</a>, <a class="el" href="classToken.xhtml#a9d00b5c2951b1e718688fb22cafdff0a">Token::GetTokenKindString()</a>, <a class="el" href="classTokenTree.xhtml#ab1e59a8b28ca963c2f3b0adb26d6becc">TokenTree::insert()</a>, <a class="el" href="classTokenTree.xhtml#ab41ac5df0ee210a407d6b7d0d1f01488">TokenTree::InsertTokenBelongToFile()</a>, <a class="el" href="structParserThreadOptions.xhtml#aa85e16c723b01ea2fbe5aacfe2b1cc3e">ParserThreadOptions::isTemp</a>, <a class="el" href="classToken.xhtml#a083cc36fabdd1fe73c8887314594c240">Token::m_Args</a>, <a class="el" href="classToken.xhtml#a85c2c92a592734797b057073e4d82b0e">Token::m_BaseArgs</a>, <a class="el" href="classToken.xhtml#ad993bc78fb9aab6105daca3c104d7b5c">Token::m_BaseType</a>, <a class="el" href="classParserThread.xhtml#ac2cfec245d5d63859fa4435e8c7f9cb2">m_EncounteredNamespaces</a>, <a class="el" href="classParserThread.xhtml#aee2522718b35962d760275129a503b5f">m_EncounteredTypeNamespaces</a>, <a class="el" href="classToken.xhtml#a7a9c292eb8e9e4028e26c9befb648657">Token::m_FileIdx</a>, <a class="el" href="classParserThread.xhtml#a48ca1fbcfd78c24fab7f443ee5769e32">m_FileIdx</a>, <a class="el" href="classToken.xhtml#a1b939df520f020469a4023c9e121040f">Token::m_FullType</a>, <a class="el" href="classToken.xhtml#ab01f001b0ff015f374c3631aba65bd57">Token::m_ImplFileIdx</a>, <a class="el" href="classToken.xhtml#a8ae34ce001ad24cd7e1d761be8feb61a">Token::m_ImplLine</a>, <a class="el" href="classToken.xhtml#a49474c5087079ad605f493b5bdf323d4">Token::m_ImplLineEnd</a>, <a class="el" href="classToken.xhtml#aefee5e6bc190532d7df5ef5c71c27928">Token::m_ImplLineStart</a>, <a class="el" href="classToken.xhtml#ad3a46f07f6d3d8851188695914a79907">Token::m_Index</a>, <a class="el" href="classToken.xhtml#a3f743663b1b2f51ddbb0fd8d846478f7">Token::m_IsLocal</a>, <a class="el" href="classParserThread.xhtml#a682f61a3eedc9c4bef77ba315cf31ed6">m_IsLocal</a>, <a class="el" href="classToken.xhtml#a817f77f62e9a1fa23035e8209cfdc0ba">Token::m_IsOperator</a>, <a class="el" href="classToken.xhtml#a29c336e8b9c40df3fbdd71df626269b4">Token::m_IsTemp</a>, <a class="el" href="classParserThread.xhtml#a298741b1575002b21418de8b63e37761">m_LastParent</a>, <a class="el" href="classParserThread.xhtml#a8fc104996d43d1273d57bf438f8c9705">m_LastScope</a>, <a class="el" href="classToken.xhtml#aa2df0911a7e7e6597589549f46792dca">Token::m_Line</a>, <a class="el" href="classToken.xhtml#a66d4391491a9244d9c0e060045d9cdee">Token::m_Name</a>, <a class="el" href="classParserThread.xhtml#a12f6ad0e78e4cc8d914bc7d6e9454863">m_Options</a>, <a class="el" href="classToken.xhtml#ace8e68140906dd748fcc64ebf95bc014">Token::m_ParentIndex</a>, <a class="el" href="classParserThread.xhtml#a9dc59ce4939ad8128201819181b7dc87">m_PointerOrRef</a>, <a class="el" href="classToken.xhtml#afb74e3ed595b693bb171d53daf226dc7">Token::m_Scope</a>, <a class="el" href="classParserThread.xhtml#a730cd9ca1c862f4046e9d12e786005c5">m_Str</a>, <a class="el" href="classToken.xhtml#a07aa7faf9dfc48200746529481bbb52c">Token::m_TemplateArgument</a>, <a class="el" href="classParserThread.xhtml#a1f6ab822b2b9d583a2a54e0d9f6352d6">m_TemplateArgument</a>, <a class="el" href="classParserThread.xhtml#a873fc088c4c8373ac41b407d65885902">m_Tokenizer</a>, <a class="el" href="classToken.xhtml#aae52d5bca7a44fcd03345e405ab979b6">Token::m_TokenKind</a>, <a class="el" href="classTokenTree.xhtml#af71b06ef30bb15e22478832a65428e18">TokenTree::m_TokenTicketCount</a>, <a class="el" href="classParserThread.xhtml#ac98620ec8d07c3515805f59fabd84762">m_TokenTree</a>, <a class="el" href="structParserThreadOptions.xhtml#a9ea285f1e27ce6021d4f2a70fb658592">ParserThreadOptions::parentIdxOfBuffer</a>, <a class="el" href="classTokenizer.xhtml#a29fcd3e97359af69875dd7b2fd4c6261">Tokenizer::SetLastTokenIdx()</a>, <a class="el" href="namespaceParserConsts.xhtml#ad6acba72a1e7e06c3a845142eb79813b">ParserConsts::space_chr()</a>, <a class="el" href="namespaceParserConsts.xhtml#a52d3cc3302e763f6507c462d51dd4320">ParserConsts::tilde()</a>, <a class="el" href="token_8h.xhtml#a7a47dce04185ce6008048622cc792f25a7de2d5fd3c37d89d4b68642076038071">tkAnyContainer</a>, <a class="el" href="token_8h.xhtml#a7a47dce04185ce6008048622cc792f25a41b6019cea50c68b09d3aa4e927327aa">tkAnyFunction</a>, <a class="el" href="token_8h.xhtml#a7a47dce04185ce6008048622cc792f25a36d9f3721a93b1c4a60b1d50d0198af2">tkClass</a>, <a class="el" href="token_8h.xhtml#a7a47dce04185ce6008048622cc792f25a40d27978e246bbd62cdee00497bdc5f2">tkConstructor</a>, <a class="el" href="token_8h.xhtml#a7a47dce04185ce6008048622cc792f25ac5aa27a18275a4327ef9fee99f5e43f1">tkDestructor</a>, <a class="el" href="token_8h.xhtml#a7a47dce04185ce6008048622cc792f25ae8e186b68231e5889c97c05a22bde507">tkVariable</a>, <a class="el" href="classParserThread.xhtml#a080e2d03d7ca0bdcb1552d4aa87c4839">TokenExists()</a>, and <a class="el" href="parserthread_8cpp.xhtml#a1c9f8c7ecc64a760dc3ac03706556ea9">TRACE</a>.</p>

<p>Referenced by <a class="el" href="classParserThread.xhtml#a991cc89e41f0fbff132e3f09585ea70d">DoParse()</a>, <a class="el" href="classParserThread.xhtml#ac899b2ea7761e46bb1f0d061f4d54691">HandleClass()</a>, <a class="el" href="classParserThread.xhtml#a2ef3649a1395a1c492f38e6b167582b4">HandleConditionalArguments()</a>, <a class="el" href="classParserThread.xhtml#ab55fd2bae9203888c0178c4df058636c">HandleDefines()</a>, <a class="el" href="classParserThread.xhtml#a4a9c62b81b02895349a1633ff744e8f7">HandleEnum()</a>, <a class="el" href="classParserThread.xhtml#a650a609cbd9745ae8bad1951586a4bfa">HandleForLoopArguments()</a>, <a class="el" href="classParserThread.xhtml#a5815c1b5dc1e6f26b69324f2f1842ee0">HandleFunction()</a>, <a class="el" href="classParserThread.xhtml#a36ab4001b8842ae1bea7452474aa63c3">HandleMacroExpansion()</a>, <a class="el" href="classParserThread.xhtml#a11bacf859a9b5a1a02c161331b0278f4">HandleNamespace()</a>, <a class="el" href="classParserThread.xhtml#aab08606cca9480bc978259ef8afc170d">HandleTypedef()</a>, <a class="el" href="classParserThread.xhtml#ad78eb9574aefe7f580aaa805f10fbe1b">ReadClsNames()</a>, and <a class="el" href="classParserThread.xhtml#ae5961cd32c994fa68fec25baa4ee053a">ReadVarNames()</a>.</p>

</div>
</div>
<a class="anchor" id="a991cc89e41f0fbff132e3f09585ea70d"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void ParserThread::DoParse </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>actually run the syntax analysis </p>

<p>References <a class="el" href="structParserThreadOptions.xhtml#a9a5729a1137fa5301a025023d1f9be0c">ParserThreadOptions::bufferSkipBlocks</a>, <a class="el" href="namespaceParserConsts.xhtml#a29ec520d1735b6a993575fe6a32224a6">ParserConsts::clbrace_chr()</a>, <a class="el" href="namespaceParserConsts.xhtml#a18e895926741e6133c46afc135208a73">ParserConsts::colon()</a>, <a class="el" href="namespaceParserConsts.xhtml#af0920611ff1861ae6d0c2ffe65da8508">ParserConsts::colon_chr()</a>, <a class="el" href="namespaceParserConsts.xhtml#a92e7853fd29d63c18fed66e6dc73698f">ParserConsts::comma()</a>, <a class="el" href="namespaceParserConsts.xhtml#a1a7af32cce7d178751bf32907f09eaa2">ParserConsts::comma_chr()</a>, <a class="el" href="classParserThread.xhtml#a3eed219f8132be0962c7ed13d5ee46adad19f6ddcd06b23fb48e55ce9f2322515">ctClass</a>, <a class="el" href="classParserThread.xhtml#a3eed219f8132be0962c7ed13d5ee46adaa86fb31f67d0c681cbcfd65d85c3b2d2">ctStructure</a>, <a class="el" href="classParserThread.xhtml#a3eed219f8132be0962c7ed13d5ee46ada8d0039c683a935d81d52e6edcbe4fa2c">ctUnion</a>, <a class="el" href="namespaceParserConsts.xhtml#a8700d269b3953883bd7ffc55205f1940">ParserConsts::dash()</a>, <a class="el" href="namespaceParserConsts.xhtml#a886c38ee0d0a3af3ff8916ebabfce594">ParserConsts::dash_chr()</a>, <a class="el" href="namespaceParserConsts.xhtml#a59b23e0ca2ff0bf15d9fb263a2f6386c">ParserConsts::dcolon()</a>, <a class="el" href="classParserThread.xhtml#ae1def46bdb504975217819bb1049d9fd">DoAddToken()</a>, <a class="el" href="namespaceParserConsts.xhtml#a201c38bb6eaa7817fd772d9251524df4">ParserConsts::dot_chr()</a>, <a class="el" href="classParserThread.xhtml#a1fa2f9d5e4348a8347e82cb563fc4074">FindTokenFromQueue()</a>, <a class="el" href="classTokenizer.xhtml#ad7093d8d59e2073b0312fba06465484c">Tokenizer::GetLineNumber()</a>, <a class="el" href="classTokenizer.xhtml#a60cb0bbabbc5c926ae8d8c2cd1dcdd50">Tokenizer::GetState()</a>, <a class="el" href="classParserThread.xhtml#a83a5aafc48794c0b7855cc40c5ccc6cf">GetTemplateArgs()</a>, <a class="el" href="classTokenizer.xhtml#ac7addae7ad10df1c1550739eaf786d89">Tokenizer::GetToken()</a>, <a class="el" href="namespaceParserConsts.xhtml#aa6c9124fd797782aba0cd7ec0ea79264">ParserConsts::gt_chr()</a>, <a class="el" href="classParserThread.xhtml#ac899b2ea7761e46bb1f0d061f4d54691">HandleClass()</a>, <a class="el" href="structParserThreadOptions.xhtml#ac4fdd6de21cf82c09a6820d892e9075d">ParserThreadOptions::handleClasses</a>, <a class="el" href="classParserThread.xhtml#a2ef3649a1395a1c492f38e6b167582b4">HandleConditionalArguments()</a>, <a class="el" href="classParserThread.xhtml#ab55fd2bae9203888c0178c4df058636c">HandleDefines()</a>, <a class="el" href="classParserThread.xhtml#a4a9c62b81b02895349a1633ff744e8f7">HandleEnum()</a>, <a class="el" href="structParserThreadOptions.xhtml#a3c147ee07a4cbb2ee3835bf5f2a3e6df">ParserThreadOptions::handleEnums</a>, <a class="el" href="classParserThread.xhtml#a650a609cbd9745ae8bad1951586a4bfa">HandleForLoopArguments()</a>, <a class="el" href="classParserThread.xhtml#a5815c1b5dc1e6f26b69324f2f1842ee0">HandleFunction()</a>, <a class="el" href="structParserThreadOptions.xhtml#a0695585839ead4e78f50e1c0deb9477e">ParserThreadOptions::handleFunctions</a>, <a class="el" href="classParserThread.xhtml#aa644c4bf5a650801606724f2d4cc90d5">HandleIncludes()</a>, <a class="el" href="classParserThread.xhtml#a36ab4001b8842ae1bea7452474aa63c3">HandleMacroExpansion()</a>, <a class="el" href="classParserThread.xhtml#a11bacf859a9b5a1a02c161331b0278f4">HandleNamespace()</a>, <a class="el" href="classParserThread.xhtml#aab08606cca9480bc978259ef8afc170d">HandleTypedef()</a>, <a class="el" href="structParserThreadOptions.xhtml#ac078703e68459b902be5fc9cb62f0e42">ParserThreadOptions::handleTypedefs</a>, <a class="el" href="classParserThread.xhtml#ae845814e7a52cd585d77065bc3c8d6cb">HandleUndefs()</a>, <a class="el" href="structParserThreadOptions.xhtml#abfdff3dbc2ab00cecf62750833b91139">ParserThreadOptions::handleVars</a>, <a class="el" href="namespaceParserConsts.xhtml#a77f318b27e47063f36a0d8bc7a0f5013">ParserConsts::hash_chr()</a>, <a class="el" href="parserthread_8cpp.xhtml#af50a854374d3749ee0d47aa3a18e6ae5">IS_ALIVE</a>, <a class="el" href="namespaceParserConsts.xhtml#ad106f75f7578584dd475be0a0bb45c00">ParserConsts::kw___asm()</a>, <a class="el" href="namespaceParserConsts.xhtml#a4287e92c3b6c109d0fab1f9964fcf403">ParserConsts::kw___at()</a>, <a class="el" href="namespaceParserConsts.xhtml#ab88212ae5fc0740de9caf388c88be6e4">ParserConsts::kw__C_()</a>, <a class="el" href="namespaceParserConsts.xhtml#a3450ed10444bef45c35642006e843aa6">ParserConsts::kw__CPP_()</a>, <a class="el" href="namespaceParserConsts.xhtml#a3101300f0a4e5f33b95614a5e31acbde">ParserConsts::kw_attribute()</a>, <a class="el" href="namespaceParserConsts.xhtml#a73cef0608897cd546e3dfca73bf922c3">ParserConsts::kw_case()</a>, <a class="el" href="namespaceParserConsts.xhtml#a8c8ba3fc7f97c42d76089aaa420a7e64">ParserConsts::kw_class()</a>, <a class="el" href="namespaceParserConsts.xhtml#a17e7f74502b1cca3e92de90d4a1498a4">ParserConsts::kw_const()</a>, <a class="el" href="namespaceParserConsts.xhtml#a8ac6dac136b28387506e478dddc0dfb6">ParserConsts::kw_declspec()</a>, <a class="el" href="namespaceParserConsts.xhtml#ac3c0ab812e80f9004f34bdf4d01882c2">ParserConsts::kw_define()</a>, <a class="el" href="namespaceParserConsts.xhtml#a4f572890a37c3ae43fec77f74c6a7be2">ParserConsts::kw_delete()</a>, <a class="el" href="namespaceParserConsts.xhtml#a613a536735ec46acc67de3210a9a9e5c">ParserConsts::kw_do()</a>, <a class="el" href="namespaceParserConsts.xhtml#ae1329ef11c8f208105d4069f23ab33d6">ParserConsts::kw_else()</a>, <a class="el" href="namespaceParserConsts.xhtml#af72ca49f5dd792a9b5c83fe786bfef7d">ParserConsts::kw_enum()</a>, <a class="el" href="namespaceParserConsts.xhtml#aab06da3dbc03b76580e5d1cadedf2adf">ParserConsts::kw_extern()</a>, <a class="el" href="namespaceParserConsts.xhtml#a708439af0be32b9c78c74d2d89deaa64">ParserConsts::kw_for()</a>, <a class="el" href="namespaceParserConsts.xhtml#add87c719e531336541da90822920de15">ParserConsts::kw_friend()</a>, <a class="el" href="namespaceParserConsts.xhtml#aa353998ad056baf792f5cc2de20d1c42">ParserConsts::kw_if()</a>, <a class="el" href="namespaceParserConsts.xhtml#a7491ca16d50df8bf614858c2f88509be">ParserConsts::kw_include()</a>, <a class="el" href="namespaceParserConsts.xhtml#ae1641462adfc17e1e356c9723e0ce8ad">ParserConsts::kw_inline()</a>, <a class="el" href="namespaceParserConsts.xhtml#a858f39776866c967be554ef777e217b8">ParserConsts::kw_namespace()</a>, <a class="el" href="namespaceParserConsts.xhtml#a55386533ed3bf2f1120753414e154b77">ParserConsts::kw_noexcept()</a>, <a class="el" href="namespaceParserConsts.xhtml#a3f1e21b6e29741efea6615d886a054b6">ParserConsts::kw_operator()</a>, <a class="el" href="namespaceParserConsts.xhtml#ad8921fcdf05894e27efdb2e1c5d913a5">ParserConsts::kw_private()</a>, <a class="el" href="namespaceParserConsts.xhtml#ae51c0a4c7b0c3692b8b7e42a7fdf2494">ParserConsts::kw_protected()</a>, <a class="el" href="namespaceParserConsts.xhtml#ab5374f3ba50a683eeb59a3980c57841e">ParserConsts::kw_public()</a>, <a class="el" href="namespaceParserConsts.xhtml#a793a0f96d62ed6e0a5128570709c7d36">ParserConsts::kw_return()</a>, <a class="el" href="namespaceParserConsts.xhtml#a642322cdcc610e261521315c787668f1">ParserConsts::kw_static()</a>, <a class="el" href="namespaceParserConsts.xhtml#afb25a8735e39a854f59a703a6f28243c">ParserConsts::kw_struct()</a>, <a class="el" href="namespaceParserConsts.xhtml#a9db503c03514a4f9ce2e3da005cae5d7">ParserConsts::kw_switch()</a>, <a class="el" href="namespaceParserConsts.xhtml#a25ef1e8b13a2b4be1f4495beb9905061">ParserConsts::kw_template()</a>, <a class="el" href="namespaceParserConsts.xhtml#a47a6d1176451a647636895c50fd32bf7">ParserConsts::kw_typedef()</a>, <a class="el" href="namespaceParserConsts.xhtml#aadec07f2e47d082881b935a1cb43bde2">ParserConsts::kw_undef()</a>, <a class="el" href="namespaceParserConsts.xhtml#a1e1f676ee6b6f6f53d1c5980b51e1ec7">ParserConsts::kw_union()</a>, <a class="el" href="namespaceParserConsts.xhtml#a6ade5b96d40e8ce022c6b703c3a77d38">ParserConsts::kw_using()</a>, <a class="el" href="namespaceParserConsts.xhtml#ac89d6f078f3c9af10ad2d29f433ac4a0">ParserConsts::kw_virtual()</a>, <a class="el" href="namespaceParserConsts.xhtml#a22320785eb0c374bdf0169688d7caaa5">ParserConsts::kw_volatile()</a>, <a class="el" href="namespaceParserConsts.xhtml#a0ec9e82c6e82afd2e618f4262e314c7c">ParserConsts::kw_while()</a>, <a class="el" href="namespaceParserConsts.xhtml#adab3309c5f15cf14ab4bf77d0cad71b7">ParserConsts::lt()</a>, <a class="el" href="classToken.xhtml#ae3ff5d967254d3dc7578735b4bcdffac">Token::m_AncestorsString</a>, <a class="el" href="classParserThread.xhtml#ac2cfec245d5d63859fa4435e8c7f9cb2">m_EncounteredNamespaces</a>, <a class="el" href="classParserThread.xhtml#aee2522718b35962d760275129a503b5f">m_EncounteredTypeNamespaces</a>, <a class="el" href="classToken.xhtml#ad3a46f07f6d3d8851188695914a79907">Token::m_Index</a>, <a class="el" href="classParserThread.xhtml#a298741b1575002b21418de8b63e37761">m_LastParent</a>, <a class="el" href="classParserThread.xhtml#a8fc104996d43d1273d57bf438f8c9705">m_LastScope</a>, <a class="el" href="classParserThread.xhtml#aa0fd2109d3757aa454448ed5ffbc35b5">m_LastToken</a>, <a class="el" href="classParserThread.xhtml#af14ba3b010d6ba1988b7c37f395cca0e">m_LastUnnamedTokenName</a>, <a class="el" href="classToken.xhtml#a66d4391491a9244d9c0e060045d9cdee">Token::m_Name</a>, <a class="el" href="classParserThread.xhtml#a12f6ad0e78e4cc8d914bc7d6e9454863">m_Options</a>, <a class="el" href="classParserThread.xhtml#a9dc59ce4939ad8128201819181b7dc87">m_PointerOrRef</a>, <a class="el" href="classParserThread.xhtml#a730cd9ca1c862f4046e9d12e786005c5">m_Str</a>, <a class="el" href="classParserThread.xhtml#a1f6ab822b2b9d583a2a54e0d9f6352d6">m_TemplateArgument</a>, <a class="el" href="classParserThread.xhtml#a873fc088c4c8373ac41b407d65885902">m_Tokenizer</a>, <a class="el" href="classToken.xhtml#aae52d5bca7a44fcd03345e405ab979b6">Token::m_TokenKind</a>, <a class="el" href="classParserThread.xhtml#ac98620ec8d07c3515805f59fabd84762">m_TokenTree</a>, <a class="el" href="classParserThread.xhtml#a287151a916e18a53f0a155001bc52685">m_UsedNamespacesIds</a>, <a class="el" href="classTokenizer.xhtml#a2eca266878979398035defc786898aab">Tokenizer::NotEOF()</a>, <a class="el" href="namespaceParserConsts.xhtml#ae661129bf96eb8f6eb2f29e3f0fab551">ParserConsts::opbrace()</a>, <a class="el" href="namespaceParserConsts.xhtml#a07b2c8e2c4544dcb32e321d89d445b0f">ParserConsts::opbrace_chr()</a>, <a class="el" href="namespaceParserConsts.xhtml#a747c1e9f343af048794d204e2428bd33">ParserConsts::opbracket_chr()</a>, <a class="el" href="classTokenizer.xhtml#a736574152ebabf5ab26241104780c775">Tokenizer::PeekToken()</a>, <a class="el" href="namespaceParserConsts.xhtml#a6bcf5f9abfe18c3cbb61a80fa6012833">ParserConsts::plus_chr()</a>, <a class="el" href="namespaceParserConsts.xhtml#ae062440782c11184e4ef0a89a88d539a">ParserConsts::ptr()</a>, <a class="el" href="namespaceParserConsts.xhtml#a43b7df87954b2bd0bbc06e238a5c342c">ParserConsts::ptr_chr()</a>, <a class="el" href="classParserThread.xhtml#a6de60c378ea1d299684529374634be59">ResolveTemplateArgs()</a>, <a class="el" href="namespaceParserConsts.xhtml#a63a59607efefe61ca2032cf14d299f12">ParserConsts::semicolon()</a>, <a class="el" href="namespaceParserConsts.xhtml#aaf38739f53653988275f086159949592">ParserConsts::semicolon_chr()</a>, <a class="el" href="namespaceParserConsts.xhtml#af8f6800871ba55b516e99da06105b69c">ParserConsts::semicolonclbrace()</a>, <a class="el" href="classTokenizer.xhtml#a0d9b0da5d3c5a5a82772fa181687deb3">Tokenizer::SetState()</a>, <a class="el" href="classParserThread.xhtml#a019c7ff4c9f800ccc583a41699ab5b5e">SkipAngleBraces()</a>, <a class="el" href="classParserThread.xhtml#a65973704432137e051aec1541d3d7236">SkipBlock()</a>, <a class="el" href="classTokenizer.xhtml#ab767d45e38396a43059010e7b2721fea">Tokenizer::SkipToEOL()</a>, <a class="el" href="classParserThread.xhtml#a3324c3f8b45443f087071a758676134a">SkipToOneOfChars()</a>, <a class="el" href="namespaceParserConsts.xhtml#ad6acba72a1e7e06c3a845142eb79813b">ParserConsts::space_chr()</a>, <a class="el" href="token_8h.xhtml#a7a47dce04185ce6008048622cc792f25aa0ca06d013acd15e8fd2be8cb57c2f20">tkMacroDef</a>, <a class="el" href="token_8h.xhtml#a7a47dce04185ce6008048622cc792f25aa38450654b481800ad6cd006ebb0e98a">tkNamespace</a>, <a class="el" href="token_8h.xhtml#a7a47dce04185ce6008048622cc792f25ae8e186b68231e5889c97c05a22bde507">tkVariable</a>, <a class="el" href="classTokenTree.xhtml#a17bd02412b63df67ac246f89c4ad7997">TokenTree::TokenExists()</a>, <a class="el" href="parserthread_8cpp.xhtml#a1c9f8c7ecc64a760dc3ac03706556ea9">TRACE</a>, <a class="el" href="token_8h.xhtml#a51914652d471a4b2e79baaa727cef729a935af98e116660761ab579df64af700c">tsPrivate</a>, <a class="el" href="token_8h.xhtml#a51914652d471a4b2e79baaa727cef729a31cbc986e10cc9a2f3417f3b6d9a4884">tsProtected</a>, <a class="el" href="token_8h.xhtml#a51914652d471a4b2e79baaa727cef729a7cc0bbbfe40c2ce141c7d3c5d8a12f5a">tsPublic</a>, <a class="el" href="tokenizer_8h.xhtml#a5b1175f256359a25a7374d4ab1e5f845ada3140476ec623f378e679cde037b2ce">tsSkipNone</a>, <a class="el" href="tokenizer_8h.xhtml#a5b1175f256359a25a7374d4ab1e5f845ac3caeb8004b72c8bdcad39b685ad0401">tsSkipUnWanted</a>, <a class="el" href="tokenizer_8h.xhtml#a5b1175f256359a25a7374d4ab1e5f845a1dbfb2fca82a45d3615c99c639ad1768">tsTemplateArgument</a>, <a class="el" href="token_8h.xhtml#a51914652d471a4b2e79baaa727cef729aa4ba3943f169a9cb787bb6a275b1c47f">tsUndefined</a>, <a class="el" href="namespaceParserConsts.xhtml#a15dd62576c69e2e47962beb590b6089a">ParserConsts::underscore_chr()</a>, <a class="el" href="classTokenizer.xhtml#ac7f992387098dd3a486a9c994c9d5d7f">Tokenizer::UngetToken()</a>, and <a class="el" href="structParserThreadOptions.xhtml#af74517ab1b1e2c54f2480d2f36f1ede1">ParserThreadOptions::useBuffer</a>.</p>

<p>Referenced by <a class="el" href="classParserThread.xhtml#ac899b2ea7761e46bb1f0d061f4d54691">HandleClass()</a>, <a class="el" href="classParserThread.xhtml#a11bacf859a9b5a1a02c161331b0278f4">HandleNamespace()</a>, and <a class="el" href="classParserThread.xhtml#a87e5624dfc192efb0bba2d69f4be7214">Parse()</a>.</p>

</div>
</div>
<a class="anchor" id="a37f1420aefc6d522030a93283d965515"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int ParserThread::Execute </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">protected</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p><a class="el" href="classParserThread.xhtml#a37f1420aefc6d522030a93283d965515">Execute()</a> is a virtual function derived from <a class="el" href="classcbThreadedTask.xhtml">cbThreadedTask</a> class, we should override it here. In the batch parsing mode, a lot of parser threads were generated and executed concurrently, this often happens when user open a project. Every parserthread task will firstly be added to the thread pool, later called automatically from the thread pool. </p>

<p>Implements <a class="el" href="classcbThreadedTask.xhtml#a94b971f3b6de85bf5bd12a2bdb47f867">cbThreadedTask</a>.</p>

<p>References <a class="el" href="cclogger_8h.xhtml#abeaaa24b840507a2dce16ea2306b7995">CC_LOCKER_TRACK_TT_MTX_LOCK</a>, <a class="el" href="cclogger_8h.xhtml#a12481e66c0dee266f5a45a7ba7565a17">CC_LOCKER_TRACK_TT_MTX_UNLOCK</a>, <a class="el" href="classParserThread.xhtml#a87e5624dfc192efb0bba2d69f4be7214">Parse()</a>, and <a class="el" href="tokentree_8cpp.xhtml#a9280aad984604fac23895e7805450781">s_TokenTreeMutex</a>.</p>

</div>
</div>
<a class="anchor" id="a1fa2f9d5e4348a8347e82cb563fc4074"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classToken.xhtml">Token</a> * ParserThread::FindTokenFromQueue </td>
          <td>(</td>
          <td class="paramtype">std::queue&lt; wxString &gt; &amp;&#160;</td>
          <td class="paramname"><em>q</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classToken.xhtml">Token</a> *&#160;</td>
          <td class="paramname"><em>parent</em> = <code>0</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>createIfNotExist</em> = <code>false</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classToken.xhtml">Token</a> *&#160;</td>
          <td class="paramname"><em>parentIfCreated</em> = <code>0</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>TODO comment here? </p>

<p>References <a class="el" href="classToken.xhtml#a37e1f41c1d2d0e6ac5bfaa0c0c877b57">Token::AddChild()</a>, <a class="el" href="classTokenTree.xhtml#ab1e59a8b28ca963c2f3b0adb26d6becc">TokenTree::insert()</a>, <a class="el" href="classParserThread.xhtml#a48ca1fbcfd78c24fab7f443ee5769e32">m_FileIdx</a>, <a class="el" href="classToken.xhtml#ad3a46f07f6d3d8851188695914a79907">Token::m_Index</a>, <a class="el" href="classToken.xhtml#a3f743663b1b2f51ddbb0fd8d846478f7">Token::m_IsLocal</a>, <a class="el" href="classParserThread.xhtml#a682f61a3eedc9c4bef77ba315cf31ed6">m_IsLocal</a>, <a class="el" href="classToken.xhtml#a66d4391491a9244d9c0e060045d9cdee">Token::m_Name</a>, <a class="el" href="classToken.xhtml#ace8e68140906dd748fcc64ebf95bc014">Token::m_ParentIndex</a>, <a class="el" href="classToken.xhtml#aae52d5bca7a44fcd03345e405ab979b6">Token::m_TokenKind</a>, <a class="el" href="classTokenTree.xhtml#af71b06ef30bb15e22478832a65428e18">TokenTree::m_TokenTicketCount</a>, <a class="el" href="classParserThread.xhtml#ac98620ec8d07c3515805f59fabd84762">m_TokenTree</a>, <a class="el" href="token_8h.xhtml#a7a47dce04185ce6008048622cc792f25a36d9f3721a93b1c4a60b1d50d0198af2">tkClass</a>, <a class="el" href="token_8h.xhtml#a7a47dce04185ce6008048622cc792f25aa38450654b481800ad6cd006ebb0e98a">tkNamespace</a>, <a class="el" href="classParserThread.xhtml#a080e2d03d7ca0bdcb1552d4aa87c4839">TokenExists()</a>, and <a class="el" href="parserthread_8cpp.xhtml#a1c9f8c7ecc64a760dc3ac03706556ea9">TRACE</a>.</p>

<p>Referenced by <a class="el" href="classParserThread.xhtml#ae1def46bdb504975217819bb1049d9fd">DoAddToken()</a>, <a class="el" href="classParserThread.xhtml#a991cc89e41f0fbff132e3f09585ea70d">DoParse()</a>, and <a class="el" href="classParserThread.xhtml#a5815c1b5dc1e6f26b69324f2f1842ee0">HandleFunction()</a>.</p>

</div>
</div>
<a class="anchor" id="a3f66c73b0b5c2481f09ee4b6f6a18f11"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool ParserThread::GetBaseArgs </td>
          <td>(</td>
          <td class="paramtype">const wxString &amp;&#160;</td>
          <td class="paramname"><em>args</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">wxString &amp;&#160;</td>
          <td class="paramname"><em>baseArgs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Converts a full argument list (including variable names) to argument types only and strips spaces. eg: if the argument list is like "(const TheClass* the_class, int my_int)" then, the returned argument list is "(const TheClass*,int)" </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">args</td><td>Full argument list </td></tr>
    <tr><td class="paramname">baseArgs</td><td>argument types only </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>if failed, will return false, so, it must be a variable </dd></dl>

<p>References <a class="el" href="namespaceParserConsts.xhtml#a7b8f82ed463d6568b2139c600ffe0baf">ParserConsts::clarray_chr()</a>, <a class="el" href="namespaceParserConsts.xhtml#a6d070677a5e851a32d57235186f6494d">ParserConsts::clbracket_chr()</a>, <a class="el" href="namespaceParserConsts.xhtml#af0920611ff1861ae6d0c2ffe65da8508">ParserConsts::colon_chr()</a>, <a class="el" href="namespaceParserConsts.xhtml#a1a7af32cce7d178751bf32907f09eaa2">ParserConsts::comma_chr()</a>, <a class="el" href="namespaceParserConsts.xhtml#a9905dc05288cbe9599743005bc891305">ParserConsts::eol_chr()</a>, <a class="el" href="namespaceParserConsts.xhtml#aa6c9124fd797782aba0cd7ec0ea79264">ParserConsts::gt_chr()</a>, <a class="el" href="namespaceParserConsts.xhtml#a17e7f74502b1cca3e92de90d4a1498a4">ParserConsts::kw_const()</a>, <a class="el" href="namespaceParserConsts.xhtml#af72ca49f5dd792a9b5c83fe786bfef7d">ParserConsts::kw_enum()</a>, <a class="el" href="namespaceParserConsts.xhtml#a22320785eb0c374bdf0169688d7caaa5">ParserConsts::kw_volatile()</a>, <a class="el" href="namespaceParserConsts.xhtml#a55e506cc5b0c01e1d07fbcec4d5df1c5">ParserConsts::lt_chr()</a>, <a class="el" href="namespaceParserConsts.xhtml#aed1505247335b84bb95f2ba6d198099c">ParserConsts::null()</a>, <a class="el" href="namespaceParserConsts.xhtml#a0fa9cf0285856846de260022530ec2f6">ParserConsts::oparray_chr()</a>, <a class="el" href="namespaceParserConsts.xhtml#a747c1e9f343af048794d204e2428bd33">ParserConsts::opbracket_chr()</a>, <a class="el" href="namespaceParserConsts.xhtml#ae062440782c11184e4ef0a89a88d539a">ParserConsts::ptr()</a>, <a class="el" href="namespaceParserConsts.xhtml#a43b7df87954b2bd0bbc06e238a5c342c">ParserConsts::ptr_chr()</a>, <a class="el" href="namespaceParserConsts.xhtml#a024d267c7f0f9cd1500551d4cd70e383">ParserConsts::ref_chr()</a>, <a class="el" href="namespaceParserConsts.xhtml#ad6acba72a1e7e06c3a845142eb79813b">ParserConsts::space_chr()</a>, and <a class="el" href="parserthread_8cpp.xhtml#a1c9f8c7ecc64a760dc3ac03706556ea9">TRACE</a>.</p>

<p>Referenced by <a class="el" href="classParserThread.xhtml#ae1def46bdb504975217819bb1049d9fd">DoAddToken()</a>.</p>

</div>
</div>
<a class="anchor" id="a332fb74d8691e77680603e7d90af7029"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">wxString ParserThread::GetClassFromMacro </td>
          <td>(</td>
          <td class="paramtype">const wxString &amp;&#160;</td>
          <td class="paramname"><em>macro</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Get the class name from a macro </p>

<p>References <a class="el" href="classParserThread.xhtml#a234c534f952d9c654e5969fe134b23d9">GetRealTypeIfTokenIsMacro()</a>, <a class="el" href="classToken.xhtml#a66d4391491a9244d9c0e060045d9cdee">Token::m_Name</a>, <a class="el" href="token_8h.xhtml#a7a47dce04185ce6008048622cc792f25a36d9f3721a93b1c4a60b1d50d0198af2">tkClass</a>, <a class="el" href="classParserThread.xhtml#a080e2d03d7ca0bdcb1552d4aa87c4839">TokenExists()</a>, and <a class="el" href="parserthread_8cpp.xhtml#a1c9f8c7ecc64a760dc3ac03706556ea9">TRACE</a>.</p>

<p>Referenced by <a class="el" href="classParserThread.xhtml#ac899b2ea7761e46bb1f0d061f4d54691">HandleClass()</a>.</p>

</div>
</div>
<a class="anchor" id="adf623c35632e726ab847d300a6a3decc"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">wxString ParserThread::GetFilename </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>References <a class="el" href="classParserThread.xhtml#a93dabef3412255dc18b01b6febe14351">m_Buffer</a>.</p>

</div>
</div>
<a class="anchor" id="a234c534f952d9c654e5969fe134b23d9"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool ParserThread::GetRealTypeIfTokenIsMacro </td>
          <td>(</td>
          <td class="paramtype">wxString &amp;&#160;</td>
          <td class="paramname"><em>tokenName</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Get the macro's type, if the token is a macro, and saved the type in tokenName </p>

<p>References <a class="el" href="parserthread_8cpp.xhtml#af50a854374d3749ee0d47aa3a18e6ae5">IS_ALIVE</a>, <a class="el" href="classToken.xhtml#a1b939df520f020469a4023c9e121040f">Token::m_FullType</a>, <a class="el" href="token_8h.xhtml#a7a47dce04185ce6008048622cc792f25aa0ca06d013acd15e8fd2be8cb57c2f20">tkMacroDef</a>, <a class="el" href="classParserThread.xhtml#a080e2d03d7ca0bdcb1552d4aa87c4839">TokenExists()</a>, <a class="el" href="parserthread_8cpp.xhtml#a1c9f8c7ecc64a760dc3ac03706556ea9">TRACE</a>, and <a class="el" href="namespaceParserConsts.xhtml#a15dd62576c69e2e47962beb590b6089a">ParserConsts::underscore_chr()</a>.</p>

<p>Referenced by <a class="el" href="classParserThread.xhtml#a332fb74d8691e77680603e7d90af7029">GetClassFromMacro()</a>, and <a class="el" href="classParserThread.xhtml#ac899b2ea7761e46bb1f0d061f4d54691">HandleClass()</a>.</p>

</div>
</div>
<a class="anchor" id="adba07ce4471e49fd269aa612af53fdff"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">wxArrayString ParserThread::GetTemplateArgArray </td>
          <td>(</td>
          <td class="paramtype">const wxString &amp;&#160;</td>
          <td class="paramname"><em>templateArgs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>remove_gt_lt</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>add_last</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>normally the template argument is all in a wxString, this function just split them to a wxArrayString, each element is an actual argument. </p>

<p>References <a class="el" href="namespaceParserConsts.xhtml#a1a7af32cce7d178751bf32907f09eaa2">ParserConsts::comma_chr()</a>, <a class="el" href="namespaceParserConsts.xhtml#aa6c9124fd797782aba0cd7ec0ea79264">ParserConsts::gt_chr()</a>, <a class="el" href="namespaceParserConsts.xhtml#a55e506cc5b0c01e1d07fbcec4d5df1c5">ParserConsts::lt_chr()</a>, and <a class="el" href="namespaceParserConsts.xhtml#ad6acba72a1e7e06c3a845142eb79813b">ParserConsts::space_chr()</a>.</p>

<p>Referenced by <a class="el" href="classParserThread.xhtml#aaa1d625d691f92d6b5a70932c1418441">SplitTemplateActualParameters()</a>, and <a class="el" href="classParserThread.xhtml#a063f606371064cbf33004832013999bb">SplitTemplateFormalParameters()</a>.</p>

</div>
</div>
<a class="anchor" id="a83a5aafc48794c0b7855cc40c5ccc6cf"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void ParserThread::GetTemplateArgs </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Read the &lt;xxxx=yyy, zzz&gt; , and store the value in m_TemplateArgs </p>

<p>References <a class="el" href="classTokenizer.xhtml#a60cb0bbabbc5c926ae8d8c2cd1dcdd50">Tokenizer::GetState()</a>, <a class="el" href="classTokenizer.xhtml#ac7addae7ad10df1c1550739eaf786d89">Tokenizer::GetToken()</a>, <a class="el" href="namespaceParserConsts.xhtml#a633f9f7eb6888a6cf2cfe68613c70118">ParserConsts::gt()</a>, <a class="el" href="parserthread_8cpp.xhtml#af50a854374d3749ee0d47aa3a18e6ae5">IS_ALIVE</a>, <a class="el" href="namespaceParserConsts.xhtml#adab3309c5f15cf14ab4bf77d0cad71b7">ParserConsts::lt()</a>, <a class="el" href="classParserThread.xhtml#a1f6ab822b2b9d583a2a54e0d9f6352d6">m_TemplateArgument</a>, <a class="el" href="classParserThread.xhtml#a873fc088c4c8373ac41b407d65885902">m_Tokenizer</a>, <a class="el" href="namespaceParserConsts.xhtml#a63a59607efefe61ca2032cf14d299f12">ParserConsts::semicolon()</a>, <a class="el" href="classTokenizer.xhtml#a0d9b0da5d3c5a5a82772fa181687deb3">Tokenizer::SetState()</a>, <a class="el" href="tokenizer_8h.xhtml#a5b1175f256359a25a7374d4ab1e5f845ada3140476ec623f378e679cde037b2ce">tsSkipNone</a>, and <a class="el" href="classTokenizer.xhtml#ac7f992387098dd3a486a9c994c9d5d7f">Tokenizer::UngetToken()</a>.</p>

<p>Referenced by <a class="el" href="classParserThread.xhtml#a991cc89e41f0fbff132e3f09585ea70d">DoParse()</a>, <a class="el" href="classParserThread.xhtml#ac899b2ea7761e46bb1f0d061f4d54691">HandleClass()</a>, and <a class="el" href="classParserThread.xhtml#aab08606cca9480bc978259ef8afc170d">HandleTypedef()</a>.</p>

</div>
</div>
<a class="anchor" id="a17fc94b564d71faf3a3b1ccb2708e06a"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">wxString ParserThread::GetTokenBaseType </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>return the actual token's base type. e.g.: if the token type string is: "const wxString &amp;" then, the actual token base type is : "wxString" </p>

<p>References <a class="el" href="namespaceParserConsts.xhtml#af0920611ff1861ae6d0c2ffe65da8508">ParserConsts::colon_chr()</a>, <a class="el" href="namespaceParserConsts.xhtml#a17e7f74502b1cca3e92de90d4a1498a4">ParserConsts::kw_const()</a>, <a class="el" href="classParserThread.xhtml#a730cd9ca1c862f4046e9d12e786005c5">m_Str</a>, <a class="el" href="namespaceParserConsts.xhtml#a43b7df87954b2bd0bbc06e238a5c342c">ParserConsts::ptr_chr()</a>, <a class="el" href="namespaceParserConsts.xhtml#a024d267c7f0f9cd1500551d4cd70e383">ParserConsts::ref_chr()</a>, <a class="el" href="namespaceParserConsts.xhtml#ad6acba72a1e7e06c3a845142eb79813b">ParserConsts::space_chr()</a>, <a class="el" href="parserthread_8cpp.xhtml#a1c9f8c7ecc64a760dc3ac03706556ea9">TRACE</a>, and <a class="el" href="namespaceParserConsts.xhtml#a15dd62576c69e2e47962beb590b6089a">ParserConsts::underscore_chr()</a>.</p>

<p>Referenced by <a class="el" href="classParserThread.xhtml#ae1def46bdb504975217819bb1049d9fd">DoAddToken()</a>.</p>

</div>
</div>
<a class="anchor" id="ac899b2ea7761e46bb1f0d061f4d54691"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void ParserThread::HandleClass </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classParserThread.xhtml#a3eed219f8132be0962c7ed13d5ee46ad">EClassType</a>&#160;</td>
          <td class="paramname"><em>ct</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>handle class declaration </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">ct</td><td>specify class like type : struct or enum or class </td></tr>
  </table>
  </dd>
</dl>

<p>References <a class="el" href="namespaceParserConsts.xhtml#a18e895926741e6133c46afc135208a73">ParserConsts::colon()</a>, <a class="el" href="namespaceParserConsts.xhtml#a92e7853fd29d63c18fed66e6dc73698f">ParserConsts::comma()</a>, <a class="el" href="namespaceParserConsts.xhtml#a1a7af32cce7d178751bf32907f09eaa2">ParserConsts::comma_chr()</a>, <a class="el" href="classParserThread.xhtml#a3eed219f8132be0962c7ed13d5ee46adad19f6ddcd06b23fb48e55ce9f2322515">ctClass</a>, <a class="el" href="classParserThread.xhtml#a3eed219f8132be0962c7ed13d5ee46ada8d0039c683a935d81d52e6edcbe4fa2c">ctUnion</a>, <a class="el" href="namespaceParserConsts.xhtml#a59b23e0ca2ff0bf15d9fb263a2f6386c">ParserConsts::dcolon()</a>, <a class="el" href="classParserThread.xhtml#ae1def46bdb504975217819bb1049d9fd">DoAddToken()</a>, <a class="el" href="classParserThread.xhtml#a991cc89e41f0fbff132e3f09585ea70d">DoParse()</a>, <a class="el" href="parserthread_8cpp.xhtml#ae14669083d1e18953bc5f5b1325b6bc1">g_UnnamedSymbol</a>, <a class="el" href="classParserThread.xhtml#a332fb74d8691e77680603e7d90af7029">GetClassFromMacro()</a>, <a class="el" href="classTokenizer.xhtml#ad7093d8d59e2073b0312fba06465484c">Tokenizer::GetLineNumber()</a>, <a class="el" href="classParserThread.xhtml#a234c534f952d9c654e5969fe134b23d9">GetRealTypeIfTokenIsMacro()</a>, <a class="el" href="classTokenizer.xhtml#a60cb0bbabbc5c926ae8d8c2cd1dcdd50">Tokenizer::GetState()</a>, <a class="el" href="globals_8h.xhtml#a4f36e1491f01df12ff1136162fb927cf">GetStringFromArray()</a>, <a class="el" href="classParserThread.xhtml#a83a5aafc48794c0b7855cc40c5ccc6cf">GetTemplateArgs()</a>, <a class="el" href="classTokenizer.xhtml#ac7addae7ad10df1c1550739eaf786d89">Tokenizer::GetToken()</a>, <a class="el" href="namespaceParserConsts.xhtml#a633f9f7eb6888a6cf2cfe68613c70118">ParserConsts::gt()</a>, <a class="el" href="classParserThread.xhtml#a5815c1b5dc1e6f26b69324f2f1842ee0">HandleFunction()</a>, <a class="el" href="structParserThreadOptions.xhtml#abfdff3dbc2ab00cecf62750833b91139">ParserThreadOptions::handleVars</a>, <a class="el" href="parserthread_8cpp.xhtml#af50a854374d3749ee0d47aa3a18e6ae5">IS_ALIVE</a>, <a class="el" href="namespaceParserConsts.xhtml#a3101300f0a4e5f33b95614a5e31acbde">ParserConsts::kw_attribute()</a>, <a class="el" href="namespaceParserConsts.xhtml#a8ac6dac136b28387506e478dddc0dfb6">ParserConsts::kw_declspec()</a>, <a class="el" href="namespaceParserConsts.xhtml#ad8921fcdf05894e27efdb2e1c5d913a5">ParserConsts::kw_private()</a>, <a class="el" href="namespaceParserConsts.xhtml#ae51c0a4c7b0c3692b8b7e42a7fdf2494">ParserConsts::kw_protected()</a>, <a class="el" href="namespaceParserConsts.xhtml#ab5374f3ba50a683eeb59a3980c57841e">ParserConsts::kw_public()</a>, <a class="el" href="namespaceParserConsts.xhtml#adab3309c5f15cf14ab4bf77d0cad71b7">ParserConsts::lt()</a>, <a class="el" href="classToken.xhtml#ae3ff5d967254d3dc7578735b4bcdffac">Token::m_AncestorsString</a>, <a class="el" href="classParserThread.xhtml#a48ca1fbcfd78c24fab7f443ee5769e32">m_FileIdx</a>, <a class="el" href="classToken.xhtml#a8ae34ce001ad24cd7e1d761be8feb61a">Token::m_ImplLine</a>, <a class="el" href="classToken.xhtml#a49474c5087079ad605f493b5bdf323d4">Token::m_ImplLineEnd</a>, <a class="el" href="classToken.xhtml#aefee5e6bc190532d7df5ef5c71c27928">Token::m_ImplLineStart</a>, <a class="el" href="classToken.xhtml#acdc09e733cf2a6342767e714e8f86bc7">Token::m_IsAnonymous</a>, <a class="el" href="classParserThread.xhtml#a298741b1575002b21418de8b63e37761">m_LastParent</a>, <a class="el" href="classParserThread.xhtml#a8fc104996d43d1273d57bf438f8c9705">m_LastScope</a>, <a class="el" href="classParserThread.xhtml#af14ba3b010d6ba1988b7c37f395cca0e">m_LastUnnamedTokenName</a>, <a class="el" href="classToken.xhtml#a66d4391491a9244d9c0e060045d9cdee">Token::m_Name</a>, <a class="el" href="classParserThread.xhtml#a12f6ad0e78e4cc8d914bc7d6e9454863">m_Options</a>, <a class="el" href="classParserThread.xhtml#a723230e744d109f4881b31b3eb183fe7">m_ParsingTypedef</a>, <a class="el" href="classParserThread.xhtml#a730cd9ca1c862f4046e9d12e786005c5">m_Str</a>, <a class="el" href="classParserThread.xhtml#a53d1161f115003c2a071ed8af42e72b4">m_StructUnionUnnamedCount</a>, <a class="el" href="classToken.xhtml#a07aa7faf9dfc48200746529481bbb52c">Token::m_TemplateArgument</a>, <a class="el" href="classParserThread.xhtml#a1f6ab822b2b9d583a2a54e0d9f6352d6">m_TemplateArgument</a>, <a class="el" href="classToken.xhtml#a678a1d3832e9d37502e6e9c332fac767">Token::m_TemplateType</a>, <a class="el" href="classParserThread.xhtml#a873fc088c4c8373ac41b407d65885902">m_Tokenizer</a>, <a class="el" href="classToken.xhtml#aae52d5bca7a44fcd03345e405ab979b6">Token::m_TokenKind</a>, <a class="el" href="namespaceParserConsts.xhtml#ae661129bf96eb8f6eb2f29e3f0fab551">ParserConsts::opbrace()</a>, <a class="el" href="namespaceParserConsts.xhtml#a747c1e9f343af048794d204e2428bd33">ParserConsts::opbracket_chr()</a>, <a class="el" href="classTokenizer.xhtml#a736574152ebabf5ab26241104780c775">Tokenizer::PeekToken()</a>, <a class="el" href="namespaceParserConsts.xhtml#a43b7df87954b2bd0bbc06e238a5c342c">ParserConsts::ptr_chr()</a>, <a class="el" href="classParserThread.xhtml#ad78eb9574aefe7f580aaa805f10fbe1b">ReadClsNames()</a>, <a class="el" href="classParserThread.xhtml#ae5961cd32c994fa68fec25baa4ee053a">ReadVarNames()</a>, <a class="el" href="namespaceParserConsts.xhtml#a024d267c7f0f9cd1500551d4cd70e383">ParserConsts::ref_chr()</a>, <a class="el" href="namespaceParserConsts.xhtml#a63a59607efefe61ca2032cf14d299f12">ParserConsts::semicolon()</a>, <a class="el" href="classTokenizer.xhtml#a0d9b0da5d3c5a5a82772fa181687deb3">Tokenizer::SetState()</a>, <a class="el" href="classParserThread.xhtml#a019c7ff4c9f800ccc583a41699ab5b5e">SkipAngleBraces()</a>, <a class="el" href="namespaceParserConsts.xhtml#a8f9d609333c9384cd9c3946d5cfcdadc">ParserConsts::space()</a>, <a class="el" href="namespaceParserConsts.xhtml#ad6acba72a1e7e06c3a845142eb79813b">ParserConsts::space_chr()</a>, <a class="el" href="classParserThread.xhtml#a063f606371064cbf33004832013999bb">SplitTemplateFormalParameters()</a>, <a class="el" href="token_8h.xhtml#a7a47dce04185ce6008048622cc792f25a36d9f3721a93b1c4a60b1d50d0198af2">tkClass</a>, <a class="el" href="token_8h.xhtml#a7a47dce04185ce6008048622cc792f25ae8e186b68231e5889c97c05a22bde507">tkVariable</a>, <a class="el" href="classParserThread.xhtml#a080e2d03d7ca0bdcb1552d4aa87c4839">TokenExists()</a>, <a class="el" href="parserthread_8cpp.xhtml#a1c9f8c7ecc64a760dc3ac03706556ea9">TRACE</a>, <a class="el" href="token_8h.xhtml#a51914652d471a4b2e79baaa727cef729a935af98e116660761ab579df64af700c">tsPrivate</a>, <a class="el" href="token_8h.xhtml#a51914652d471a4b2e79baaa727cef729a7cc0bbbfe40c2ce141c7d3c5d8a12f5a">tsPublic</a>, <a class="el" href="tokenizer_8h.xhtml#a5b1175f256359a25a7374d4ab1e5f845ac3caeb8004b72c8bdcad39b685ad0401">tsSkipUnWanted</a>, and <a class="el" href="classTokenizer.xhtml#ac7f992387098dd3a486a9c994c9d5d7f">Tokenizer::UngetToken()</a>.</p>

<p>Referenced by <a class="el" href="classParserThread.xhtml#a991cc89e41f0fbff132e3f09585ea70d">DoParse()</a>, and <a class="el" href="classParserThread.xhtml#aab08606cca9480bc978259ef8afc170d">HandleTypedef()</a>.</p>

</div>
</div>
<a class="anchor" id="a2ef3649a1395a1c492f38e6b167582b4"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void ParserThread::HandleConditionalArguments </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>parse arguments like: if(int X = getNumber()) </p>

<p>References <a class="el" href="classParserThread.xhtml#ae1def46bdb504975217819bb1049d9fd">DoAddToken()</a>, <a class="el" href="classTokenizer.xhtml#a37bada75b07c120619498b10db279698">Tokenizer::GetFilename()</a>, <a class="el" href="classTokenizer.xhtml#ad7093d8d59e2073b0312fba06465484c">Tokenizer::GetLineNumber()</a>, <a class="el" href="classTokenizer.xhtml#ac7addae7ad10df1c1550739eaf786d89">Tokenizer::GetToken()</a>, <a class="el" href="classTokenizer.xhtml#ad9e5082fade9bdcc47bf90f483a37f69">Tokenizer::InitFromBuffer()</a>, <a class="el" href="parserthread_8cpp.xhtml#af50a854374d3749ee0d47aa3a18e6ae5">IS_ALIVE</a>, <a class="el" href="classParserThread.xhtml#a9dc59ce4939ad8128201819181b7dc87">m_PointerOrRef</a>, <a class="el" href="classParserThread.xhtml#a730cd9ca1c862f4046e9d12e786005c5">m_Str</a>, <a class="el" href="classParserThread.xhtml#a1f6ab822b2b9d583a2a54e0d9f6352d6">m_TemplateArgument</a>, <a class="el" href="classParserThread.xhtml#a873fc088c4c8373ac41b407d65885902">m_Tokenizer</a>, <a class="el" href="classTokenizer.xhtml#a736574152ebabf5ab26241104780c775">Tokenizer::PeekToken()</a>, <a class="el" href="namespaceParserConsts.xhtml#a43b7df87954b2bd0bbc06e238a5c342c">ParserConsts::ptr_chr()</a>, <a class="el" href="namespaceParserConsts.xhtml#a024d267c7f0f9cd1500551d4cd70e383">ParserConsts::ref_chr()</a>, <a class="el" href="classParserThread.xhtml#a9821c59c7aa27f4f7dbf68255c5cb576">RemoveTemplateArgs()</a>, <a class="el" href="classParserThread.xhtml#a6de60c378ea1d299684529374634be59">ResolveTemplateArgs()</a>, <a class="el" href="token_8h.xhtml#a7a47dce04185ce6008048622cc792f25ae8e186b68231e5889c97c05a22bde507">tkVariable</a>, and <a class="el" href="parserthread_8cpp.xhtml#a1c9f8c7ecc64a760dc3ac03706556ea9">TRACE</a>.</p>

<p>Referenced by <a class="el" href="classParserThread.xhtml#a991cc89e41f0fbff132e3f09585ea70d">DoParse()</a>.</p>

</div>
</div>
<a class="anchor" id="ab55fd2bae9203888c0178c4df058636c"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void ParserThread::HandleDefines </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>handle the statement: #define XXXXX </p>

<p>References <a class="el" href="namespaceParserConsts.xhtml#a6d070677a5e851a32d57235186f6494d">ParserConsts::clbracket_chr()</a>, <a class="el" href="classParserThread.xhtml#ae1def46bdb504975217819bb1049d9fd">DoAddToken()</a>, <a class="el" href="classTokenizer.xhtml#ad7093d8d59e2073b0312fba06465484c">Tokenizer::GetLineNumber()</a>, <a class="el" href="classTokenizer.xhtml#a60cb0bbabbc5c926ae8d8c2cd1dcdd50">Tokenizer::GetState()</a>, <a class="el" href="classTokenizer.xhtml#ac7addae7ad10df1c1550739eaf786d89">Tokenizer::GetToken()</a>, <a class="el" href="classParserThread.xhtml#a298741b1575002b21418de8b63e37761">m_LastParent</a>, <a class="el" href="classParserThread.xhtml#a730cd9ca1c862f4046e9d12e786005c5">m_Str</a>, <a class="el" href="classParserThread.xhtml#a873fc088c4c8373ac41b407d65885902">m_Tokenizer</a>, <a class="el" href="namespaceParserConsts.xhtml#a747c1e9f343af048794d204e2428bd33">ParserConsts::opbracket_chr()</a>, <a class="el" href="classTokenizer.xhtml#a3733bafa796a5cee1c24e10b99cff9f9">Tokenizer::ReadToEOL()</a>, <a class="el" href="classTokenizer.xhtml#a0d9b0da5d3c5a5a82772fa181687deb3">Tokenizer::SetState()</a>, <a class="el" href="token_8h.xhtml#a7a47dce04185ce6008048622cc792f25aa0ca06d013acd15e8fd2be8cb57c2f20">tkMacroDef</a>, and <a class="el" href="tokenizer_8h.xhtml#a5b1175f256359a25a7374d4ab1e5f845a80da3efdca4e1162abce8315798a8791">tsReadRawExpression</a>.</p>

<p>Referenced by <a class="el" href="classParserThread.xhtml#a991cc89e41f0fbff132e3f09585ea70d">DoParse()</a>.</p>

</div>
</div>
<a class="anchor" id="a4a9c62b81b02895349a1633ff744e8f7"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void ParserThread::HandleEnum </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>handle enum declaration </p>

<p>References <a class="el" href="classParserThread.xhtml#a997e91f1cbbf64ef9f8220e97dd7a240">CalcEnumExpression()</a>, <a class="el" href="namespaceParserConsts.xhtml#ab87f8f74e3708d33dd53e26a5f5d46d7">ParserConsts::clbrace()</a>, <a class="el" href="namespaceParserConsts.xhtml#a18e895926741e6133c46afc135208a73">ParserConsts::colon()</a>, <a class="el" href="namespaceParserConsts.xhtml#a92e7853fd29d63c18fed66e6dc73698f">ParserConsts::comma()</a>, <a class="el" href="namespaceParserConsts.xhtml#a7a334528c1f6318534284190c9cc1e01">ParserConsts::commaclbrace()</a>, <a class="el" href="classParserThread.xhtml#ae1def46bdb504975217819bb1049d9fd">DoAddToken()</a>, <a class="el" href="namespaceParserConsts.xhtml#a29953e1af3671f70f51ce9f27fc0cc6b">ParserConsts::equals()</a>, <a class="el" href="parserthread_8cpp.xhtml#ae14669083d1e18953bc5f5b1325b6bc1">g_UnnamedSymbol</a>, <a class="el" href="classTokenizer.xhtml#ad7093d8d59e2073b0312fba06465484c">Tokenizer::GetLineNumber()</a>, <a class="el" href="classTokenizer.xhtml#ae64f675daaadc90087b35e31776c4aea">Tokenizer::GetNestingLevel()</a>, <a class="el" href="classTokenizer.xhtml#a60cb0bbabbc5c926ae8d8c2cd1dcdd50">Tokenizer::GetState()</a>, <a class="el" href="classTokenizer.xhtml#ac7addae7ad10df1c1550739eaf786d89">Tokenizer::GetToken()</a>, <a class="el" href="structParserThreadOptions.xhtml#a3c147ee07a4cbb2ee3835bf5f2a3e6df">ParserThreadOptions::handleEnums</a>, <a class="el" href="parserthread_8cpp.xhtml#af50a854374d3749ee0d47aa3a18e6ae5">IS_ALIVE</a>, <a class="el" href="namespaceParserConsts.xhtml#a8c8ba3fc7f97c42d76089aaa420a7e64">ParserConsts::kw_class()</a>, <a class="el" href="classParserThread.xhtml#a385d1c73705a0df9412dc501eb7d683a">m_EnumUnnamedCount</a>, <a class="el" href="classParserThread.xhtml#a48ca1fbcfd78c24fab7f443ee5769e32">m_FileIdx</a>, <a class="el" href="classToken.xhtml#a8ae34ce001ad24cd7e1d761be8feb61a">Token::m_ImplLine</a>, <a class="el" href="classToken.xhtml#a49474c5087079ad605f493b5bdf323d4">Token::m_ImplLineEnd</a>, <a class="el" href="classToken.xhtml#aefee5e6bc190532d7df5ef5c71c27928">Token::m_ImplLineStart</a>, <a class="el" href="classToken.xhtml#acdc09e733cf2a6342767e714e8f86bc7">Token::m_IsAnonymous</a>, <a class="el" href="classParserThread.xhtml#a298741b1575002b21418de8b63e37761">m_LastParent</a>, <a class="el" href="classParserThread.xhtml#af14ba3b010d6ba1988b7c37f395cca0e">m_LastUnnamedTokenName</a>, <a class="el" href="classParserThread.xhtml#a12f6ad0e78e4cc8d914bc7d6e9454863">m_Options</a>, <a class="el" href="classParserThread.xhtml#a723230e744d109f4881b31b3eb183fe7">m_ParsingTypedef</a>, <a class="el" href="classToken.xhtml#afb74e3ed595b693bb171d53daf226dc7">Token::m_Scope</a>, <a class="el" href="classParserThread.xhtml#a730cd9ca1c862f4046e9d12e786005c5">m_Str</a>, <a class="el" href="classParserThread.xhtml#a873fc088c4c8373ac41b407d65885902">m_Tokenizer</a>, <a class="el" href="namespaceParserConsts.xhtml#ae661129bf96eb8f6eb2f29e3f0fab551">ParserConsts::opbrace()</a>, <a class="el" href="namespaceParserConsts.xhtml#a07b2c8e2c4544dcb32e321d89d445b0f">ParserConsts::opbrace_chr()</a>, <a class="el" href="classTokenizer.xhtml#a736574152ebabf5ab26241104780c775">Tokenizer::PeekToken()</a>, <a class="el" href="namespaceParserConsts.xhtml#a63a59607efefe61ca2032cf14d299f12">ParserConsts::semicolon()</a>, <a class="el" href="classTokenizer.xhtml#a0d9b0da5d3c5a5a82772fa181687deb3">Tokenizer::SetState()</a>, <a class="el" href="classParserThread.xhtml#a3324c3f8b45443f087071a758676134a">SkipToOneOfChars()</a>, <a class="el" href="token_8h.xhtml#a7a47dce04185ce6008048622cc792f25a5bf7196b13ca1ae329ed8a409c1c41c0">tkEnum</a>, <a class="el" href="token_8h.xhtml#a7a47dce04185ce6008048622cc792f25af243c38b30bb76a5cb385c5398edf629">tkEnumerator</a>, <a class="el" href="token_8h.xhtml#a7a47dce04185ce6008048622cc792f25ae8e186b68231e5889c97c05a22bde507">tkVariable</a>, <a class="el" href="classParserThread.xhtml#a080e2d03d7ca0bdcb1552d4aa87c4839">TokenExists()</a>, <a class="el" href="token_8h.xhtml#a51914652d471a4b2e79baaa727cef729a935af98e116660761ab579df64af700c">tsPrivate</a>, <a class="el" href="token_8h.xhtml#a51914652d471a4b2e79baaa727cef729a7cc0bbbfe40c2ce141c7d3c5d8a12f5a">tsPublic</a>, <a class="el" href="tokenizer_8h.xhtml#a5b1175f256359a25a7374d4ab1e5f845ada3140476ec623f378e679cde037b2ce">tsSkipNone</a>, <a class="el" href="namespaceParserConsts.xhtml#a15dd62576c69e2e47962beb590b6089a">ParserConsts::underscore_chr()</a>, and <a class="el" href="classTokenizer.xhtml#ac7f992387098dd3a486a9c994c9d5d7f">Tokenizer::UngetToken()</a>.</p>

<p>Referenced by <a class="el" href="classParserThread.xhtml#a991cc89e41f0fbff132e3f09585ea70d">DoParse()</a>, and <a class="el" href="classParserThread.xhtml#aab08606cca9480bc978259ef8afc170d">HandleTypedef()</a>.</p>

</div>
</div>
<a class="anchor" id="a650a609cbd9745ae8bad1951586a4bfa"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void ParserThread::HandleForLoopArguments </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>parse for loop arguments: for(int X; ... ; ...) </p>

<p>References <a class="el" href="namespaceParserConsts.xhtml#a18e895926741e6133c46afc135208a73">ParserConsts::colon()</a>, <a class="el" href="namespaceParserConsts.xhtml#a92e7853fd29d63c18fed66e6dc73698f">ParserConsts::comma()</a>, <a class="el" href="classParserThread.xhtml#ae1def46bdb504975217819bb1049d9fd">DoAddToken()</a>, <a class="el" href="classTokenizer.xhtml#a37bada75b07c120619498b10db279698">Tokenizer::GetFilename()</a>, <a class="el" href="classTokenizer.xhtml#ad7093d8d59e2073b0312fba06465484c">Tokenizer::GetLineNumber()</a>, <a class="el" href="classTokenizer.xhtml#ac7addae7ad10df1c1550739eaf786d89">Tokenizer::GetToken()</a>, <a class="el" href="classTokenizer.xhtml#ad9e5082fade9bdcc47bf90f483a37f69">Tokenizer::InitFromBuffer()</a>, <a class="el" href="parserthread_8cpp.xhtml#af50a854374d3749ee0d47aa3a18e6ae5">IS_ALIVE</a>, <a class="el" href="classParserThread.xhtml#a9dc59ce4939ad8128201819181b7dc87">m_PointerOrRef</a>, <a class="el" href="classParserThread.xhtml#a730cd9ca1c862f4046e9d12e786005c5">m_Str</a>, <a class="el" href="classParserThread.xhtml#a1f6ab822b2b9d583a2a54e0d9f6352d6">m_TemplateArgument</a>, <a class="el" href="classParserThread.xhtml#a873fc088c4c8373ac41b407d65885902">m_Tokenizer</a>, <a class="el" href="classTokenizer.xhtml#a736574152ebabf5ab26241104780c775">Tokenizer::PeekToken()</a>, <a class="el" href="namespaceParserConsts.xhtml#a43b7df87954b2bd0bbc06e238a5c342c">ParserConsts::ptr_chr()</a>, <a class="el" href="namespaceParserConsts.xhtml#a024d267c7f0f9cd1500551d4cd70e383">ParserConsts::ref_chr()</a>, <a class="el" href="classParserThread.xhtml#a9821c59c7aa27f4f7dbf68255c5cb576">RemoveTemplateArgs()</a>, <a class="el" href="classParserThread.xhtml#a6de60c378ea1d299684529374634be59">ResolveTemplateArgs()</a>, <a class="el" href="namespaceParserConsts.xhtml#a63a59607efefe61ca2032cf14d299f12">ParserConsts::semicolon()</a>, <a class="el" href="token_8h.xhtml#a7a47dce04185ce6008048622cc792f25ae8e186b68231e5889c97c05a22bde507">tkVariable</a>, and <a class="el" href="parserthread_8cpp.xhtml#a1c9f8c7ecc64a760dc3ac03706556ea9">TRACE</a>.</p>

<p>Referenced by <a class="el" href="classParserThread.xhtml#a991cc89e41f0fbff132e3f09585ea70d">DoParse()</a>.</p>

</div>
</div>
<a class="anchor" id="a5815c1b5dc1e6f26b69324f2f1842ee0"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void ParserThread::HandleFunction </td>
          <td>(</td>
          <td class="paramtype">const wxString &amp;&#160;</td>
          <td class="paramname"><em>name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>isOperator</em> = <code>false</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>isPointer</em> = <code>false</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>handle function declaration or definition </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">name</td><td>function name </td></tr>
    <tr><td class="paramname">isOperator</td><td>if true, means it is an operator overload function </td></tr>
    <tr><td class="paramname">isPointer</td><td>if true, means it is a function pointer </td></tr>
  </table>
  </dd>
</dl>

<p>References <a class="el" href="namespaceParserConsts.xhtml#ab87f8f74e3708d33dd53e26a5f5d46d7">ParserConsts::clbrace()</a>, <a class="el" href="namespaceParserConsts.xhtml#a18e895926741e6133c46afc135208a73">ParserConsts::colon()</a>, <a class="el" href="classParserThread.xhtml#ae1def46bdb504975217819bb1049d9fd">DoAddToken()</a>, <a class="el" href="classParserThread.xhtml#a1fa2f9d5e4348a8347e82cb563fc4074">FindTokenFromQueue()</a>, <a class="el" href="classTokenizer.xhtml#ad7093d8d59e2073b0312fba06465484c">Tokenizer::GetLineNumber()</a>, <a class="el" href="classTokenizer.xhtml#ac7addae7ad10df1c1550739eaf786d89">Tokenizer::GetToken()</a>, <a class="el" href="namespaceParserConsts.xhtml#a17e7f74502b1cca3e92de90d4a1498a4">ParserConsts::kw_const()</a>, <a class="el" href="namespaceParserConsts.xhtml#add87c719e531336541da90822920de15">ParserConsts::kw_friend()</a>, <a class="el" href="namespaceParserConsts.xhtml#a55386533ed3bf2f1120753414e154b77">ParserConsts::kw_noexcept()</a>, <a class="el" href="namespaceParserConsts.xhtml#adb628700aec499f37c8f347f340dde3f">ParserConsts::kw_throw()</a>, <a class="el" href="classParserThread.xhtml#ac2cfec245d5d63859fa4435e8c7f9cb2">m_EncounteredNamespaces</a>, <a class="el" href="classParserThread.xhtml#aee2522718b35962d760275129a503b5f">m_EncounteredTypeNamespaces</a>, <a class="el" href="classParserThread.xhtml#ad22d91c9d632db244f2342b00f9b8add">m_Filename</a>, <a class="el" href="classToken.xhtml#a6aecdba04b376ff62fbe05c286b61473">Token::m_IsConst</a>, <a class="el" href="classToken.xhtml#a51e3b8714d3b2ce1e8f3fc013b49fd3b">Token::m_IsNoExcept</a>, <a class="el" href="classParserThread.xhtml#a298741b1575002b21418de8b63e37761">m_LastParent</a>, <a class="el" href="classToken.xhtml#a66d4391491a9244d9c0e060045d9cdee">Token::m_Name</a>, <a class="el" href="classParserThread.xhtml#a12f6ad0e78e4cc8d914bc7d6e9454863">m_Options</a>, <a class="el" href="classParserThread.xhtml#a730cd9ca1c862f4046e9d12e786005c5">m_Str</a>, <a class="el" href="classToken.xhtml#a07aa7faf9dfc48200746529481bbb52c">Token::m_TemplateArgument</a>, <a class="el" href="classParserThread.xhtml#a1f6ab822b2b9d583a2a54e0d9f6352d6">m_TemplateArgument</a>, <a class="el" href="classToken.xhtml#afb3cc9939698b041246f40fed80b13d6">Token::m_TemplateMap</a>, <a class="el" href="classParserThread.xhtml#a873fc088c4c8373ac41b407d65885902">m_Tokenizer</a>, <a class="el" href="namespaceParserConsts.xhtml#ae661129bf96eb8f6eb2f29e3f0fab551">ParserConsts::opbrace()</a>, <a class="el" href="classTokenizer.xhtml#a736574152ebabf5ab26241104780c775">Tokenizer::PeekToken()</a>, <a class="el" href="classParserThread.xhtml#a6de60c378ea1d299684529374634be59">ResolveTemplateArgs()</a>, <a class="el" href="namespaceParserConsts.xhtml#a63a59607efefe61ca2032cf14d299f12">ParserConsts::semicolon()</a>, <a class="el" href="classParserThread.xhtml#a65973704432137e051aec1541d3d7236">SkipBlock()</a>, <a class="el" href="classParserThread.xhtml#a3324c3f8b45443f087071a758676134a">SkipToOneOfChars()</a>, <a class="el" href="namespaceParserConsts.xhtml#a52d3cc3302e763f6507c462d51dd4320">ParserConsts::tilde()</a>, <a class="el" href="token_8h.xhtml#a7a47dce04185ce6008048622cc792f25a40d27978e246bbd62cdee00497bdc5f2">tkConstructor</a>, <a class="el" href="token_8h.xhtml#a7a47dce04185ce6008048622cc792f25ac5aa27a18275a4327ef9fee99f5e43f1">tkDestructor</a>, <a class="el" href="token_8h.xhtml#a7a47dce04185ce6008048622cc792f25a97f801385ef65b6be37004f93a75010c">tkFunction</a>, <a class="el" href="parserthread_8cpp.xhtml#a1c9f8c7ecc64a760dc3ac03706556ea9">TRACE</a>, <a class="el" href="classTokenizer.xhtml#ac7f992387098dd3a486a9c994c9d5d7f">Tokenizer::UngetToken()</a>, and <a class="el" href="structParserThreadOptions.xhtml#af74517ab1b1e2c54f2480d2f36f1ede1">ParserThreadOptions::useBuffer</a>.</p>

<p>Referenced by <a class="el" href="classParserThread.xhtml#a991cc89e41f0fbff132e3f09585ea70d">DoParse()</a>, and <a class="el" href="classParserThread.xhtml#ac899b2ea7761e46bb1f0d061f4d54691">HandleClass()</a>.</p>

</div>
</div>
<a class="anchor" id="aa644c4bf5a650801606724f2d4cc90d5"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void ParserThread::HandleIncludes </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>handle include &lt;XXXX&gt; or include "XXXX" directive. This will internally add another parserThead object associate with the included file to parserthread pool </p>

<p>References <a class="el" href="config-testsuite_8cpp.xhtml#a07f04e4e679e17d1f1c2f0a60cb74aaa">c</a>, <a class="el" href="namespaceParserCommon.xhtml#a95b2efe47075493a262d920629bdff5e">ParserCommon::FileType()</a>, <a class="el" href="structParserThreadOptions.xhtml#ad248335bb5c25f7e507f662cf452c0d4">ParserThreadOptions::followGlobalIncludes</a>, <a class="el" href="structParserThreadOptions.xhtml#a9da48a61076b6e449502a62b6cd83bd6">ParserThreadOptions::followLocalIncludes</a>, <a class="el" href="namespaceParserCommon.xhtml#ad3fe6171130d43fc420daaa2f42dc259a0f935ee68ab886732c101053351ab7dc">ParserCommon::ftOther</a>, <a class="el" href="classParserBase.xhtml#ad5c31b01677c436d2339a10d24cfd719">ParserBase::GetFullFileName()</a>, <a class="el" href="classTokenizer.xhtml#ac7addae7ad10df1c1550739eaf786d89">Tokenizer::GetToken()</a>, <a class="el" href="namespaceParserConsts.xhtml#aa6c9124fd797782aba0cd7ec0ea79264">ParserConsts::gt_chr()</a>, <a class="el" href="parserthread_8cpp.xhtml#af50a854374d3749ee0d47aa3a18e6ae5">IS_ALIVE</a>, <a class="el" href="classTokenTree.xhtml#a2b51672d8287e25eedd109597010e371">TokenTree::IsFileParsed()</a>, <a class="el" href="namespaceParserConsts.xhtml#a55e506cc5b0c01e1d07fbcec4d5df1c5">ParserConsts::lt_chr()</a>, <a class="el" href="classParserThread.xhtml#ad22d91c9d632db244f2342b00f9b8add">m_Filename</a>, <a class="el" href="classParserThread.xhtml#a682f61a3eedc9c4bef77ba315cf31ed6">m_IsLocal</a>, <a class="el" href="classParserThread.xhtml#a12f6ad0e78e4cc8d914bc7d6e9454863">m_Options</a>, <a class="el" href="classParserThread.xhtml#a6fe40c30236e32f403c8fb0368162d4d">m_Parent</a>, <a class="el" href="classParserThread.xhtml#a873fc088c4c8373ac41b407d65885902">m_Tokenizer</a>, <a class="el" href="classParserThread.xhtml#ac98620ec8d07c3515805f59fabd84762">m_TokenTree</a>, <a class="el" href="classParserBase.xhtml#a5ce7f8b4b25a81c9214d1130e7737e71">ParserBase::ParseFile()</a>, and <a class="el" href="parserthread_8cpp.xhtml#a1c9f8c7ecc64a760dc3ac03706556ea9">TRACE</a>.</p>

<p>Referenced by <a class="el" href="classParserThread.xhtml#a991cc89e41f0fbff132e3f09585ea70d">DoParse()</a>.</p>

</div>
</div>
<a class="anchor" id="a36ab4001b8842ae1bea7452474aa63c3"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void ParserThread::HandleMacroExpansion </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>id</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const wxString &amp;&#160;</td>
          <td class="paramname"><em>peek</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>We guess this is a macro usage, so try to expand macro </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">id</td><td>token id in <a class="el" href="classToken.xhtml">Token</a> tree </td></tr>
    <tr><td class="paramname">peek</td><td>macro actual arguments </td></tr>
  </table>
  </dd>
</dl>

<p>References <a class="el" href="classTokenTree.xhtml#a27fc4ea2842b026514e7b7f92a5e578e">TokenTree::at()</a>, <a class="el" href="classParserThread.xhtml#ae1def46bdb504975217819bb1049d9fd">DoAddToken()</a>, <a class="el" href="classTokenizer.xhtml#ad7093d8d59e2073b0312fba06465484c">Tokenizer::GetLineNumber()</a>, <a class="el" href="classToken.xhtml#a66d4391491a9244d9c0e060045d9cdee">Token::m_Name</a>, <a class="el" href="classParserThread.xhtml#a12f6ad0e78e4cc8d914bc7d6e9454863">m_Options</a>, <a class="el" href="classParserThread.xhtml#a873fc088c4c8373ac41b407d65885902">m_Tokenizer</a>, <a class="el" href="classParserThread.xhtml#ac98620ec8d07c3515805f59fabd84762">m_TokenTree</a>, <a class="el" href="structParserThreadOptions.xhtml#ac039ac8121203343783ed8bebf0b2ad0">ParserThreadOptions::parseComplexMacros</a>, <a class="el" href="classTokenizer.xhtml#a1586b3f6ef6979c9938f1205a9749e47">Tokenizer::ReplaceMacroUsage()</a>, <a class="el" href="token_8h.xhtml#a7a47dce04185ce6008048622cc792f25aec950139b7ba880b9c85ee82f7ab7975">tkMacroUse</a>, and <a class="el" href="parserthread_8cpp.xhtml#a1c9f8c7ecc64a760dc3ac03706556ea9">TRACE</a>.</p>

<p>Referenced by <a class="el" href="classParserThread.xhtml#a991cc89e41f0fbff132e3f09585ea70d">DoParse()</a>.</p>

</div>
</div>
<a class="anchor" id="a11bacf859a9b5a1a02c161331b0278f4"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void ParserThread::HandleNamespace </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>handle the statement: namespace XXX { </p>

<p>References <a class="el" href="namespaceParserConsts.xhtml#a59b23e0ca2ff0bf15d9fb263a2f6386c">ParserConsts::dcolon()</a>, <a class="el" href="classParserThread.xhtml#ae1def46bdb504975217819bb1049d9fd">DoAddToken()</a>, <a class="el" href="classParserThread.xhtml#a991cc89e41f0fbff132e3f09585ea70d">DoParse()</a>, <a class="el" href="namespaceParserConsts.xhtml#a29953e1af3671f70f51ce9f27fc0cc6b">ParserConsts::equals()</a>, <a class="el" href="classTokenizer.xhtml#ad7093d8d59e2073b0312fba06465484c">Tokenizer::GetLineNumber()</a>, <a class="el" href="classTokenizer.xhtml#ac7addae7ad10df1c1550739eaf786d89">Tokenizer::GetToken()</a>, <a class="el" href="parserthread_8cpp.xhtml#af50a854374d3749ee0d47aa3a18e6ae5">IS_ALIVE</a>, <a class="el" href="classToken.xhtml#a04fc0199cad56059310d8620e6620c17">Token::m_Aliases</a>, <a class="el" href="classParserThread.xhtml#a48ca1fbcfd78c24fab7f443ee5769e32">m_FileIdx</a>, <a class="el" href="classToken.xhtml#a1b939df520f020469a4023c9e121040f">Token::m_FullType</a>, <a class="el" href="classToken.xhtml#ab01f001b0ff015f374c3631aba65bd57">Token::m_ImplFileIdx</a>, <a class="el" href="classToken.xhtml#a8ae34ce001ad24cd7e1d761be8feb61a">Token::m_ImplLine</a>, <a class="el" href="classToken.xhtml#a49474c5087079ad605f493b5bdf323d4">Token::m_ImplLineEnd</a>, <a class="el" href="classToken.xhtml#aefee5e6bc190532d7df5ef5c71c27928">Token::m_ImplLineStart</a>, <a class="el" href="classParserThread.xhtml#a298741b1575002b21418de8b63e37761">m_LastParent</a>, <a class="el" href="classParserThread.xhtml#a8fc104996d43d1273d57bf438f8c9705">m_LastScope</a>, <a class="el" href="classToken.xhtml#a66d4391491a9244d9c0e060045d9cdee">Token::m_Name</a>, <a class="el" href="classParserThread.xhtml#a873fc088c4c8373ac41b407d65885902">m_Tokenizer</a>, <a class="el" href="namespaceParserConsts.xhtml#ae661129bf96eb8f6eb2f29e3f0fab551">ParserConsts::opbrace()</a>, <a class="el" href="classTokenizer.xhtml#a736574152ebabf5ab26241104780c775">Tokenizer::PeekToken()</a>, <a class="el" href="classTokenizer.xhtml#ac929769563e5b389e6444568d06eb6ef">Tokenizer::ReplaceBufferText()</a>, <a class="el" href="namespaceParserConsts.xhtml#a99b3b46e6ad8a8dafdd597688dac68f0">ParserConsts::semicolonopbrace()</a>, <a class="el" href="classTokenizer.xhtml#a0d9b0da5d3c5a5a82772fa181687deb3">Tokenizer::SetState()</a>, <a class="el" href="classParserThread.xhtml#a3324c3f8b45443f087071a758676134a">SkipToOneOfChars()</a>, <a class="el" href="token_8h.xhtml#a7a47dce04185ce6008048622cc792f25aa0ca06d013acd15e8fd2be8cb57c2f20">tkMacroDef</a>, <a class="el" href="token_8h.xhtml#a7a47dce04185ce6008048622cc792f25aa38450654b481800ad6cd006ebb0e98a">tkNamespace</a>, <a class="el" href="classParserThread.xhtml#a080e2d03d7ca0bdcb1552d4aa87c4839">TokenExists()</a>, <a class="el" href="parserthread_8cpp.xhtml#a1c9f8c7ecc64a760dc3ac03706556ea9">TRACE</a>, <a class="el" href="token_8h.xhtml#a51914652d471a4b2e79baaa727cef729a7cc0bbbfe40c2ce141c7d3c5d8a12f5a">tsPublic</a>, <a class="el" href="tokenizer_8h.xhtml#a5b1175f256359a25a7374d4ab1e5f845ada3140476ec623f378e679cde037b2ce">tsSkipNone</a>, and <a class="el" href="tokenizer_8h.xhtml#a5b1175f256359a25a7374d4ab1e5f845ac3caeb8004b72c8bdcad39b685ad0401">tsSkipUnWanted</a>.</p>

<p>Referenced by <a class="el" href="classParserThread.xhtml#a991cc89e41f0fbff132e3f09585ea70d">DoParse()</a>.</p>

</div>
</div>
<a class="anchor" id="aab08606cca9480bc978259ef8afc170d"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void ParserThread::HandleTypedef </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>handle typedef directive </p>

<p>References <a class="el" href="namespaceParserConsts.xhtml#a6d070677a5e851a32d57235186f6494d">ParserConsts::clbracket_chr()</a>, <a class="el" href="namespaceParserConsts.xhtml#a92e7853fd29d63c18fed66e6dc73698f">ParserConsts::comma()</a>, <a class="el" href="classParserThread.xhtml#a3eed219f8132be0962c7ed13d5ee46adad19f6ddcd06b23fb48e55ce9f2322515">ctClass</a>, <a class="el" href="classParserThread.xhtml#a3eed219f8132be0962c7ed13d5ee46adaa86fb31f67d0c681cbcfd65d85c3b2d2">ctStructure</a>, <a class="el" href="classParserThread.xhtml#a3eed219f8132be0962c7ed13d5ee46ada8d0039c683a935d81d52e6edcbe4fa2c">ctUnion</a>, <a class="el" href="namespaceParserConsts.xhtml#a59b23e0ca2ff0bf15d9fb263a2f6386c">ParserConsts::dcolon()</a>, <a class="el" href="classParserThread.xhtml#ae1def46bdb504975217819bb1049d9fd">DoAddToken()</a>, <a class="el" href="classTokenizer.xhtml#ad7093d8d59e2073b0312fba06465484c">Tokenizer::GetLineNumber()</a>, <a class="el" href="classParserThread.xhtml#a83a5aafc48794c0b7855cc40c5ccc6cf">GetTemplateArgs()</a>, <a class="el" href="classTokenizer.xhtml#ac7addae7ad10df1c1550739eaf786d89">Tokenizer::GetToken()</a>, <a class="el" href="classParserThread.xhtml#ac899b2ea7761e46bb1f0d061f4d54691">HandleClass()</a>, <a class="el" href="classParserThread.xhtml#a4a9c62b81b02895349a1633ff744e8f7">HandleEnum()</a>, <a class="el" href="parserthread_8cpp.xhtml#af50a854374d3749ee0d47aa3a18e6ae5">IS_ALIVE</a>, <a class="el" href="namespaceParserConsts.xhtml#a8c8ba3fc7f97c42d76089aaa420a7e64">ParserConsts::kw_class()</a>, <a class="el" href="namespaceParserConsts.xhtml#af72ca49f5dd792a9b5c83fe786bfef7d">ParserConsts::kw_enum()</a>, <a class="el" href="namespaceParserConsts.xhtml#afb25a8735e39a854f59a703a6f28243c">ParserConsts::kw_struct()</a>, <a class="el" href="namespaceParserConsts.xhtml#a1e1f676ee6b6f6f53d1c5980b51e1ec7">ParserConsts::kw_union()</a>, <a class="el" href="namespaceParserConsts.xhtml#adab3309c5f15cf14ab4bf77d0cad71b7">ParserConsts::lt()</a>, <a class="el" href="namespaceParserConsts.xhtml#a55e506cc5b0c01e1d07fbcec4d5df1c5">ParserConsts::lt_chr()</a>, <a class="el" href="classParserThread.xhtml#a298741b1575002b21418de8b63e37761">m_LastParent</a>, <a class="el" href="classParserThread.xhtml#af14ba3b010d6ba1988b7c37f395cca0e">m_LastUnnamedTokenName</a>, <a class="el" href="classParserThread.xhtml#a723230e744d109f4881b31b3eb183fe7">m_ParsingTypedef</a>, <a class="el" href="classParserThread.xhtml#a9dc59ce4939ad8128201819181b7dc87">m_PointerOrRef</a>, <a class="el" href="classParserThread.xhtml#a730cd9ca1c862f4046e9d12e786005c5">m_Str</a>, <a class="el" href="classParserThread.xhtml#a1f6ab822b2b9d583a2a54e0d9f6352d6">m_TemplateArgument</a>, <a class="el" href="classToken.xhtml#a678a1d3832e9d37502e6e9c332fac767">Token::m_TemplateType</a>, <a class="el" href="classParserThread.xhtml#a873fc088c4c8373ac41b407d65885902">m_Tokenizer</a>, <a class="el" href="classToken.xhtml#aae52d5bca7a44fcd03345e405ab979b6">Token::m_TokenKind</a>, <a class="el" href="namespaceParserConsts.xhtml#a747c1e9f343af048794d204e2428bd33">ParserConsts::opbracket_chr()</a>, <a class="el" href="classTokenizer.xhtml#a736574152ebabf5ab26241104780c775">Tokenizer::PeekToken()</a>, <a class="el" href="namespaceParserConsts.xhtml#ae062440782c11184e4ef0a89a88d539a">ParserConsts::ptr()</a>, <a class="el" href="namespaceParserConsts.xhtml#a43b7df87954b2bd0bbc06e238a5c342c">ParserConsts::ptr_chr()</a>, <a class="el" href="classParserThread.xhtml#ad78eb9574aefe7f580aaa805f10fbe1b">ReadClsNames()</a>, <a class="el" href="classParserThread.xhtml#a6de60c378ea1d299684529374634be59">ResolveTemplateArgs()</a>, <a class="el" href="namespaceParserConsts.xhtml#a63a59607efefe61ca2032cf14d299f12">ParserConsts::semicolon()</a>, <a class="el" href="namespaceParserConsts.xhtml#ad6acba72a1e7e06c3a845142eb79813b">ParserConsts::space_chr()</a>, <a class="el" href="token_8h.xhtml#a7a47dce04185ce6008048622cc792f25a36d9f3721a93b1c4a60b1d50d0198af2">tkClass</a>, <a class="el" href="token_8h.xhtml#a7a47dce04185ce6008048622cc792f25acbcda253ac64b42fec3a2e9183dbbd4a">tkTypedef</a>, <a class="el" href="parserthread_8cpp.xhtml#a1c9f8c7ecc64a760dc3ac03706556ea9">TRACE</a>, <a class="el" href="classToken.xhtml#a787d1657c9c37329f8f18223aa4d8e8e">Token::Trim()</a>, and <a class="el" href="classTokenizer.xhtml#ac7f992387098dd3a486a9c994c9d5d7f">Tokenizer::UngetToken()</a>.</p>

<p>Referenced by <a class="el" href="classParserThread.xhtml#a991cc89e41f0fbff132e3f09585ea70d">DoParse()</a>.</p>

</div>
</div>
<a class="anchor" id="ae845814e7a52cd585d77065bc3c8d6cb"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void ParserThread::HandleUndefs </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>handle the statement: #undef XXXXX </p>

<p>References <a class="el" href="classTokenTree.xhtml#ab6d70bb825fcd757400cc4fb4baa24a7">TokenTree::erase()</a>, <a class="el" href="classTokenizer.xhtml#a60cb0bbabbc5c926ae8d8c2cd1dcdd50">Tokenizer::GetState()</a>, <a class="el" href="classTokenizer.xhtml#ac7addae7ad10df1c1550739eaf786d89">Tokenizer::GetToken()</a>, <a class="el" href="classParserThread.xhtml#a873fc088c4c8373ac41b407d65885902">m_Tokenizer</a>, <a class="el" href="classParserThread.xhtml#ac98620ec8d07c3515805f59fabd84762">m_TokenTree</a>, <a class="el" href="classTokenizer.xhtml#a0d9b0da5d3c5a5a82772fa181687deb3">Tokenizer::SetState()</a>, <a class="el" href="classTokenizer.xhtml#ab767d45e38396a43059010e7b2721fea">Tokenizer::SkipToEOL()</a>, <a class="el" href="token_8h.xhtml#a7a47dce04185ce6008048622cc792f25aa0ca06d013acd15e8fd2be8cb57c2f20">tkMacroDef</a>, <a class="el" href="classParserThread.xhtml#a080e2d03d7ca0bdcb1552d4aa87c4839">TokenExists()</a>, and <a class="el" href="tokenizer_8h.xhtml#a5b1175f256359a25a7374d4ab1e5f845a80da3efdca4e1162abce8315798a8791">tsReadRawExpression</a>.</p>

<p>Referenced by <a class="el" href="classParserThread.xhtml#a991cc89e41f0fbff132e3f09585ea70d">DoParse()</a>.</p>

</div>
</div>
<a class="anchor" id="abda91d29be83e7900ad7a5c18cfe6435"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool ParserThread::InitTokenizer </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>initialize the m_Buffer, load from local file or use a buffer in memory </p>

<p>References <a class="el" href="safedelete_8h.xhtml#af855c31ddf331947121e188b8bb631c2">Delete()</a>, <a class="el" href="structParserThreadOptions.xhtml#aa3949bbba3a55c05d99086458f2b586f">ParserThreadOptions::fileOfBuffer</a>, <a class="el" href="classTokenizer.xhtml#aa5d2000b5492f2c4e603ccddaac56522">Tokenizer::Init()</a>, <a class="el" href="classTokenizer.xhtml#ad9e5082fade9bdcc47bf90f483a37f69">Tokenizer::InitFromBuffer()</a>, <a class="el" href="structParserThreadOptions.xhtml#ad09ae23e329d28ca87ab1511de2de161">ParserThreadOptions::initLineOfBuffer</a>, <a class="el" href="classTokenTree.xhtml#aafddf7763095b77d63b2f289724876a5">TokenTree::InsertFileOrGetIndex()</a>, <a class="el" href="structParserThreadOptions.xhtml#a5f75bb53f1c0236df8949ef181c3a580">ParserThreadOptions::loader</a>, <a class="el" href="classParserThread.xhtml#a93dabef3412255dc18b01b6febe14351">m_Buffer</a>, <a class="el" href="classParserThread.xhtml#a48ca1fbcfd78c24fab7f443ee5769e32">m_FileIdx</a>, <a class="el" href="classParserThread.xhtml#ad22d91c9d632db244f2342b00f9b8add">m_Filename</a>, <a class="el" href="classParserThread.xhtml#a22516f9ecb0b957f4abb2ad83e8f0feb">m_FileSize</a>, <a class="el" href="classParserThread.xhtml#a3a0e6a3565eec243026e95e2003702fd">m_IsBuffer</a>, <a class="el" href="classParserThread.xhtml#a12f6ad0e78e4cc8d914bc7d6e9454863">m_Options</a>, <a class="el" href="classParserThread.xhtml#a873fc088c4c8373ac41b407d65885902">m_Tokenizer</a>, <a class="el" href="classParserThread.xhtml#ac98620ec8d07c3515805f59fabd84762">m_TokenTree</a>, and <a class="el" href="parserthread_8cpp.xhtml#a1c9f8c7ecc64a760dc3ac03706556ea9">TRACE</a>.</p>

<p>Referenced by <a class="el" href="classParserThread.xhtml#a87e5624dfc192efb0bba2d69f4be7214">Parse()</a>.</p>

</div>
</div>
<a class="anchor" id="a4d7fd6f0ea1cf357f65af69a16a8ef48"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool ParserThread::IsStillAlive </td>
          <td>(</td>
          <td class="paramtype">const wxString &amp;&#160;</td>
          <td class="paramname"><em>funcInfo</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Only for debug </p>

<p>References <a class="el" href="classcbThreadedTask.xhtml#a4df205663364bfc9e5d0a4c4b4e5eb34">cbThreadedTask::TestDestroy()</a>, and <a class="el" href="parserthread_8cpp.xhtml#a1c9f8c7ecc64a760dc3ac03706556ea9">TRACE</a>.</p>

</div>
</div>
<a class="anchor" id="a87e5624dfc192efb0bba2d69f4be7214"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool ParserThread::Parse </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Do the main job (syntax analysis) here </p>

<p>References <a class="el" href="classParserThread.xhtml#a991cc89e41f0fbff132e3f09585ea70d">DoParse()</a>, <a class="el" href="classTokenTree.xhtml#a41a23efad5eee3fedde7b7c9e37db706">TokenTree::FlagFileAsParsed()</a>, <a class="el" href="classParserThread.xhtml#abda91d29be83e7900ad7a5c18cfe6435">InitTokenizer()</a>, <a class="el" href="parserthread_8cpp.xhtml#af50a854374d3749ee0d47aa3a18e6ae5">IS_ALIVE</a>, <a class="el" href="classTokenizer.xhtml#aa13432af2028be6fbc3a82ea0ae4ed6c">Tokenizer::IsOK()</a>, <a class="el" href="classParserThread.xhtml#a48ca1fbcfd78c24fab7f443ee5769e32">m_FileIdx</a>, <a class="el" href="classParserThread.xhtml#ad22d91c9d632db244f2342b00f9b8add">m_Filename</a>, <a class="el" href="classParserThread.xhtml#a12f6ad0e78e4cc8d914bc7d6e9454863">m_Options</a>, <a class="el" href="classParserThread.xhtml#a723230e744d109f4881b31b3eb183fe7">m_ParsingTypedef</a>, <a class="el" href="classParserThread.xhtml#a873fc088c4c8373ac41b407d65885902">m_Tokenizer</a>, <a class="el" href="classParserThread.xhtml#ac98620ec8d07c3515805f59fabd84762">m_TokenTree</a>, <a class="el" href="classTokenTree.xhtml#a61d24e9e71b7bea8bba4923c2e627fc4">TokenTree::ReserveFileForParsing()</a>, <a class="el" href="parserthread_8cpp.xhtml#a1c9f8c7ecc64a760dc3ac03706556ea9">TRACE</a>, and <a class="el" href="structParserThreadOptions.xhtml#af74517ab1b1e2c54f2480d2f36f1ede1">ParserThreadOptions::useBuffer</a>.</p>

<p>Referenced by <a class="el" href="classParserThread.xhtml#a37f1420aefc6d522030a93283d965515">Execute()</a>, <a class="el" href="classParser.xhtml#a58fb7a53e004350257a8456b90b98ad0">Parser::Parse()</a>, <a class="el" href="classParserBase.xhtml#a5cbc8ea6a65b180a665874280372dd1c">ParserBase::ParseBuffer()</a>, <a class="el" href="classParser.xhtml#aac6db2d4ee8b2bbd1c1001579a9e666b">Parser::ParseBuffer()</a>, <a class="el" href="classParser.xhtml#a2b85a22a75aee829bf43d868db254e42">Parser::ParseBufferForFunctions()</a>, and <a class="el" href="classParserBase.xhtml#a9fd086e9a8919884ad6dd7adbc4bc979">ParserBase::Reparse()</a>.</p>

</div>
</div>
<a class="anchor" id="a7a2c99d6130cdb0df26472b6cc8b6b16"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool ParserThread::ParseBufferForNamespaces </td>
          <td>(</td>
          <td class="paramtype">const wxString &amp;&#160;</td>
          <td class="paramname"><em>buffer</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="parserthread_8h.xhtml#adc7acf1313fbbb9b63b163e550d8c439">NameSpaceVec</a> &amp;&#160;</td>
          <td class="paramname"><em>result</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Get the context "namespace XXX { ... }" directive. It is used to find the initial search scope before CC prompt a suggestion list. Need a critical section locker before call this function! </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">buffer</td><td>wxString to be parsed. </td></tr>
    <tr><td class="paramname">result</td><td>vector containing all the namespace names. </td></tr>
  </table>
  </dd>
</dl>

<p>References <a class="el" href="namespaceParserConsts.xhtml#ab87f8f74e3708d33dd53e26a5f5d46d7">ParserConsts::clbrace()</a>, <a class="el" href="namespaceParserConsts.xhtml#a59b23e0ca2ff0bf15d9fb263a2f6386c">ParserConsts::dcolon()</a>, <a class="el" href="parserthread_8h.xhtml#aa2f9d5ca41e7031348bca1b53ff9ad13">NameSpace::EndLine</a>, <a class="el" href="namespaceParserConsts.xhtml#a29953e1af3671f70f51ce9f27fc0cc6b">ParserConsts::equals()</a>, <a class="el" href="classTokenizer.xhtml#ad7093d8d59e2073b0312fba06465484c">Tokenizer::GetLineNumber()</a>, <a class="el" href="classTokenizer.xhtml#ac7addae7ad10df1c1550739eaf786d89">Tokenizer::GetToken()</a>, <a class="el" href="classTokenizer.xhtml#ad9e5082fade9bdcc47bf90f483a37f69">Tokenizer::InitFromBuffer()</a>, <a class="el" href="parserthread_8cpp.xhtml#af50a854374d3749ee0d47aa3a18e6ae5">IS_ALIVE</a>, <a class="el" href="classTokenizer.xhtml#aa13432af2028be6fbc3a82ea0ae4ed6c">Tokenizer::IsOK()</a>, <a class="el" href="namespaceParserConsts.xhtml#a858f39776866c967be554ef777e217b8">ParserConsts::kw_namespace()</a>, <a class="el" href="namespaceParserConsts.xhtml#a6ade5b96d40e8ce022c6b703c3a77d38">ParserConsts::kw_using()</a>, <a class="el" href="classParserThread.xhtml#a723230e744d109f4881b31b3eb183fe7">m_ParsingTypedef</a>, <a class="el" href="classParserThread.xhtml#a873fc088c4c8373ac41b407d65885902">m_Tokenizer</a>, <a class="el" href="parserthread_8h.xhtml#ab0c1ef019a3e0da3669fb2ea98a470fe">NameSpace::Name</a>, <a class="el" href="classTokenizer.xhtml#a2eca266878979398035defc786898aab">Tokenizer::NotEOF()</a>, <a class="el" href="namespaceParserConsts.xhtml#ae661129bf96eb8f6eb2f29e3f0fab551">ParserConsts::opbrace()</a>, <a class="el" href="classTokenizer.xhtml#a736574152ebabf5ab26241104780c775">Tokenizer::PeekToken()</a>, <a class="el" href="namespaceParserConsts.xhtml#af8f6800871ba55b516e99da06105b69c">ParserConsts::semicolonclbrace()</a>, <a class="el" href="classTokenizer.xhtml#a0d9b0da5d3c5a5a82772fa181687deb3">Tokenizer::SetState()</a>, <a class="el" href="classParserThread.xhtml#a65973704432137e051aec1541d3d7236">SkipBlock()</a>, <a class="el" href="classParserThread.xhtml#a3324c3f8b45443f087071a758676134a">SkipToOneOfChars()</a>, <a class="el" href="parserthread_8h.xhtml#ab08c63e9f0119a0e891afc0239782cb1">NameSpace::StartLine</a>, <a class="el" href="tokenizer_8h.xhtml#a5b1175f256359a25a7374d4ab1e5f845ada3140476ec623f378e679cde037b2ce">tsSkipNone</a>, and <a class="el" href="tokenizer_8h.xhtml#a5b1175f256359a25a7374d4ab1e5f845ac3caeb8004b72c8bdcad39b685ad0401">tsSkipUnWanted</a>.</p>

<p>Referenced by <a class="el" href="classParser.xhtml#a17e5c3945696cffb3c8972d08b0a8c28">Parser::ParseBufferForNamespaces()</a>.</p>

</div>
</div>
<a class="anchor" id="a4ab0b49d18939e1879539d2de19e2aab"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool ParserThread::ParseBufferForUsingNamespace </td>
          <td>(</td>
          <td class="paramtype">const wxString &amp;&#160;</td>
          <td class="paramname"><em>buffer</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">wxArrayString &amp;&#160;</td>
          <td class="paramname"><em>result</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Get the context "using namespace XXX" directive. It is used to find the initial search scope before CC prompt a suggestion list. Need a critical section locker before call this function! </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">buffer</td><td>wxString to be parsed. </td></tr>
    <tr><td class="paramname">result</td><td>the wxArrayString contains all the namespace names. </td></tr>
  </table>
  </dd>
</dl>

<p>References <a class="el" href="structParserThreadOptions.xhtml#a9a5729a1137fa5301a025023d1f9be0c">ParserThreadOptions::bufferSkipBlocks</a>, <a class="el" href="namespaceParserConsts.xhtml#a59b23e0ca2ff0bf15d9fb263a2f6386c">ParserConsts::dcolon()</a>, <a class="el" href="classTokenizer.xhtml#ac7addae7ad10df1c1550739eaf786d89">Tokenizer::GetToken()</a>, <a class="el" href="classTokenizer.xhtml#ad9e5082fade9bdcc47bf90f483a37f69">Tokenizer::InitFromBuffer()</a>, <a class="el" href="parserthread_8cpp.xhtml#af50a854374d3749ee0d47aa3a18e6ae5">IS_ALIVE</a>, <a class="el" href="classTokenizer.xhtml#aa13432af2028be6fbc3a82ea0ae4ed6c">Tokenizer::IsOK()</a>, <a class="el" href="namespaceParserConsts.xhtml#a858f39776866c967be554ef777e217b8">ParserConsts::kw_namespace()</a>, <a class="el" href="namespaceParserConsts.xhtml#a6ade5b96d40e8ce022c6b703c3a77d38">ParserConsts::kw_using()</a>, <a class="el" href="classParserThread.xhtml#ac2cfec245d5d63859fa4435e8c7f9cb2">m_EncounteredNamespaces</a>, <a class="el" href="classParserThread.xhtml#aee2522718b35962d760275129a503b5f">m_EncounteredTypeNamespaces</a>, <a class="el" href="classParserThread.xhtml#af14ba3b010d6ba1988b7c37f395cca0e">m_LastUnnamedTokenName</a>, <a class="el" href="classParserThread.xhtml#a12f6ad0e78e4cc8d914bc7d6e9454863">m_Options</a>, <a class="el" href="classParserThread.xhtml#a723230e744d109f4881b31b3eb183fe7">m_ParsingTypedef</a>, <a class="el" href="classParserThread.xhtml#a730cd9ca1c862f4046e9d12e786005c5">m_Str</a>, <a class="el" href="classParserThread.xhtml#a873fc088c4c8373ac41b407d65885902">m_Tokenizer</a>, <a class="el" href="classTokenizer.xhtml#a2eca266878979398035defc786898aab">Tokenizer::NotEOF()</a>, <a class="el" href="namespaceParserConsts.xhtml#ae661129bf96eb8f6eb2f29e3f0fab551">ParserConsts::opbrace()</a>, <a class="el" href="classTokenizer.xhtml#a736574152ebabf5ab26241104780c775">Tokenizer::PeekToken()</a>, <a class="el" href="namespaceParserConsts.xhtml#af8f6800871ba55b516e99da06105b69c">ParserConsts::semicolonclbrace()</a>, <a class="el" href="classParserThread.xhtml#a65973704432137e051aec1541d3d7236">SkipBlock()</a>, and <a class="el" href="classParserThread.xhtml#a3324c3f8b45443f087071a758676134a">SkipToOneOfChars()</a>.</p>

<p>Referenced by <a class="el" href="classParser.xhtml#ae409a924afc0d76c3d1145c3b92ba699">Parser::ParseBufferForUsingNamespace()</a>.</p>

</div>
</div>
<a class="anchor" id="ad78eb9574aefe7f580aaa805f10fbe1b"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool ParserThread::ReadClsNames </td>
          <td>(</td>
          <td class="paramtype">wxString &amp;&#160;</td>
          <td class="paramname"><em>ancestor</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>handle class names, e.g., the code below typedef class AAA{ int m_a; int m_b; } BBB,CCC; </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">ancestor</td><td>class name = "AAA" this function reads the following "BBB" and "CCC", and regard them as derived classes of "AAA" </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>True, if token was handled, false, if an unexpected token was read. </dd></dl>

<p>References <a class="el" href="namespaceParserConsts.xhtml#a92e7853fd29d63c18fed66e6dc73698f">ParserConsts::comma()</a>, <a class="el" href="classCCLogger.xhtml#aa64a8ddd35ee6847500ee8afa9905d07">CCLogger::DebugLog()</a>, <a class="el" href="classParserThread.xhtml#ae1def46bdb504975217819bb1049d9fd">DoAddToken()</a>, <a class="el" href="logmanager_8h.xhtml#afcd50562b2d380a60ad9e8b56dddc72d">F()</a>, <a class="el" href="parserthread_8cpp.xhtml#ae14669083d1e18953bc5f5b1325b6bc1">g_UnnamedSymbol</a>, <a class="el" href="classCCLogger.xhtml#a8026c2410c4373264868a80352638508">CCLogger::Get()</a>, <a class="el" href="classTokenizer.xhtml#a37bada75b07c120619498b10db279698">Tokenizer::GetFilename()</a>, <a class="el" href="classTokenizer.xhtml#ad7093d8d59e2073b0312fba06465484c">Tokenizer::GetLineNumber()</a>, <a class="el" href="classTokenizer.xhtml#ac7addae7ad10df1c1550739eaf786d89">Tokenizer::GetToken()</a>, <a class="el" href="parserthread_8cpp.xhtml#af50a854374d3749ee0d47aa3a18e6ae5">IS_ALIVE</a>, <a class="el" href="classToken.xhtml#ae3ff5d967254d3dc7578735b4bcdffac">Token::m_AncestorsString</a>, <a class="el" href="classParserThread.xhtml#a298741b1575002b21418de8b63e37761">m_LastParent</a>, <a class="el" href="classToken.xhtml#a66d4391491a9244d9c0e060045d9cdee">Token::m_Name</a>, <a class="el" href="classParserThread.xhtml#a9dc59ce4939ad8128201819181b7dc87">m_PointerOrRef</a>, <a class="el" href="classParserThread.xhtml#a730cd9ca1c862f4046e9d12e786005c5">m_Str</a>, <a class="el" href="classParserThread.xhtml#a873fc088c4c8373ac41b407d65885902">m_Tokenizer</a>, <a class="el" href="namespaceParserConsts.xhtml#ae062440782c11184e4ef0a89a88d539a">ParserConsts::ptr()</a>, <a class="el" href="classParserThread.xhtml#a10450ce60ee20a1a7964b51660fb3af9">RefineAnonymousTypeToken()</a>, <a class="el" href="namespaceParserConsts.xhtml#a63a59607efefe61ca2032cf14d299f12">ParserConsts::semicolon()</a>, <a class="el" href="token_8h.xhtml#a7a47dce04185ce6008048622cc792f25a36d9f3721a93b1c4a60b1d50d0198af2">tkClass</a>, <a class="el" href="token_8h.xhtml#a7a47dce04185ce6008048622cc792f25acbcda253ac64b42fec3a2e9183dbbd4a">tkTypedef</a>, <a class="el" href="parserthread_8cpp.xhtml#a1c9f8c7ecc64a760dc3ac03706556ea9">TRACE</a>, <a class="el" href="namespaceParserConsts.xhtml#a15dd62576c69e2e47962beb590b6089a">ParserConsts::underscore_chr()</a>, and <a class="el" href="classTokenizer.xhtml#ac7f992387098dd3a486a9c994c9d5d7f">Tokenizer::UngetToken()</a>.</p>

<p>Referenced by <a class="el" href="classParserThread.xhtml#ac899b2ea7761e46bb1f0d061f4d54691">HandleClass()</a>, and <a class="el" href="classParserThread.xhtml#aab08606cca9480bc978259ef8afc170d">HandleTypedef()</a>.</p>

</div>
</div>
<a class="anchor" id="ae5961cd32c994fa68fec25baa4ee053a"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool ParserThread::ReadVarNames </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>eg: class ClassA{...} varA, varB, varC This function will read the "varA, varB, varC" </p><dl class="section return"><dt>Returns</dt><dd>True, if token was handled, false, if an unexpected token was read. </dd></dl>

<p>References <a class="el" href="namespaceParserConsts.xhtml#a92e7853fd29d63c18fed66e6dc73698f">ParserConsts::comma()</a>, <a class="el" href="classCCLogger.xhtml#aa64a8ddd35ee6847500ee8afa9905d07">CCLogger::DebugLog()</a>, <a class="el" href="classParserThread.xhtml#ae1def46bdb504975217819bb1049d9fd">DoAddToken()</a>, <a class="el" href="logmanager_8h.xhtml#afcd50562b2d380a60ad9e8b56dddc72d">F()</a>, <a class="el" href="parserthread_8cpp.xhtml#ae14669083d1e18953bc5f5b1325b6bc1">g_UnnamedSymbol</a>, <a class="el" href="classCCLogger.xhtml#a8026c2410c4373264868a80352638508">CCLogger::Get()</a>, <a class="el" href="classTokenizer.xhtml#a37bada75b07c120619498b10db279698">Tokenizer::GetFilename()</a>, <a class="el" href="classTokenizer.xhtml#ad7093d8d59e2073b0312fba06465484c">Tokenizer::GetLineNumber()</a>, <a class="el" href="classTokenizer.xhtml#ac7addae7ad10df1c1550739eaf786d89">Tokenizer::GetToken()</a>, <a class="el" href="parserthread_8cpp.xhtml#af50a854374d3749ee0d47aa3a18e6ae5">IS_ALIVE</a>, <a class="el" href="classParserThread.xhtml#a298741b1575002b21418de8b63e37761">m_LastParent</a>, <a class="el" href="classToken.xhtml#a66d4391491a9244d9c0e060045d9cdee">Token::m_Name</a>, <a class="el" href="classParserThread.xhtml#a9dc59ce4939ad8128201819181b7dc87">m_PointerOrRef</a>, <a class="el" href="classParserThread.xhtml#a730cd9ca1c862f4046e9d12e786005c5">m_Str</a>, <a class="el" href="classParserThread.xhtml#a873fc088c4c8373ac41b407d65885902">m_Tokenizer</a>, <a class="el" href="namespaceParserConsts.xhtml#ae062440782c11184e4ef0a89a88d539a">ParserConsts::ptr()</a>, <a class="el" href="classParserThread.xhtml#a10450ce60ee20a1a7964b51660fb3af9">RefineAnonymousTypeToken()</a>, <a class="el" href="namespaceParserConsts.xhtml#a63a59607efefe61ca2032cf14d299f12">ParserConsts::semicolon()</a>, <a class="el" href="token_8h.xhtml#a7a47dce04185ce6008048622cc792f25a0e448bd8dcf479d8b55f0f9faf0594dd">tkUndefined</a>, <a class="el" href="token_8h.xhtml#a7a47dce04185ce6008048622cc792f25ae8e186b68231e5889c97c05a22bde507">tkVariable</a>, <a class="el" href="parserthread_8cpp.xhtml#a1c9f8c7ecc64a760dc3ac03706556ea9">TRACE</a>, and <a class="el" href="namespaceParserConsts.xhtml#a15dd62576c69e2e47962beb590b6089a">ParserConsts::underscore_chr()</a>.</p>

<p>Referenced by <a class="el" href="classParserThread.xhtml#ac899b2ea7761e46bb1f0d061f4d54691">HandleClass()</a>.</p>

</div>
</div>
<a class="anchor" id="a10450ce60ee20a1a7964b51660fb3af9"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void ParserThread::RefineAnonymousTypeToken </td>
          <td>(</td>
          <td class="paramtype">short int&#160;</td>
          <td class="paramname"><em>typeMask</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">wxString&#160;</td>
          <td class="paramname"><em>alise</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>change an anonymous(unnamed) token's name to a human readable name, the m_Str is expect to store the unnamed token name, for example, for parsing the code struct { int x; float y; } abc; when we first find an anonymous token, which is named _UnnamedStruct1_2, after this function call, the anonymous token name will becomes struct1_abc, and m_Str will changed from _UnnamedStruct1_2 to struct1_abc. </p>

<p>References <a class="el" href="classParserThread.xhtml#a48ca1fbcfd78c24fab7f443ee5769e32">m_FileIdx</a>, <a class="el" href="classToken.xhtml#acdc09e733cf2a6342767e714e8f86bc7">Token::m_IsAnonymous</a>, <a class="el" href="classParserThread.xhtml#a298741b1575002b21418de8b63e37761">m_LastParent</a>, <a class="el" href="classParserThread.xhtml#a730cd9ca1c862f4046e9d12e786005c5">m_Str</a>, <a class="el" href="classParserThread.xhtml#ac98620ec8d07c3515805f59fabd84762">m_TokenTree</a>, <a class="el" href="classTokenTree.xhtml#ac266862977c2f0bd5f9a0671588fb885">TokenTree::RenameToken()</a>, and <a class="el" href="classParserThread.xhtml#a080e2d03d7ca0bdcb1552d4aa87c4839">TokenExists()</a>.</p>

<p>Referenced by <a class="el" href="classParserThread.xhtml#ad78eb9574aefe7f580aaa805f10fbe1b">ReadClsNames()</a>, and <a class="el" href="classParserThread.xhtml#ae5961cd32c994fa68fec25baa4ee053a">ReadVarNames()</a>.</p>

</div>
</div>
<a class="anchor" id="a9821c59c7aa27f4f7dbf68255c5cb576"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void ParserThread::RemoveTemplateArgs </td>
          <td>(</td>
          <td class="paramtype">const wxString &amp;&#160;</td>
          <td class="paramname"><em>expr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">wxString &amp;&#160;</td>
          <td class="paramname"><em>expNoArgs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">wxString &amp;&#160;</td>
          <td class="paramname"><em>templateArgs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>remove template arguments from an expression example: 'std::list&lt;string&gt;' will be separated into 'std::list' and '&lt;string&gt;' </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">expr</td><td>Complete expression with template arguments </td></tr>
    <tr><td class="paramname">expNoArgs</td><td>Returned expression without template arguments </td></tr>
    <tr><td class="paramname">templateArgs</td><td>The removed template arguments </td></tr>
  </table>
  </dd>
</dl>

<p>References <a class="el" href="config-testsuite_8cpp.xhtml#a07f04e4e679e17d1f1c2f0a60cb74aaa">c</a>, <a class="el" href="namespaceParserConsts.xhtml#a633f9f7eb6888a6cf2cfe68613c70118">ParserConsts::gt()</a>, <a class="el" href="namespaceParserConsts.xhtml#aa6c9124fd797782aba0cd7ec0ea79264">ParserConsts::gt_chr()</a>, <a class="el" href="namespaceParserConsts.xhtml#adab3309c5f15cf14ab4bf77d0cad71b7">ParserConsts::lt()</a>, <a class="el" href="namespaceParserConsts.xhtml#a55e506cc5b0c01e1d07fbcec4d5df1c5">ParserConsts::lt_chr()</a>, and <a class="el" href="namespaceParserConsts.xhtml#a8f9d609333c9384cd9c3946d5cfcdadc">ParserConsts::space()</a>.</p>

<p>Referenced by <a class="el" href="classParserThread.xhtml#a2ef3649a1395a1c492f38e6b167582b4">HandleConditionalArguments()</a>, and <a class="el" href="classParserThread.xhtml#a650a609cbd9745ae8bad1951586a4bfa">HandleForLoopArguments()</a>.</p>

</div>
</div>
<a class="anchor" id="a6de60c378ea1d299684529374634be59"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void ParserThread::ResolveTemplateArgs </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classToken.xhtml">Token</a> *&#160;</td>
          <td class="paramname"><em>newToken</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>this function just associate the formal template argument to actual argument For example, we have such code: template &lt;typename t&gt;=""&gt; class AAA { T m_aaa;}; AAA&lt;int&gt; bbb; When handling the "bbb", we need to construct a TemplateMap, we store the map in the "bbb"'s member variable, which is "T"-&gt;"int". </p>

<p>References <a class="el" href="classToken.xhtml#a1b939df520f020469a4023c9e121040f">Token::m_FullType</a>, <a class="el" href="classToken.xhtml#a07aa7faf9dfc48200746529481bbb52c">Token::m_TemplateArgument</a>, <a class="el" href="classParserThread.xhtml#a1f6ab822b2b9d583a2a54e0d9f6352d6">m_TemplateArgument</a>, <a class="el" href="classToken.xhtml#afb3cc9939698b041246f40fed80b13d6">Token::m_TemplateMap</a>, <a class="el" href="classToken.xhtml#a678a1d3832e9d37502e6e9c332fac767">Token::m_TemplateType</a>, <a class="el" href="classParserThread.xhtml#a83d18bbc35e7a572e3434f8cf3f2e01e">ResolveTemplateMap()</a>, <a class="el" href="classParserThread.xhtml#aaa1d625d691f92d6b5a70932c1418441">SplitTemplateActualParameters()</a>, and <a class="el" href="parserthread_8cpp.xhtml#a1c9f8c7ecc64a760dc3ac03706556ea9">TRACE</a>.</p>

<p>Referenced by <a class="el" href="classParserThread.xhtml#a991cc89e41f0fbff132e3f09585ea70d">DoParse()</a>, <a class="el" href="classParserThread.xhtml#a2ef3649a1395a1c492f38e6b167582b4">HandleConditionalArguments()</a>, <a class="el" href="classParserThread.xhtml#a650a609cbd9745ae8bad1951586a4bfa">HandleForLoopArguments()</a>, <a class="el" href="classParserThread.xhtml#a5815c1b5dc1e6f26b69324f2f1842ee0">HandleFunction()</a>, and <a class="el" href="classParserThread.xhtml#aab08606cca9480bc978259ef8afc170d">HandleTypedef()</a>.</p>

</div>
</div>
<a class="anchor" id="a83d18bbc35e7a572e3434f8cf3f2e01e"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool ParserThread::ResolveTemplateMap </td>
          <td>(</td>
          <td class="paramtype">const wxString &amp;&#160;</td>
          <td class="paramname"><em>typeStr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const wxArrayString &amp;&#160;</td>
          <td class="paramname"><em>actuals</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="config-testsuite_8cpp.xhtml#a69836d004005a0d8f2eee22ec4257000">std::map</a>&lt; wxString, wxString &gt; &amp;&#160;</td>
          <td class="paramname"><em>results</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>associate formal argument with actual template argument </p>

<p>References <a class="el" href="classTokenTree.xhtml#a27fc4ea2842b026514e7b7f92a5e578e">TokenTree::at()</a>, <a class="el" href="classTokenTree.xhtml#ae91196dfdd19d71f08e38ea94a7b4998">TokenTree::FindMatches()</a>, <a class="el" href="classToken.xhtml#a678a1d3832e9d37502e6e9c332fac767">Token::m_TemplateType</a>, <a class="el" href="classParserThread.xhtml#ac98620ec8d07c3515805f59fabd84762">m_TokenTree</a>, <a class="el" href="token_8h.xhtml#a7a47dce04185ce6008048622cc792f25a36d9f3721a93b1c4a60b1d50d0198af2">tkClass</a>, and <a class="el" href="parserthread_8cpp.xhtml#a1c9f8c7ecc64a760dc3ac03706556ea9">TRACE</a>.</p>

<p>Referenced by <a class="el" href="classParserThread.xhtml#a6de60c378ea1d299684529374634be59">ResolveTemplateArgs()</a>.</p>

</div>
</div>
<a class="anchor" id="a019c7ff4c9f800ccc583a41699ab5b5e"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void ParserThread::SkipAngleBraces </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>skip the template argument </p>

<p>References <a class="el" href="classTokenizer.xhtml#a60cb0bbabbc5c926ae8d8c2cd1dcdd50">Tokenizer::GetState()</a>, <a class="el" href="classTokenizer.xhtml#ac7addae7ad10df1c1550739eaf786d89">Tokenizer::GetToken()</a>, <a class="el" href="namespaceParserConsts.xhtml#a633f9f7eb6888a6cf2cfe68613c70118">ParserConsts::gt()</a>, <a class="el" href="parserthread_8cpp.xhtml#af50a854374d3749ee0d47aa3a18e6ae5">IS_ALIVE</a>, <a class="el" href="namespaceParserConsts.xhtml#adab3309c5f15cf14ab4bf77d0cad71b7">ParserConsts::lt()</a>, <a class="el" href="classParserThread.xhtml#a873fc088c4c8373ac41b407d65885902">m_Tokenizer</a>, <a class="el" href="namespaceParserConsts.xhtml#a63a59607efefe61ca2032cf14d299f12">ParserConsts::semicolon()</a>, <a class="el" href="classTokenizer.xhtml#a0d9b0da5d3c5a5a82772fa181687deb3">Tokenizer::SetState()</a>, <a class="el" href="tokenizer_8h.xhtml#a5b1175f256359a25a7374d4ab1e5f845ada3140476ec623f378e679cde037b2ce">tsSkipNone</a>, and <a class="el" href="classTokenizer.xhtml#ac7f992387098dd3a486a9c994c9d5d7f">Tokenizer::UngetToken()</a>.</p>

<p>Referenced by <a class="el" href="classParserThread.xhtml#a991cc89e41f0fbff132e3f09585ea70d">DoParse()</a>, and <a class="el" href="classParserThread.xhtml#ac899b2ea7761e46bb1f0d061f4d54691">HandleClass()</a>.</p>

</div>
</div>
<a class="anchor" id="a65973704432137e051aec1541d3d7236"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void ParserThread::SkipBlock </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>skip blocks () [] {} &lt;&gt; </p>

<p>References <a class="el" href="classTokenizer.xhtml#ae64f675daaadc90087b35e31776c4aea">Tokenizer::GetNestingLevel()</a>, <a class="el" href="classTokenizer.xhtml#a60cb0bbabbc5c926ae8d8c2cd1dcdd50">Tokenizer::GetState()</a>, <a class="el" href="classTokenizer.xhtml#ac7addae7ad10df1c1550739eaf786d89">Tokenizer::GetToken()</a>, <a class="el" href="parserthread_8cpp.xhtml#af50a854374d3749ee0d47aa3a18e6ae5">IS_ALIVE</a>, <a class="el" href="classParserThread.xhtml#a873fc088c4c8373ac41b407d65885902">m_Tokenizer</a>, <a class="el" href="classTokenizer.xhtml#a0d9b0da5d3c5a5a82772fa181687deb3">Tokenizer::SetState()</a>, and <a class="el" href="tokenizer_8h.xhtml#a5b1175f256359a25a7374d4ab1e5f845ada3140476ec623f378e679cde037b2ce">tsSkipNone</a>.</p>

<p>Referenced by <a class="el" href="classParserThread.xhtml#a991cc89e41f0fbff132e3f09585ea70d">DoParse()</a>, <a class="el" href="classParserThread.xhtml#a5815c1b5dc1e6f26b69324f2f1842ee0">HandleFunction()</a>, <a class="el" href="classParserThread.xhtml#a7a2c99d6130cdb0df26472b6cc8b6b16">ParseBufferForNamespaces()</a>, and <a class="el" href="classParserThread.xhtml#a4ab0b49d18939e1879539d2de19e2aab">ParseBufferForUsingNamespace()</a>.</p>

</div>
</div>
<a class="anchor" id="a3324c3f8b45443f087071a758676134a"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">wxChar ParserThread::SkipToOneOfChars </td>
          <td>(</td>
          <td class="paramtype">const wxString &amp;&#160;</td>
          <td class="paramname"><em>chars</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>supportNesting</em> = <code>false</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>singleCharToken</em> = <code>true</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Continuously eat the tokens until we meet one of the matching characters </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">chars</td><td>wxString includes all the matching characters </td></tr>
    <tr><td class="paramname">supportNesting</td><td>if true, we need to consider the "{" and "}" nesting levels when skipping, </td></tr>
    <tr><td class="paramname">singleCharToken</td><td>if true, only single char tokens (like semicolon, brace etc.) are considered (speeds up parsing for queries like this) in this case, the function returned on a match by nesting/brace level preserved. </td></tr>
  </table>
  </dd>
</dl>

<p>References <a class="el" href="classTokenizer.xhtml#ae64f675daaadc90087b35e31776c4aea">Tokenizer::GetNestingLevel()</a>, <a class="el" href="classTokenizer.xhtml#ac7addae7ad10df1c1550739eaf786d89">Tokenizer::GetToken()</a>, <a class="el" href="parserthread_8cpp.xhtml#af50a854374d3749ee0d47aa3a18e6ae5">IS_ALIVE</a>, <a class="el" href="classParserThread.xhtml#a873fc088c4c8373ac41b407d65885902">m_Tokenizer</a>, and <a class="el" href="namespaceParserConsts.xhtml#aed1505247335b84bb95f2ba6d198099c">ParserConsts::null()</a>.</p>

<p>Referenced by <a class="el" href="classParserThread.xhtml#a997e91f1cbbf64ef9f8220e97dd7a240">CalcEnumExpression()</a>, <a class="el" href="classParserThread.xhtml#a991cc89e41f0fbff132e3f09585ea70d">DoParse()</a>, <a class="el" href="classParserThread.xhtml#a4a9c62b81b02895349a1633ff744e8f7">HandleEnum()</a>, <a class="el" href="classParserThread.xhtml#a5815c1b5dc1e6f26b69324f2f1842ee0">HandleFunction()</a>, <a class="el" href="classParserThread.xhtml#a11bacf859a9b5a1a02c161331b0278f4">HandleNamespace()</a>, <a class="el" href="classParserThread.xhtml#a7a2c99d6130cdb0df26472b6cc8b6b16">ParseBufferForNamespaces()</a>, and <a class="el" href="classParserThread.xhtml#a4ab0b49d18939e1879539d2de19e2aab">ParseBufferForUsingNamespace()</a>.</p>

</div>
</div>
<a class="anchor" id="aaa1d625d691f92d6b5a70932c1418441"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void ParserThread::SplitTemplateActualParameters </td>
          <td>(</td>
          <td class="paramtype">const wxString &amp;&#160;</td>
          <td class="paramname"><em>templateArgs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">wxArrayString &amp;&#160;</td>
          <td class="paramname"><em>actuals</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Split actual template argument list </p>

<p>References <a class="el" href="namespaceParserConsts.xhtml#a92e7853fd29d63c18fed66e6dc73698f">ParserConsts::comma()</a>, <a class="el" href="classParserThread.xhtml#adba07ce4471e49fd269aa612af53fdff">GetTemplateArgArray()</a>, <a class="el" href="namespaceParserConsts.xhtml#a633f9f7eb6888a6cf2cfe68613c70118">ParserConsts::gt()</a>, <a class="el" href="namespaceParserConsts.xhtml#adab3309c5f15cf14ab4bf77d0cad71b7">ParserConsts::lt()</a>, and <a class="el" href="parserthread_8cpp.xhtml#a1c9f8c7ecc64a760dc3ac03706556ea9">TRACE</a>.</p>

<p>Referenced by <a class="el" href="classParserThread.xhtml#a6de60c378ea1d299684529374634be59">ResolveTemplateArgs()</a>.</p>

</div>
</div>
<a class="anchor" id="a063f606371064cbf33004832013999bb"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void ParserThread::SplitTemplateFormalParameters </td>
          <td>(</td>
          <td class="paramtype">const wxString &amp;&#160;</td>
          <td class="paramname"><em>templateArgs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">wxArrayString &amp;&#160;</td>
          <td class="paramname"><em>formals</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Split formal template argument list </p>

<p>References <a class="el" href="classParserThread.xhtml#adba07ce4471e49fd269aa612af53fdff">GetTemplateArgArray()</a>, <a class="el" href="namespaceParserConsts.xhtml#a8c8ba3fc7f97c42d76089aaa420a7e64">ParserConsts::kw_class()</a>, and <a class="el" href="namespaceParserConsts.xhtml#a96c74adf2be7fe76e258fb1df8477798">ParserConsts::kw_typename()</a>.</p>

<p>Referenced by <a class="el" href="classParserThread.xhtml#ac899b2ea7761e46bb1f0d061f4d54691">HandleClass()</a>.</p>

</div>
</div>
<a class="anchor" id="a080e2d03d7ca0bdcb1552d4aa87c4839"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classToken.xhtml">Token</a> * ParserThread::TokenExists </td>
          <td>(</td>
          <td class="paramtype">const wxString &amp;&#160;</td>
          <td class="paramname"><em>name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classToken.xhtml">Token</a> *&#160;</td>
          <td class="paramname"><em>parent</em> = <code>0</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">short int&#160;</td>
          <td class="paramname"><em>kindMask</em> = <code>0xFFFF</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>if parent is 0, then global namespace will be used, all tokens under parent scope are searched </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">name</td><td>the search key string </td></tr>
    <tr><td class="paramname">parent</td><td>parent token pointer, we only search under the parent token scope </td></tr>
    <tr><td class="paramname">kindMask</td><td>filter for the result token, only the specified type of tokens were matched </td></tr>
  </table>
  </dd>
</dl>

<p>References <a class="el" href="classTokenTree.xhtml#a27fc4ea2842b026514e7b7f92a5e578e">TokenTree::at()</a>, <a class="el" href="classToken.xhtml#ad3a46f07f6d3d8851188695914a79907">Token::m_Index</a>, <a class="el" href="classParserThread.xhtml#ac98620ec8d07c3515805f59fabd84762">m_TokenTree</a>, <a class="el" href="classParserThread.xhtml#a287151a916e18a53f0a155001bc52685">m_UsedNamespacesIds</a>, and <a class="el" href="classTokenTree.xhtml#a17bd02412b63df67ac246f89c4ad7997">TokenTree::TokenExists()</a>.</p>

<p>Referenced by <a class="el" href="classParserThread.xhtml#ae1def46bdb504975217819bb1049d9fd">DoAddToken()</a>, <a class="el" href="classParserThread.xhtml#a1fa2f9d5e4348a8347e82cb563fc4074">FindTokenFromQueue()</a>, <a class="el" href="classParserThread.xhtml#a332fb74d8691e77680603e7d90af7029">GetClassFromMacro()</a>, <a class="el" href="classParserThread.xhtml#a234c534f952d9c654e5969fe134b23d9">GetRealTypeIfTokenIsMacro()</a>, <a class="el" href="classParserThread.xhtml#ac899b2ea7761e46bb1f0d061f4d54691">HandleClass()</a>, <a class="el" href="classParserThread.xhtml#a4a9c62b81b02895349a1633ff744e8f7">HandleEnum()</a>, <a class="el" href="classParserThread.xhtml#a11bacf859a9b5a1a02c161331b0278f4">HandleNamespace()</a>, <a class="el" href="classParserThread.xhtml#ae845814e7a52cd585d77065bc3c8d6cb">HandleUndefs()</a>, and <a class="el" href="classParserThread.xhtml#a10450ce60ee20a1a7964b51660fb3af9">RefineAnonymousTypeToken()</a>.</p>

</div>
</div>
<a class="anchor" id="a612783ffe0fbf6a5461fdec0bc9d2024"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classToken.xhtml">Token</a> * ParserThread::TokenExists </td>
          <td>(</td>
          <td class="paramtype">const wxString &amp;&#160;</td>
          <td class="paramname"><em>name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const wxString &amp;&#160;</td>
          <td class="paramname"><em>baseArgs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classToken.xhtml">Token</a> *&#160;</td>
          <td class="paramname"><em>parent</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="token_8h.xhtml#a7a47dce04185ce6008048622cc792f25">TokenKind</a>&#160;</td>
          <td class="paramname"><em>kind</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Support function overloading </p>

<p>References <a class="el" href="classTokenTree.xhtml#a27fc4ea2842b026514e7b7f92a5e578e">TokenTree::at()</a>, <a class="el" href="classToken.xhtml#ad3a46f07f6d3d8851188695914a79907">Token::m_Index</a>, <a class="el" href="classParserThread.xhtml#ac98620ec8d07c3515805f59fabd84762">m_TokenTree</a>, <a class="el" href="classParserThread.xhtml#a287151a916e18a53f0a155001bc52685">m_UsedNamespacesIds</a>, and <a class="el" href="classTokenTree.xhtml#a17bd02412b63df67ac246f89c4ad7997">TokenTree::TokenExists()</a>.</p>

</div>
</div>
<h2 class="groupheader">Member Data Documentation</h2>
<a class="anchor" id="a93dabef3412255dc18b01b6febe14351"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">wxString ParserThread::m_Buffer</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>a wxString holding the parsing buffer </p>

<p>Referenced by <a class="el" href="classParserThread.xhtml#adf623c35632e726ab847d300a6a3decc">GetFilename()</a>, and <a class="el" href="classParserThread.xhtml#abda91d29be83e7900ad7a5c18cfe6435">InitTokenizer()</a>.</p>

</div>
</div>
<a class="anchor" id="ac2cfec245d5d63859fa4435e8c7f9cb2"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::queue&lt;wxString&gt; ParserThread::m_EncounteredNamespaces</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>for member funcs implementation or a function declaration below eg: int ClassA::FunctionB(); EncounteredNamespaces is 'ClassA' </p>

<p>Referenced by <a class="el" href="classParserThread.xhtml#ae1def46bdb504975217819bb1049d9fd">DoAddToken()</a>, <a class="el" href="classParserThread.xhtml#a991cc89e41f0fbff132e3f09585ea70d">DoParse()</a>, <a class="el" href="classParserThread.xhtml#a5815c1b5dc1e6f26b69324f2f1842ee0">HandleFunction()</a>, and <a class="el" href="classParserThread.xhtml#a4ab0b49d18939e1879539d2de19e2aab">ParseBufferForUsingNamespace()</a>.</p>

</div>
</div>
<a class="anchor" id="aee2522718b35962d760275129a503b5f"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::queue&lt;wxString&gt; ParserThread::m_EncounteredTypeNamespaces</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>namespaces in function return types for a function declaration below: e.g.: ClassC::returnValue ClassA::FunctionB(); m_EncounteredTypeNamespaces is 'ClassC' </p>

<p>Referenced by <a class="el" href="classParserThread.xhtml#ae1def46bdb504975217819bb1049d9fd">DoAddToken()</a>, <a class="el" href="classParserThread.xhtml#a991cc89e41f0fbff132e3f09585ea70d">DoParse()</a>, <a class="el" href="classParserThread.xhtml#a5815c1b5dc1e6f26b69324f2f1842ee0">HandleFunction()</a>, and <a class="el" href="classParserThread.xhtml#a4ab0b49d18939e1879539d2de19e2aab">ParseBufferForUsingNamespace()</a>.</p>

</div>
</div>
<a class="anchor" id="a385d1c73705a0df9412dc501eb7d683a"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">size_t ParserThread::m_EnumUnnamedCount</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Referenced by <a class="el" href="classParserThread.xhtml#a4a9c62b81b02895349a1633ff744e8f7">HandleEnum()</a>.</p>

</div>
</div>
<a class="anchor" id="a48ca1fbcfd78c24fab7f443ee5769e32"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int ParserThread::m_FileIdx</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>source file index on the "file map tree" </p>

<p>Referenced by <a class="el" href="classParserThread.xhtml#ae1def46bdb504975217819bb1049d9fd">DoAddToken()</a>, <a class="el" href="classParserThread.xhtml#a1fa2f9d5e4348a8347e82cb563fc4074">FindTokenFromQueue()</a>, <a class="el" href="classParserThread.xhtml#ac899b2ea7761e46bb1f0d061f4d54691">HandleClass()</a>, <a class="el" href="classParserThread.xhtml#a4a9c62b81b02895349a1633ff744e8f7">HandleEnum()</a>, <a class="el" href="classParserThread.xhtml#a11bacf859a9b5a1a02c161331b0278f4">HandleNamespace()</a>, <a class="el" href="classParserThread.xhtml#abda91d29be83e7900ad7a5c18cfe6435">InitTokenizer()</a>, <a class="el" href="classParserThread.xhtml#a87e5624dfc192efb0bba2d69f4be7214">Parse()</a>, and <a class="el" href="classParserThread.xhtml#a10450ce60ee20a1a7964b51660fb3af9">RefineAnonymousTypeToken()</a>.</p>

</div>
</div>
<a class="anchor" id="ad22d91c9d632db244f2342b00f9b8add"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">wxString ParserThread::m_Filename</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>the file name of the parsing source </p>

<p>Referenced by <a class="el" href="classParserThread.xhtml#a5815c1b5dc1e6f26b69324f2f1842ee0">HandleFunction()</a>, <a class="el" href="classParserThread.xhtml#aa644c4bf5a650801606724f2d4cc90d5">HandleIncludes()</a>, <a class="el" href="classParserThread.xhtml#abda91d29be83e7900ad7a5c18cfe6435">InitTokenizer()</a>, and <a class="el" href="classParserThread.xhtml#a87e5624dfc192efb0bba2d69f4be7214">Parse()</a>.</p>

</div>
</div>
<a class="anchor" id="a22516f9ecb0b957f4abb2ad83e8f0feb"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int ParserThread::m_FileSize</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>file size, actually the length of the wxString </p>

<p>Referenced by <a class="el" href="classParserThread.xhtml#abda91d29be83e7900ad7a5c18cfe6435">InitTokenizer()</a>.</p>

</div>
</div>
<a class="anchor" id="a3a0e6a3565eec243026e95e2003702fd"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool ParserThread::m_IsBuffer</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>local file or buffer in memory </p>

<p>Referenced by <a class="el" href="classParserThread.xhtml#abda91d29be83e7900ad7a5c18cfe6435">InitTokenizer()</a>.</p>

</div>
</div>
<a class="anchor" id="a682f61a3eedc9c4bef77ba315cf31ed6"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool ParserThread::m_IsLocal</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>if true, means we are parsing a file which belongs to a C::B project, otherwise, we are parsing a file not belong to a C::B project(such as a system header file) </p>

<p>Referenced by <a class="el" href="classParserThread.xhtml#ae1def46bdb504975217819bb1049d9fd">DoAddToken()</a>, <a class="el" href="classParserThread.xhtml#a1fa2f9d5e4348a8347e82cb563fc4074">FindTokenFromQueue()</a>, and <a class="el" href="classParserThread.xhtml#aa644c4bf5a650801606724f2d4cc90d5">HandleIncludes()</a>.</p>

</div>
</div>
<a class="anchor" id="a298741b1575002b21418de8b63e37761"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classToken.xhtml">Token</a>* ParserThread::m_LastParent</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>parent <a class="el" href="classToken.xhtml">Token</a>, for example, when you are parsing in the class member variables, m_LastParent holds a pointer to the current context, which is a token holding class name </p>

<p>Referenced by <a class="el" href="classParserThread.xhtml#ae1def46bdb504975217819bb1049d9fd">DoAddToken()</a>, <a class="el" href="classParserThread.xhtml#a991cc89e41f0fbff132e3f09585ea70d">DoParse()</a>, <a class="el" href="classParserThread.xhtml#ac899b2ea7761e46bb1f0d061f4d54691">HandleClass()</a>, <a class="el" href="classParserThread.xhtml#ab55fd2bae9203888c0178c4df058636c">HandleDefines()</a>, <a class="el" href="classParserThread.xhtml#a4a9c62b81b02895349a1633ff744e8f7">HandleEnum()</a>, <a class="el" href="classParserThread.xhtml#a5815c1b5dc1e6f26b69324f2f1842ee0">HandleFunction()</a>, <a class="el" href="classParserThread.xhtml#a11bacf859a9b5a1a02c161331b0278f4">HandleNamespace()</a>, <a class="el" href="classParserThread.xhtml#aab08606cca9480bc978259ef8afc170d">HandleTypedef()</a>, <a class="el" href="classParserThread.xhtml#ad78eb9574aefe7f580aaa805f10fbe1b">ReadClsNames()</a>, <a class="el" href="classParserThread.xhtml#ae5961cd32c994fa68fec25baa4ee053a">ReadVarNames()</a>, and <a class="el" href="classParserThread.xhtml#a10450ce60ee20a1a7964b51660fb3af9">RefineAnonymousTypeToken()</a>.</p>

</div>
</div>
<a class="anchor" id="a8fc104996d43d1273d57bf438f8c9705"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="token_8h.xhtml#a51914652d471a4b2e79baaa727cef729">TokenScope</a> ParserThread::m_LastScope</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>this member define the scope type of member variables, which is: public, private protected or undefined </p>

<p>Referenced by <a class="el" href="classParserThread.xhtml#ae1def46bdb504975217819bb1049d9fd">DoAddToken()</a>, <a class="el" href="classParserThread.xhtml#a991cc89e41f0fbff132e3f09585ea70d">DoParse()</a>, <a class="el" href="classParserThread.xhtml#ac899b2ea7761e46bb1f0d061f4d54691">HandleClass()</a>, and <a class="el" href="classParserThread.xhtml#a11bacf859a9b5a1a02c161331b0278f4">HandleNamespace()</a>.</p>

</div>
</div>
<a class="anchor" id="aa0fd2109d3757aa454448ed5ffbc35b5"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">wxString ParserThread::m_LastToken</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>hold the previous token string </p>

<p>Referenced by <a class="el" href="classParserThread.xhtml#a991cc89e41f0fbff132e3f09585ea70d">DoParse()</a>.</p>

</div>
</div>
<a class="anchor" id="af14ba3b010d6ba1988b7c37f395cca0e"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">wxString ParserThread::m_LastUnnamedTokenName</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>TODO: describe me here </p>

<p>Referenced by <a class="el" href="classParserThread.xhtml#a991cc89e41f0fbff132e3f09585ea70d">DoParse()</a>, <a class="el" href="classParserThread.xhtml#ac899b2ea7761e46bb1f0d061f4d54691">HandleClass()</a>, <a class="el" href="classParserThread.xhtml#a4a9c62b81b02895349a1633ff744e8f7">HandleEnum()</a>, <a class="el" href="classParserThread.xhtml#aab08606cca9480bc978259ef8afc170d">HandleTypedef()</a>, and <a class="el" href="classParserThread.xhtml#a4ab0b49d18939e1879539d2de19e2aab">ParseBufferForUsingNamespace()</a>.</p>

</div>
</div>
<a class="anchor" id="a12f6ad0e78e4cc8d914bc7d6e9454863"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structParserThreadOptions.xhtml">ParserThreadOptions</a> ParserThread::m_Options</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>parser options, see the <a class="el" href="structParserThreadOptions.xhtml">ParserThreadOptions</a> structure </p>

<p>Referenced by <a class="el" href="classParserThread.xhtml#ae1def46bdb504975217819bb1049d9fd">DoAddToken()</a>, <a class="el" href="classParserThread.xhtml#a991cc89e41f0fbff132e3f09585ea70d">DoParse()</a>, <a class="el" href="classParserThread.xhtml#ac899b2ea7761e46bb1f0d061f4d54691">HandleClass()</a>, <a class="el" href="classParserThread.xhtml#a4a9c62b81b02895349a1633ff744e8f7">HandleEnum()</a>, <a class="el" href="classParserThread.xhtml#a5815c1b5dc1e6f26b69324f2f1842ee0">HandleFunction()</a>, <a class="el" href="classParserThread.xhtml#aa644c4bf5a650801606724f2d4cc90d5">HandleIncludes()</a>, <a class="el" href="classParserThread.xhtml#a36ab4001b8842ae1bea7452474aa63c3">HandleMacroExpansion()</a>, <a class="el" href="classParserThread.xhtml#abda91d29be83e7900ad7a5c18cfe6435">InitTokenizer()</a>, <a class="el" href="classParserThread.xhtml#a87e5624dfc192efb0bba2d69f4be7214">Parse()</a>, <a class="el" href="classParserThread.xhtml#a4ab0b49d18939e1879539d2de19e2aab">ParseBufferForUsingNamespace()</a>, and <a class="el" href="classParserThread.xhtml#a3162055a66112bef67ca7ac94a01a077">~ParserThread()</a>.</p>

</div>
</div>
<a class="anchor" id="a6fe40c30236e32f403c8fb0368162d4d"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classParserBase.xhtml">ParserBase</a>* ParserThread::m_Parent</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>a pointer to its parent <a class="el" href="classParser.xhtml" title="Parser class holds all the tokens of a C::B project. ">Parser</a> object, the Parserthread class has two place to communicate with <a class="el" href="classParser.xhtml" title="Parser class holds all the tokens of a C::B project. ">Parser</a> class. m_Parent-&gt;ParseFile() when it see an include directive. </p>

<p>Referenced by <a class="el" href="classParserThread.xhtml#aa644c4bf5a650801606724f2d4cc90d5">HandleIncludes()</a>.</p>

</div>
</div>
<a class="anchor" id="a723230e744d109f4881b31b3eb183fe7"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool ParserThread::m_ParsingTypedef</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>this makes a difference in unnamed class/struct/enum handling </p>

<p>Referenced by <a class="el" href="classParserThread.xhtml#ac899b2ea7761e46bb1f0d061f4d54691">HandleClass()</a>, <a class="el" href="classParserThread.xhtml#a4a9c62b81b02895349a1633ff744e8f7">HandleEnum()</a>, <a class="el" href="classParserThread.xhtml#aab08606cca9480bc978259ef8afc170d">HandleTypedef()</a>, <a class="el" href="classParserThread.xhtml#a87e5624dfc192efb0bba2d69f4be7214">Parse()</a>, <a class="el" href="classParserThread.xhtml#a7a2c99d6130cdb0df26472b6cc8b6b16">ParseBufferForNamespaces()</a>, and <a class="el" href="classParserThread.xhtml#a4ab0b49d18939e1879539d2de19e2aab">ParseBufferForUsingNamespace()</a>.</p>

</div>
</div>
<a class="anchor" id="a9dc59ce4939ad8128201819181b7dc87"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">wxString ParserThread::m_PointerOrRef</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>a pointer indicator or a references </p>

<p>Referenced by <a class="el" href="classParserThread.xhtml#ae1def46bdb504975217819bb1049d9fd">DoAddToken()</a>, <a class="el" href="classParserThread.xhtml#a991cc89e41f0fbff132e3f09585ea70d">DoParse()</a>, <a class="el" href="classParserThread.xhtml#a2ef3649a1395a1c492f38e6b167582b4">HandleConditionalArguments()</a>, <a class="el" href="classParserThread.xhtml#a650a609cbd9745ae8bad1951586a4bfa">HandleForLoopArguments()</a>, <a class="el" href="classParserThread.xhtml#aab08606cca9480bc978259ef8afc170d">HandleTypedef()</a>, <a class="el" href="classParserThread.xhtml#ad78eb9574aefe7f580aaa805f10fbe1b">ReadClsNames()</a>, and <a class="el" href="classParserThread.xhtml#ae5961cd32c994fa68fec25baa4ee053a">ReadVarNames()</a>.</p>

</div>
</div>
<a class="anchor" id="a730cd9ca1c862f4046e9d12e786005c5"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">wxString ParserThread::m_Str</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>This is a very important member variables! It serves as a type stack, eg: parsing the statement: "int wxString const varA;" we determine 'varA' is a token variable, until we searching to the last semicolon. every token before 'varA' will be pushed to m_Str, at this time m_Str = "int wxString const" </p>

<p>Referenced by <a class="el" href="classParserThread.xhtml#ae1def46bdb504975217819bb1049d9fd">DoAddToken()</a>, <a class="el" href="classParserThread.xhtml#a991cc89e41f0fbff132e3f09585ea70d">DoParse()</a>, <a class="el" href="classParserThread.xhtml#a17fc94b564d71faf3a3b1ccb2708e06a">GetTokenBaseType()</a>, <a class="el" href="classParserThread.xhtml#ac899b2ea7761e46bb1f0d061f4d54691">HandleClass()</a>, <a class="el" href="classParserThread.xhtml#a2ef3649a1395a1c492f38e6b167582b4">HandleConditionalArguments()</a>, <a class="el" href="classParserThread.xhtml#ab55fd2bae9203888c0178c4df058636c">HandleDefines()</a>, <a class="el" href="classParserThread.xhtml#a4a9c62b81b02895349a1633ff744e8f7">HandleEnum()</a>, <a class="el" href="classParserThread.xhtml#a650a609cbd9745ae8bad1951586a4bfa">HandleForLoopArguments()</a>, <a class="el" href="classParserThread.xhtml#a5815c1b5dc1e6f26b69324f2f1842ee0">HandleFunction()</a>, <a class="el" href="classParserThread.xhtml#aab08606cca9480bc978259ef8afc170d">HandleTypedef()</a>, <a class="el" href="classParserThread.xhtml#a4ab0b49d18939e1879539d2de19e2aab">ParseBufferForUsingNamespace()</a>, <a class="el" href="classParserThread.xhtml#ad78eb9574aefe7f580aaa805f10fbe1b">ReadClsNames()</a>, <a class="el" href="classParserThread.xhtml#ae5961cd32c994fa68fec25baa4ee053a">ReadVarNames()</a>, and <a class="el" href="classParserThread.xhtml#a10450ce60ee20a1a7964b51660fb3af9">RefineAnonymousTypeToken()</a>.</p>

</div>
</div>
<a class="anchor" id="a53d1161f115003c2a071ed8af42e72b4"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">size_t ParserThread::m_StructUnionUnnamedCount</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Referenced by <a class="el" href="classParserThread.xhtml#ac899b2ea7761e46bb1f0d061f4d54691">HandleClass()</a>.</p>

</div>
</div>
<a class="anchor" id="a1f6ab822b2b9d583a2a54e0d9f6352d6"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">wxString ParserThread::m_TemplateArgument</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>holds current template argument(s) when a template occurs </p>

<p>Referenced by <a class="el" href="classParserThread.xhtml#ae1def46bdb504975217819bb1049d9fd">DoAddToken()</a>, <a class="el" href="classParserThread.xhtml#a991cc89e41f0fbff132e3f09585ea70d">DoParse()</a>, <a class="el" href="classParserThread.xhtml#a83a5aafc48794c0b7855cc40c5ccc6cf">GetTemplateArgs()</a>, <a class="el" href="classParserThread.xhtml#ac899b2ea7761e46bb1f0d061f4d54691">HandleClass()</a>, <a class="el" href="classParserThread.xhtml#a2ef3649a1395a1c492f38e6b167582b4">HandleConditionalArguments()</a>, <a class="el" href="classParserThread.xhtml#a650a609cbd9745ae8bad1951586a4bfa">HandleForLoopArguments()</a>, <a class="el" href="classParserThread.xhtml#a5815c1b5dc1e6f26b69324f2f1842ee0">HandleFunction()</a>, <a class="el" href="classParserThread.xhtml#aab08606cca9480bc978259ef8afc170d">HandleTypedef()</a>, and <a class="el" href="classParserThread.xhtml#a6de60c378ea1d299684529374634be59">ResolveTemplateArgs()</a>.</p>

</div>
</div>
<a class="anchor" id="a873fc088c4c8373ac41b407d65885902"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classTokenizer.xhtml">Tokenizer</a> ParserThread::m_Tokenizer</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>if we regard the parserThread class as a syntax analyzer, then the <a class="el" href="classTokenizer.xhtml" title="This is just a simple lexer class. ">Tokenizer</a> class is regard as the lexer, which always feeds a wxString by calling m_Tokenizer.GetToken() </p>

<p>Referenced by <a class="el" href="classParserThread.xhtml#a997e91f1cbbf64ef9f8220e97dd7a240">CalcEnumExpression()</a>, <a class="el" href="classParserThread.xhtml#ae1def46bdb504975217819bb1049d9fd">DoAddToken()</a>, <a class="el" href="classParserThread.xhtml#a991cc89e41f0fbff132e3f09585ea70d">DoParse()</a>, <a class="el" href="classParserThread.xhtml#a83a5aafc48794c0b7855cc40c5ccc6cf">GetTemplateArgs()</a>, <a class="el" href="classParserThread.xhtml#ac899b2ea7761e46bb1f0d061f4d54691">HandleClass()</a>, <a class="el" href="classParserThread.xhtml#a2ef3649a1395a1c492f38e6b167582b4">HandleConditionalArguments()</a>, <a class="el" href="classParserThread.xhtml#ab55fd2bae9203888c0178c4df058636c">HandleDefines()</a>, <a class="el" href="classParserThread.xhtml#a4a9c62b81b02895349a1633ff744e8f7">HandleEnum()</a>, <a class="el" href="classParserThread.xhtml#a650a609cbd9745ae8bad1951586a4bfa">HandleForLoopArguments()</a>, <a class="el" href="classParserThread.xhtml#a5815c1b5dc1e6f26b69324f2f1842ee0">HandleFunction()</a>, <a class="el" href="classParserThread.xhtml#aa644c4bf5a650801606724f2d4cc90d5">HandleIncludes()</a>, <a class="el" href="classParserThread.xhtml#a36ab4001b8842ae1bea7452474aa63c3">HandleMacroExpansion()</a>, <a class="el" href="classParserThread.xhtml#a11bacf859a9b5a1a02c161331b0278f4">HandleNamespace()</a>, <a class="el" href="classParserThread.xhtml#aab08606cca9480bc978259ef8afc170d">HandleTypedef()</a>, <a class="el" href="classParserThread.xhtml#ae845814e7a52cd585d77065bc3c8d6cb">HandleUndefs()</a>, <a class="el" href="classParserThread.xhtml#abda91d29be83e7900ad7a5c18cfe6435">InitTokenizer()</a>, <a class="el" href="classParserThread.xhtml#a87e5624dfc192efb0bba2d69f4be7214">Parse()</a>, <a class="el" href="classParserThread.xhtml#a7a2c99d6130cdb0df26472b6cc8b6b16">ParseBufferForNamespaces()</a>, <a class="el" href="classParserThread.xhtml#a4ab0b49d18939e1879539d2de19e2aab">ParseBufferForUsingNamespace()</a>, <a class="el" href="classParserThread.xhtml#aa0954aedee321fdedc4e49ca4c75482c">ParserThread()</a>, <a class="el" href="classParserThread.xhtml#ad78eb9574aefe7f580aaa805f10fbe1b">ReadClsNames()</a>, <a class="el" href="classParserThread.xhtml#ae5961cd32c994fa68fec25baa4ee053a">ReadVarNames()</a>, <a class="el" href="classParserThread.xhtml#a019c7ff4c9f800ccc583a41699ab5b5e">SkipAngleBraces()</a>, <a class="el" href="classParserThread.xhtml#a65973704432137e051aec1541d3d7236">SkipBlock()</a>, and <a class="el" href="classParserThread.xhtml#a3324c3f8b45443f087071a758676134a">SkipToOneOfChars()</a>.</p>

</div>
</div>
<a class="anchor" id="ac98620ec8d07c3515805f59fabd84762"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classTokenTree.xhtml">TokenTree</a>* ParserThread::m_TokenTree</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>a pointer to the token tree, all the tokens will be added to that tree structure </p>

<p>Referenced by <a class="el" href="classParserThread.xhtml#a997e91f1cbbf64ef9f8220e97dd7a240">CalcEnumExpression()</a>, <a class="el" href="classParserThread.xhtml#ae1def46bdb504975217819bb1049d9fd">DoAddToken()</a>, <a class="el" href="classParserThread.xhtml#a991cc89e41f0fbff132e3f09585ea70d">DoParse()</a>, <a class="el" href="classParserThread.xhtml#a1fa2f9d5e4348a8347e82cb563fc4074">FindTokenFromQueue()</a>, <a class="el" href="classParserThread.xhtml#aa644c4bf5a650801606724f2d4cc90d5">HandleIncludes()</a>, <a class="el" href="classParserThread.xhtml#a36ab4001b8842ae1bea7452474aa63c3">HandleMacroExpansion()</a>, <a class="el" href="classParserThread.xhtml#ae845814e7a52cd585d77065bc3c8d6cb">HandleUndefs()</a>, <a class="el" href="classParserThread.xhtml#abda91d29be83e7900ad7a5c18cfe6435">InitTokenizer()</a>, <a class="el" href="classParserThread.xhtml#a87e5624dfc192efb0bba2d69f4be7214">Parse()</a>, <a class="el" href="classParserThread.xhtml#aa0954aedee321fdedc4e49ca4c75482c">ParserThread()</a>, <a class="el" href="classParserThread.xhtml#a10450ce60ee20a1a7964b51660fb3af9">RefineAnonymousTypeToken()</a>, <a class="el" href="classParserThread.xhtml#a83d18bbc35e7a572e3434f8cf3f2e01e">ResolveTemplateMap()</a>, and <a class="el" href="classParserThread.xhtml#a080e2d03d7ca0bdcb1552d4aa87c4839">TokenExists()</a>.</p>

</div>
</div>
<a class="anchor" id="a287151a916e18a53f0a155001bc52685"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="token_8h.xhtml#a10e4417d2285abddb9d4c2e97cddcec4">TokenIdxSet</a> ParserThread::m_UsedNamespacesIds</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>globally included namespaces by "using namespace" statement </p>

<p>Referenced by <a class="el" href="classParserThread.xhtml#a991cc89e41f0fbff132e3f09585ea70d">DoParse()</a>, and <a class="el" href="classParserThread.xhtml#a080e2d03d7ca0bdcb1552d4aa87c4839">TokenExists()</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li><a class="el" href="parserthread_8h_source.xhtml">parserthread.h</a></li>
<li><a class="el" href="parserthread_8cpp.xhtml">parserthread.cpp</a></li>
</ul>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.8
</small></address>
</body>
</html>
