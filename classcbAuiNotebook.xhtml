<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.8"/>
<title>Code::Blocks: cbAuiNotebook Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">Code::Blocks
   &#160;<span id="projectnumber">SVN r10054</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.8 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li><a href="files.xhtml"><span>Files</span></a></li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.xhtml"><span>Class&#160;List</span></a></li>
      <li><a href="classes.xhtml"><span>Class&#160;Index</span></a></li>
      <li><a href="inherits.xhtml"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.xhtml"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-static-methods">Static Public Member Functions</a> &#124;
<a href="#pro-methods">Protected Member Functions</a> &#124;
<a href="#pro-attribs">Protected Attributes</a> &#124;
<a href="#pro-static-attribs">Static Protected Attributes</a> &#124;
<a href="classcbAuiNotebook-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">cbAuiNotebook Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>A notebook class This class is derived from wxAuiNotebook, to enhance its abilities. It adds the ability to store (and restore) the visible tab-order, because wxAuiNotebook-tabs can be reordered with drag and drop. Another added feature is the possibility to add tooltips to the tabs belonging to added panes.  
 <a href="classcbAuiNotebook.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="cbauibook_8h_source.xhtml">cbauibook.h</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for cbAuiNotebook:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="classcbAuiNotebook__inherit__graph.svg" width="214" height="800"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Collaboration diagram for cbAuiNotebook:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="classcbAuiNotebook__coll__graph.svg" width="214" height="800"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:af50e18d02a356b2dcb3aec83d4f4290d"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcbAuiNotebook.xhtml#af50e18d02a356b2dcb3aec83d4f4290d">cbAuiNotebook</a> (wxWindow *pParent, wxWindowID id, const wxPoint &amp;pos=wxDefaultPosition, const wxSize &amp;size=wxDefaultSize, long style=wxAUI_NB_DEFAULT_STYLE)</td></tr>
<tr class="memdesc:af50e18d02a356b2dcb3aec83d4f4290d"><td class="mdescLeft">&#160;</td><td class="mdescRight"><a class="el" href="classcbAuiNotebook.xhtml" title="A notebook class This class is derived from wxAuiNotebook, to enhance its abilities. It adds the ability to store (and restore) the visible tab-order, because wxAuiNotebook-tabs can be reordered with drag and drop. Another added feature is the possibility to add tooltips to the tabs belonging to added panes. ">cbAuiNotebook</a> constructor  <a href="#af50e18d02a356b2dcb3aec83d4f4290d">More...</a><br /></td></tr>
<tr class="separator:af50e18d02a356b2dcb3aec83d4f4290d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a31a7d88a64c48ed69173d7adda5e9817"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcbAuiNotebook.xhtml#a31a7d88a64c48ed69173d7adda5e9817">~cbAuiNotebook</a> ()</td></tr>
<tr class="separator:a31a7d88a64c48ed69173d7adda5e9817"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af68db52d126ff3f246c63528fb983f67"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcbAuiNotebook.xhtml#af68db52d126ff3f246c63528fb983f67">AdvanceSelection</a> (bool forward=true)</td></tr>
<tr class="memdesc:af68db52d126ff3f246c63528fb983f67"><td class="mdescLeft">&#160;</td><td class="mdescRight">Advances the selection.  <a href="#af68db52d126ff3f246c63528fb983f67">More...</a><br /></td></tr>
<tr class="separator:af68db52d126ff3f246c63528fb983f67"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7a5368ef9bce2ad1921c1958520c11c5"><td class="memItemLeft" align="right" valign="top">wxString&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcbAuiNotebook.xhtml#a7a5368ef9bce2ad1921c1958520c11c5">SavePerspective</a> ()</td></tr>
<tr class="memdesc:a7a5368ef9bce2ad1921c1958520c11c5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Save layout of the notebook.  <a href="#a7a5368ef9bce2ad1921c1958520c11c5">More...</a><br /></td></tr>
<tr class="separator:a7a5368ef9bce2ad1921c1958520c11c5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a07f123507069a9e590b6d7d57e361e5e"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcbAuiNotebook.xhtml#a07f123507069a9e590b6d7d57e361e5e">LoadPerspective</a> (const wxString &amp;layout, bool mergeLayouts=false)</td></tr>
<tr class="memdesc:a07f123507069a9e590b6d7d57e361e5e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Loads serialized notebook layout.  <a href="#a07f123507069a9e590b6d7d57e361e5e">More...</a><br /></td></tr>
<tr class="separator:a07f123507069a9e590b6d7d57e361e5e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9033ad5038d4b676e672f2a8c96cb6c8"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcbAuiNotebook.xhtml#a9033ad5038d4b676e672f2a8c96cb6c8">GetTabIndexFromTooltip</a> (const wxString &amp;text)</td></tr>
<tr class="memdesc:a9033ad5038d4b676e672f2a8c96cb6c8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the tab index from tooltiptext.  <a href="#a9033ad5038d4b676e672f2a8c96cb6c8">More...</a><br /></td></tr>
<tr class="separator:a9033ad5038d4b676e672f2a8c96cb6c8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1a4b4bcb7f6b5d107be4cc385a01bb2d"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcbAuiNotebook.xhtml#a1a4b4bcb7f6b5d107be4cc385a01bb2d">GetTabPositionFromIndex</a> (int index)</td></tr>
<tr class="memdesc:a1a4b4bcb7f6b5d107be4cc385a01bb2d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the tab position.  <a href="#a1a4b4bcb7f6b5d107be4cc385a01bb2d">More...</a><br /></td></tr>
<tr class="separator:a1a4b4bcb7f6b5d107be4cc385a01bb2d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7b1891cde924a83cd88e96ab82fb1c7f"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcbAuiNotebook.xhtml#a7b1891cde924a83cd88e96ab82fb1c7f">SetPageToolTip</a> (size_t idx, const wxString &amp;text)</td></tr>
<tr class="memdesc:a7b1891cde924a83cd88e96ab82fb1c7f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set a tab tooltip.  <a href="#a7b1891cde924a83cd88e96ab82fb1c7f">More...</a><br /></td></tr>
<tr class="separator:a7b1891cde924a83cd88e96ab82fb1c7f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a44298172bce32f46b6053dbb6d8e74eb"><td class="memItemLeft" align="right" valign="top">wxString&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcbAuiNotebook.xhtml#a44298172bce32f46b6053dbb6d8e74eb">GetPageToolTip</a> (size_t idx)</td></tr>
<tr class="memdesc:a44298172bce32f46b6053dbb6d8e74eb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get a tab tooltip.  <a href="#a44298172bce32f46b6053dbb6d8e74eb">More...</a><br /></td></tr>
<tr class="separator:a44298172bce32f46b6053dbb6d8e74eb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1774dc042d14016360fd8273ce234a02"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcbAuiNotebook.xhtml#a1774dc042d14016360fd8273ce234a02">MinimizeFreeSpace</a> ()</td></tr>
<tr class="memdesc:a1774dc042d14016360fd8273ce234a02"><td class="mdescLeft">&#160;</td><td class="mdescRight">Minmize free horizontal page.  <a href="#a1774dc042d14016360fd8273ce234a02">More...</a><br /></td></tr>
<tr class="separator:a1774dc042d14016360fd8273ce234a02"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adc9ea61a21d36a64b2076a361073ddaa"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcbAuiNotebook.xhtml#adc9ea61a21d36a64b2076a361073ddaa">DeletePage</a> (size_t page)</td></tr>
<tr class="memdesc:adc9ea61a21d36a64b2076a361073ddaa"><td class="mdescLeft">&#160;</td><td class="mdescRight">Delete Page.  <a href="#adc9ea61a21d36a64b2076a361073ddaa">More...</a><br /></td></tr>
<tr class="separator:adc9ea61a21d36a64b2076a361073ddaa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acc89c9481fab2d9ca4029f23a63b72e1"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcbAuiNotebook.xhtml#acc89c9481fab2d9ca4029f23a63b72e1">RemovePage</a> (size_t page)</td></tr>
<tr class="memdesc:acc89c9481fab2d9ca4029f23a63b72e1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Remove Page.  <a href="#acc89c9481fab2d9ca4029f23a63b72e1">More...</a><br /></td></tr>
<tr class="separator:acc89c9481fab2d9ca4029f23a63b72e1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8468d5884af0a34d6c72c439dd303ce9"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcbAuiNotebook.xhtml#a8468d5884af0a34d6c72c439dd303ce9">MovePage</a> (wxWindow *page, size_t new_idx)</td></tr>
<tr class="memdesc:a8468d5884af0a34d6c72c439dd303ce9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Move page.  <a href="#a8468d5884af0a34d6c72c439dd303ce9">More...</a><br /></td></tr>
<tr class="separator:a8468d5884af0a34d6c72c439dd303ce9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a64a3f67c23537fa3bb57fea00a669d40"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcbAuiNotebook.xhtml#a64a3f67c23537fa3bb57fea00a669d40">AddPage</a> (wxWindow *page, const wxString &amp;caption, bool select=false, const wxBitmap &amp;bitmap=wxNullBitmap)</td></tr>
<tr class="memdesc:a64a3f67c23537fa3bb57fea00a669d40"><td class="mdescLeft">&#160;</td><td class="mdescRight">Add Page.  <a href="#a64a3f67c23537fa3bb57fea00a669d40">More...</a><br /></td></tr>
<tr class="separator:a64a3f67c23537fa3bb57fea00a669d40"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8585e0c1c19ead5e45297afb86b02c7b"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcbAuiNotebook.xhtml#a8585e0c1c19ead5e45297afb86b02c7b">InsertPage</a> (size_t page_idx, wxWindow *page, const wxString &amp;caption, bool select=false, const wxBitmap &amp;bitmap=wxNullBitmap)</td></tr>
<tr class="memdesc:a8585e0c1c19ead5e45297afb86b02c7b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Insert Page.  <a href="#a8585e0c1c19ead5e45297afb86b02c7b">More...</a><br /></td></tr>
<tr class="separator:a8585e0c1c19ead5e45297afb86b02c7b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac1edba5c3d0a9e7ae84124473e27d341"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcbAuiNotebook.xhtml#ac1edba5c3d0a9e7ae84124473e27d341">SetZoom</a> (int zoom)</td></tr>
<tr class="memdesc:ac1edba5c3d0a9e7ae84124473e27d341"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set zoomfactor for builtin editors.  <a href="#ac1edba5c3d0a9e7ae84124473e27d341">More...</a><br /></td></tr>
<tr class="separator:ac1edba5c3d0a9e7ae84124473e27d341"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2e754857199d3411e161860c49a2b915"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcbAuiNotebook.xhtml#a2e754857199d3411e161860c49a2b915">FocusActiveTabCtrl</a> ()</td></tr>
<tr class="memdesc:a2e754857199d3411e161860c49a2b915"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set Focus on the tabCtrl belonging to the active tab.  <a href="#a2e754857199d3411e161860c49a2b915">More...</a><br /></td></tr>
<tr class="separator:a2e754857199d3411e161860c49a2b915"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-static-methods"></a>
Static Public Member Functions</h2></td></tr>
<tr class="memitem:a8396d841d1ae61fd8b0de5c14c062128"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcbAuiNotebook.xhtml#a8396d841d1ae61fd8b0de5c14c062128">UseToolTips</a> (bool use=true)</td></tr>
<tr class="memdesc:a8396d841d1ae61fd8b0de5c14c062128"><td class="mdescLeft">&#160;</td><td class="mdescRight">Enable or disable tabtooltips globally.  <a href="#a8396d841d1ae61fd8b0de5c14c062128">More...</a><br /></td></tr>
<tr class="separator:a8396d841d1ae61fd8b0de5c14c062128"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad3c4f715351603763e2dde5a6b2d361b"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcbAuiNotebook.xhtml#ad3c4f715351603763e2dde5a6b2d361b">AllowScrolling</a> (bool allow=true)</td></tr>
<tr class="memdesc:ad3c4f715351603763e2dde5a6b2d361b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Enable or disable tab-scrolling with mousewheel.  <a href="#ad3c4f715351603763e2dde5a6b2d361b">More...</a><br /></td></tr>
<tr class="separator:ad3c4f715351603763e2dde5a6b2d361b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae42865e1999b1efd2fa0282cf3a1c4a7"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcbAuiNotebook.xhtml#ae42865e1999b1efd2fa0282cf3a1c4a7">SetModKeys</a> (wxString keys=_T(&quot;Strg&quot;))</td></tr>
<tr class="memdesc:ae42865e1999b1efd2fa0282cf3a1c4a7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the modifier keys for scrolling.  <a href="#ae42865e1999b1efd2fa0282cf3a1c4a7">More...</a><br /></td></tr>
<tr class="separator:ae42865e1999b1efd2fa0282cf3a1c4a7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a79dedac25fbcfe88cf182987e8e88057"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcbAuiNotebook.xhtml#a79dedac25fbcfe88cf182987e8e88057">UseModToAdvance</a> (bool use=false)</td></tr>
<tr class="memdesc:a79dedac25fbcfe88cf182987e8e88057"><td class="mdescLeft">&#160;</td><td class="mdescRight">Use modkey to advance through tabs with mousewheel.  <a href="#a79dedac25fbcfe88cf182987e8e88057">More...</a><br /></td></tr>
<tr class="separator:a79dedac25fbcfe88cf182987e8e88057"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae048242a62cc94309e4520953ced7769"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcbAuiNotebook.xhtml#ae048242a62cc94309e4520953ced7769">InvertAdvanceDirection</a> (bool invert=false)</td></tr>
<tr class="memdesc:ae048242a62cc94309e4520953ced7769"><td class="mdescLeft">&#160;</td><td class="mdescRight">Change direction of tab-advancing with mousewheel.  <a href="#ae048242a62cc94309e4520953ced7769">More...</a><br /></td></tr>
<tr class="separator:ae048242a62cc94309e4520953ced7769"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a232559ba004f85b9128ab039c9da13cb"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcbAuiNotebook.xhtml#a232559ba004f85b9128ab039c9da13cb">InvertMoveDirection</a> (bool invert=false)</td></tr>
<tr class="memdesc:a232559ba004f85b9128ab039c9da13cb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Change direction of tab-moving with mousewheel.  <a href="#a232559ba004f85b9128ab039c9da13cb">More...</a><br /></td></tr>
<tr class="separator:a232559ba004f85b9128ab039c9da13cb"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-methods"></a>
Protected Member Functions</h2></td></tr>
<tr class="memitem:ae06e08f6c0861f7340122f4d9b800ea9"><td class="memItemLeft" align="right" valign="top">wxString&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcbAuiNotebook.xhtml#ae06e08f6c0861f7340122f4d9b800ea9">UniqueIdFromTooltip</a> (const wxString &amp;text)</td></tr>
<tr class="memdesc:ae06e08f6c0861f7340122f4d9b800ea9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Create a unique id from the tooltip-text.  <a href="#ae06e08f6c0861f7340122f4d9b800ea9">More...</a><br /></td></tr>
<tr class="separator:ae06e08f6c0861f7340122f4d9b800ea9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a09e22fd9a831151641bcbff47827cbc6"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcbAuiNotebook.xhtml#a09e22fd9a831151641bcbff47827cbc6">MinimizeFreeSpace</a> (wxAuiTabCtrl *tabCtrl)</td></tr>
<tr class="memdesc:a09e22fd9a831151641bcbff47827cbc6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Minmize free horizontal page of tabCtrl.  <a href="#a09e22fd9a831151641bcbff47827cbc6">More...</a><br /></td></tr>
<tr class="separator:a09e22fd9a831151641bcbff47827cbc6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0a92b9044facd7feb3d1d4c65a4f1bcb"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcbAuiNotebook.xhtml#a0a92b9044facd7feb3d1d4c65a4f1bcb">OnNavigationKey</a> (wxNavigationKeyEvent &amp;event)</td></tr>
<tr class="memdesc:a0a92b9044facd7feb3d1d4c65a4f1bcb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Handle the navigation key event.  <a href="#a0a92b9044facd7feb3d1d4c65a4f1bcb">More...</a><br /></td></tr>
<tr class="separator:a0a92b9044facd7feb3d1d4c65a4f1bcb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa4e1e078d17ee180dd4b2e813699317d"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcbAuiNotebook.xhtml#aa4e1e078d17ee180dd4b2e813699317d">OnIdle</a> (cb_unused wxIdleEvent &amp;event)</td></tr>
<tr class="memdesc:aa4e1e078d17ee180dd4b2e813699317d"><td class="mdescLeft">&#160;</td><td class="mdescRight">OnIdle.  <a href="#aa4e1e078d17ee180dd4b2e813699317d">More...</a><br /></td></tr>
<tr class="separator:aa4e1e078d17ee180dd4b2e813699317d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0eb5cff72d4810447af90111b0d62eaa"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcbAuiNotebook.xhtml#a0eb5cff72d4810447af90111b0d62eaa">OnMotion</a> (wxMouseEvent &amp;event)</td></tr>
<tr class="memdesc:a0eb5cff72d4810447af90111b0d62eaa"><td class="mdescLeft">&#160;</td><td class="mdescRight">Catch mousemotion-events.  <a href="#a0eb5cff72d4810447af90111b0d62eaa">More...</a><br /></td></tr>
<tr class="separator:a0eb5cff72d4810447af90111b0d62eaa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8913d152f53e3f3113582af4b43c26b2"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcbAuiNotebook.xhtml#a8913d152f53e3f3113582af4b43c26b2">OnTabCtrlDblClick</a> (wxMouseEvent &amp;event)</td></tr>
<tr class="memdesc:a8913d152f53e3f3113582af4b43c26b2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Catch doubleclick-events from wxTabCtrl.  <a href="#a8913d152f53e3f3113582af4b43c26b2">More...</a><br /></td></tr>
<tr class="separator:a8913d152f53e3f3113582af4b43c26b2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa5183ead990040c4329e22e36ea8d29b"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcbAuiNotebook.xhtml#aa5183ead990040c4329e22e36ea8d29b">OnTabCtrlMouseWheel</a> (wxMouseEvent &amp;event)</td></tr>
<tr class="memdesc:aa5183ead990040c4329e22e36ea8d29b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Catch mousewheel-events from wxTabCtrl.  <a href="#aa5183ead990040c4329e22e36ea8d29b">More...</a><br /></td></tr>
<tr class="separator:aa5183ead990040c4329e22e36ea8d29b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aca9efe60f804b9f971c5fbadac18de52"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcbAuiNotebook.xhtml#aca9efe60f804b9f971c5fbadac18de52">OnResize</a> (wxSizeEvent &amp;event)</td></tr>
<tr class="memdesc:aca9efe60f804b9f971c5fbadac18de52"><td class="mdescLeft">&#160;</td><td class="mdescRight">Catch resize-events and call <a class="el" href="classcbAuiNotebook.xhtml#a1774dc042d14016360fd8273ce234a02" title="Minmize free horizontal page. ">MinimizeFreeSpace()</a>  <a href="#aca9efe60f804b9f971c5fbadac18de52">More...</a><br /></td></tr>
<tr class="separator:aca9efe60f804b9f971c5fbadac18de52"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8d092e091c0ff7da34ae3b13b10d0835"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcbAuiNotebook.xhtml#a8d092e091c0ff7da34ae3b13b10d0835">OnDragDone</a> (wxAuiNotebookEvent &amp;event)</td></tr>
<tr class="memdesc:a8d092e091c0ff7da34ae3b13b10d0835"><td class="mdescLeft">&#160;</td><td class="mdescRight">Catch dragdone-events from wxTabCtrl.  <a href="#a8d092e091c0ff7da34ae3b13b10d0835">More...</a><br /></td></tr>
<tr class="separator:a8d092e091c0ff7da34ae3b13b10d0835"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac2187ec706f95196c6d3c682ad8cf2a5"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcbAuiNotebook.xhtml#ac2187ec706f95196c6d3c682ad8cf2a5">OnEnterTabCtrl</a> (wxMouseEvent &amp;event)</td></tr>
<tr class="memdesc:ac2187ec706f95196c6d3c682ad8cf2a5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Catch mouseenter-events from wxTabCtrl.  <a href="#ac2187ec706f95196c6d3c682ad8cf2a5">More...</a><br /></td></tr>
<tr class="separator:ac2187ec706f95196c6d3c682ad8cf2a5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad4bb91e22cc4a2601381376c2e4f5d5d"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcbAuiNotebook.xhtml#ad4bb91e22cc4a2601381376c2e4f5d5d">OnLeaveTabCtrl</a> (wxMouseEvent &amp;event)</td></tr>
<tr class="memdesc:ad4bb91e22cc4a2601381376c2e4f5d5d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Catch mouseleave-events from wxTabCtrl.  <a href="#ad4bb91e22cc4a2601381376c2e4f5d5d">More...</a><br /></td></tr>
<tr class="separator:ad4bb91e22cc4a2601381376c2e4f5d5d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ade8fb4c0fe12b6b3bb91f8e4de2443eb"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcbAuiNotebook.xhtml#ade8fb4c0fe12b6b3bb91f8e4de2443eb">IsFocusStored</a> (wxWindow *page)</td></tr>
<tr class="memdesc:ade8fb4c0fe12b6b3bb91f8e4de2443eb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Checks the old focus.  <a href="#ade8fb4c0fe12b6b3bb91f8e4de2443eb">More...</a><br /></td></tr>
<tr class="separator:ade8fb4c0fe12b6b3bb91f8e4de2443eb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a370d212da0cd5396aca025fd3589d51e"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcbAuiNotebook.xhtml#a370d212da0cd5396aca025fd3589d51e">StoreFocus</a> ()</td></tr>
<tr class="memdesc:a370d212da0cd5396aca025fd3589d51e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Save old focus.  <a href="#a370d212da0cd5396aca025fd3589d51e">More...</a><br /></td></tr>
<tr class="separator:a370d212da0cd5396aca025fd3589d51e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac29738c79da25a7407a0e1fcfcd0025d"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcbAuiNotebook.xhtml#ac29738c79da25a7407a0e1fcfcd0025d">RestoreFocus</a> ()</td></tr>
<tr class="memdesc:ac29738c79da25a7407a0e1fcfcd0025d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Restore old focus.  <a href="#ac29738c79da25a7407a0e1fcfcd0025d">More...</a><br /></td></tr>
<tr class="separator:ac29738c79da25a7407a0e1fcfcd0025d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afefb87cb1a6de28a62c0af497b688ad9"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcbAuiNotebook.xhtml#afefb87cb1a6de28a62c0af497b688ad9">ResetTabCtrlEvents</a> ()</td></tr>
<tr class="memdesc:afefb87cb1a6de28a62c0af497b688ad9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Reset tabctrl events.  <a href="#afefb87cb1a6de28a62c0af497b688ad9">More...</a><br /></td></tr>
<tr class="separator:afefb87cb1a6de28a62c0af497b688ad9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9f74c168d12b42e0d937ba60a923649f"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcbAuiNotebook.xhtml#a9f74c168d12b42e0d937ba60a923649f">UpdateTabControlsArray</a> ()</td></tr>
<tr class="memdesc:a9f74c168d12b42e0d937ba60a923649f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Updates the array, that holds the wxTabCtrls.  <a href="#a9f74c168d12b42e0d937ba60a923649f">More...</a><br /></td></tr>
<tr class="separator:a9f74c168d12b42e0d937ba60a923649f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a82ff14d18765046a202a1f6c0fc10d89"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcbAuiNotebook.xhtml#a82ff14d18765046a202a1f6c0fc10d89">CheckKeyModifier</a> ()</td></tr>
<tr class="memdesc:a82ff14d18765046a202a1f6c0fc10d89"><td class="mdescLeft">&#160;</td><td class="mdescRight">Check for pressed modifier-keys.  <a href="#a82ff14d18765046a202a1f6c0fc10d89">More...</a><br /></td></tr>
<tr class="separator:a82ff14d18765046a202a1f6c0fc10d89"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-attribs"></a>
Protected Attributes</h2></td></tr>
<tr class="memitem:aad4104c12abde95c86ff57f734f8c429"><td class="memItemLeft" align="right" valign="top">cbAuiTabCtrlArray&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcbAuiNotebook.xhtml#aad4104c12abde95c86ff57f734f8c429">m_TabCtrls</a></td></tr>
<tr class="memdesc:aad4104c12abde95c86ff57f734f8c429"><td class="mdescLeft">&#160;</td><td class="mdescRight">Holds the wxTabCtrls used by the notebook.  <a href="#aad4104c12abde95c86ff57f734f8c429">More...</a><br /></td></tr>
<tr class="separator:aad4104c12abde95c86ff57f734f8c429"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3076aa11b0894f470aae1765ec466ad7"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcbAuiNotebook.xhtml#a3076aa11b0894f470aae1765ec466ad7">m_LastSelected</a></td></tr>
<tr class="memdesc:a3076aa11b0894f470aae1765ec466ad7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Last selected tab.  <a href="#a3076aa11b0894f470aae1765ec466ad7">More...</a><br /></td></tr>
<tr class="separator:a3076aa11b0894f470aae1765ec466ad7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac210ced06ba70bcb69b24a7cbf9098c0"><td class="memItemLeft" align="right" valign="top">long&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcbAuiNotebook.xhtml#ac210ced06ba70bcb69b24a7cbf9098c0">m_LastId</a></td></tr>
<tr class="memdesc:ac210ced06ba70bcb69b24a7cbf9098c0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Id of last focused window.  <a href="#ac210ced06ba70bcb69b24a7cbf9098c0">More...</a><br /></td></tr>
<tr class="separator:ac210ced06ba70bcb69b24a7cbf9098c0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6c6de8d09fce158249183a800931c16f"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcbAuiNotebook.xhtml#a6c6de8d09fce158249183a800931c16f">m_HasToolTip</a></td></tr>
<tr class="memdesc:a6c6de8d09fce158249183a800931c16f"><td class="mdescLeft">&#160;</td><td class="mdescRight">If false, tooltips are not shown.  <a href="#a6c6de8d09fce158249183a800931c16f">More...</a><br /></td></tr>
<tr class="separator:a6c6de8d09fce158249183a800931c16f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a70a13bf09ea9357789b8fbfacfed201b"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcbAuiNotebook.xhtml#a70a13bf09ea9357789b8fbfacfed201b">m_SetZoomOnIdle</a></td></tr>
<tr class="memdesc:a70a13bf09ea9357789b8fbfacfed201b"><td class="mdescLeft">&#160;</td><td class="mdescRight">If true, zoom for all editors is set in next OnIdle-call.  <a href="#a70a13bf09ea9357789b8fbfacfed201b">More...</a><br /></td></tr>
<tr class="separator:a70a13bf09ea9357789b8fbfacfed201b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8a4add6486da5408e7f2157943a7e437"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcbAuiNotebook.xhtml#a8a4add6486da5408e7f2157943a7e437">m_MinimizeFreeSpaceOnIdle</a></td></tr>
<tr class="memdesc:a8a4add6486da5408e7f2157943a7e437"><td class="mdescLeft">&#160;</td><td class="mdescRight">If true, MinimizeFreeSpace is called in next OnIdle-call.  <a href="#a8a4add6486da5408e7f2157943a7e437">More...</a><br /></td></tr>
<tr class="separator:a8a4add6486da5408e7f2157943a7e437"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1330ff7fdf878b5eb110cbd9247659ae"><td class="memItemLeft" align="right" valign="top">wxSize&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcbAuiNotebook.xhtml#a1330ff7fdf878b5eb110cbd9247659ae">m_TabCtrlSize</a></td></tr>
<tr class="memdesc:a1330ff7fdf878b5eb110cbd9247659ae"><td class="mdescLeft">&#160;</td><td class="mdescRight">Holds the size of a tabCtrl after a resize event.  <a href="#a1330ff7fdf878b5eb110cbd9247659ae">More...</a><br /></td></tr>
<tr class="separator:a1330ff7fdf878b5eb110cbd9247659ae"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-static-attribs"></a>
Static Protected Attributes</h2></td></tr>
<tr class="memitem:a890f59d67f6cf386fe9be3dc62660c8d"><td class="memItemLeft" align="right" valign="top">static bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcbAuiNotebook.xhtml#a890f59d67f6cf386fe9be3dc62660c8d">s_UseTabTooltips</a></td></tr>
<tr class="memdesc:a890f59d67f6cf386fe9be3dc62660c8d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Enable or disable tab tooltips.  <a href="#a890f59d67f6cf386fe9be3dc62660c8d">More...</a><br /></td></tr>
<tr class="separator:a890f59d67f6cf386fe9be3dc62660c8d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8a79b7b60a118f4ff47cf6b4dc3ef1bc"><td class="memItemLeft" align="right" valign="top">static bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcbAuiNotebook.xhtml#a8a79b7b60a118f4ff47cf6b4dc3ef1bc">s_AllowMousewheel</a> = true</td></tr>
<tr class="memdesc:a8a79b7b60a118f4ff47cf6b4dc3ef1bc"><td class="mdescLeft">&#160;</td><td class="mdescRight">Enable or disable scrolling tabs with mousewheel.  <a href="#a8a79b7b60a118f4ff47cf6b4dc3ef1bc">More...</a><br /></td></tr>
<tr class="separator:a8a79b7b60a118f4ff47cf6b4dc3ef1bc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa7192d879ace8ea2e819015995b2c88c"><td class="memItemLeft" align="right" valign="top">static cbAuiNotebookArray&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcbAuiNotebook.xhtml#aa7192d879ace8ea2e819015995b2c88c">s_cbAuiNotebookArray</a></td></tr>
<tr class="memdesc:aa7192d879ace8ea2e819015995b2c88c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Holds an array of all existing cbAuiNotebooks.  <a href="#aa7192d879ace8ea2e819015995b2c88c">More...</a><br /></td></tr>
<tr class="separator:aa7192d879ace8ea2e819015995b2c88c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9b6a025db44ff933e783fc0b98e1ef5a"><td class="memItemLeft" align="right" valign="top">static wxString&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcbAuiNotebook.xhtml#a9b6a025db44ff933e783fc0b98e1ef5a">s_modKeys</a> = _T(&quot;Ctrl&quot;)</td></tr>
<tr class="memdesc:a9b6a025db44ff933e783fc0b98e1ef5a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Holds the modifier keys for scrolling.  <a href="#a9b6a025db44ff933e783fc0b98e1ef5a">More...</a><br /></td></tr>
<tr class="separator:a9b6a025db44ff933e783fc0b98e1ef5a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4731213afeea0b86b9489d226b249420"><td class="memItemLeft" align="right" valign="top">static bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcbAuiNotebook.xhtml#a4731213afeea0b86b9489d226b249420">s_modToAdvance</a> = false</td></tr>
<tr class="memdesc:a4731213afeea0b86b9489d226b249420"><td class="mdescLeft">&#160;</td><td class="mdescRight">Use modkey to advance through tabs with mousewheel.  <a href="#a4731213afeea0b86b9489d226b249420">More...</a><br /></td></tr>
<tr class="separator:a4731213afeea0b86b9489d226b249420"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae8d999488cabf3d351cf65c5b31b4efb"><td class="memItemLeft" align="right" valign="top">static int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcbAuiNotebook.xhtml#ae8d999488cabf3d351cf65c5b31b4efb">s_moveDirection</a> = 1</td></tr>
<tr class="memdesc:ae8d999488cabf3d351cf65c5b31b4efb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Mousewheel move direction: negative =&gt; invert.  <a href="#ae8d999488cabf3d351cf65c5b31b4efb">More...</a><br /></td></tr>
<tr class="separator:ae8d999488cabf3d351cf65c5b31b4efb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aea5098339030658a2d6fc8d74ce576ca"><td class="memItemLeft" align="right" valign="top">static int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classcbAuiNotebook.xhtml#aea5098339030658a2d6fc8d74ce576ca">s_advanceDirection</a> = 1</td></tr>
<tr class="memdesc:aea5098339030658a2d6fc8d74ce576ca"><td class="mdescLeft">&#160;</td><td class="mdescRight">Mouseweheel advance direction: negative =&gt; invert.  <a href="#aea5098339030658a2d6fc8d74ce576ca">More...</a><br /></td></tr>
<tr class="separator:aea5098339030658a2d6fc8d74ce576ca"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>A notebook class This class is derived from wxAuiNotebook, to enhance its abilities. It adds the ability to store (and restore) the visible tab-order, because wxAuiNotebook-tabs can be reordered with drag and drop. Another added feature is the possibility to add tooltips to the tabs belonging to added panes. </p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="af50e18d02a356b2dcb3aec83d4f4290d"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">cbAuiNotebook::cbAuiNotebook </td>
          <td>(</td>
          <td class="paramtype">wxWindow *&#160;</td>
          <td class="paramname"><em>pParent</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">wxWindowID&#160;</td>
          <td class="paramname"><em>id</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const wxPoint &amp;&#160;</td>
          <td class="paramname"><em>pos</em> = <code>wxDefaultPosition</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const wxSize &amp;&#160;</td>
          <td class="paramname"><em>size</em> = <code>wxDefaultSize</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">long&#160;</td>
          <td class="paramname"><em>style</em> = <code>wxAUI_NB_DEFAULT_STYLE</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p><a class="el" href="classcbAuiNotebook.xhtml" title="A notebook class This class is derived from wxAuiNotebook, to enhance its abilities. It adds the ability to store (and restore) the visible tab-order, because wxAuiNotebook-tabs can be reordered with drag and drop. Another added feature is the possibility to add tooltips to the tabs belonging to added panes. ">cbAuiNotebook</a> constructor </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pParent</td><td>the parent window, usually the app-window </td></tr>
    <tr><td class="paramname">id</td><td>the notebook id </td></tr>
    <tr><td class="paramname">pos</td><td>the position </td></tr>
    <tr><td class="paramname">size</td><td>the size </td></tr>
    <tr><td class="paramname">style</td><td>the notebook style </td></tr>
  </table>
  </dd>
</dl>

<p>References <a class="el" href="classManager.xhtml#acf40c9bf3465914dd64d9fdf3b3dc80a">Manager::Get()</a>, <a class="el" href="classManager.xhtml#ac1a103bddcdaea3cf2dd1d2be10a56c6">Manager::GetConfigManager()</a>, <a class="el" href="classcbAuiNotebook.xhtml#ae048242a62cc94309e4520953ced7769">InvertAdvanceDirection()</a>, <a class="el" href="classcbAuiNotebook.xhtml#a232559ba004f85b9128ab039c9da13cb">InvertMoveDirection()</a>, <a class="el" href="classConfigManager.xhtml#aa62b536a47f3775e33b6786ca5fe6eb2">ConfigManager::Read()</a>, and <a class="el" href="classConfigManager.xhtml#afafa1482c7fa4a41208b6916a2ccf0fc">ConfigManager::ReadBool()</a>.</p>

</div>
</div>
<a class="anchor" id="a31a7d88a64c48ed69173d7adda5e9817"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">cbAuiNotebook::~cbAuiNotebook </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p><a class="el" href="classcbAuiNotebook.xhtml" title="A notebook class This class is derived from wxAuiNotebook, to enhance its abilities. It adds the ability to store (and restore) the visible tab-order, because wxAuiNotebook-tabs can be reordered with drag and drop. Another added feature is the possibility to add tooltips to the tabs belonging to added panes. ">cbAuiNotebook</a> destructor </p>

<p>References <a class="el" href="classcbAuiNotebook.xhtml#aa7192d879ace8ea2e819015995b2c88c">s_cbAuiNotebookArray</a>.</p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a class="anchor" id="a64a3f67c23537fa3bb57fea00a669d40"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool cbAuiNotebook::AddPage </td>
          <td>(</td>
          <td class="paramtype">wxWindow *&#160;</td>
          <td class="paramname"><em>page</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const wxString &amp;&#160;</td>
          <td class="paramname"><em>caption</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>select</em> = <code>false</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const wxBitmap &amp;&#160;</td>
          <td class="paramname"><em>bitmap</em> = <code>wxNullBitmap</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Add Page. </p>
<p>Calls the base-class function and after that MinmizeFreeSpace(). </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">page</td><td>The page to add </td></tr>
    <tr><td class="paramname">caption</td><td>The caption of the page </td></tr>
    <tr><td class="paramname">select</td><td>If true the page gets selected </td></tr>
    <tr><td class="paramname">bitmap</td><td>The bitmap of the tab </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>true if successfull </dd></dl>

<p>References <a class="el" href="classcbAuiNotebook.xhtml#a1774dc042d14016360fd8273ce234a02">MinimizeFreeSpace()</a>.</p>

<p>Referenced by <a class="el" href="classEditorManager.xhtml#a77f51c8a0997afb28fabb0437014ceac">EditorManager::AddEditorBase()</a>, and <a class="el" href="classNativeParser.xhtml#a961cb76ff49524e3cb4640a04d17bc30">NativeParser::CreateClassBrowser()</a>.</p>

</div>
</div>
<a class="anchor" id="af68db52d126ff3f246c63528fb983f67"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void cbAuiNotebook::AdvanceSelection </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>forward</em> = <code>true</code></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Advances the selection. </p>
<p>In contrast to the base-classes function, it uses the visible tab-order, not the order of creation and jumps to the first tab, if the last is reached (and vice versa) </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">forward</td><td>if false direction is backwards </td></tr>
  </table>
  </dd>
</dl>

<p>Referenced by <a class="el" href="classEditorManager.xhtml#ae3525148c3c58e4721de375422e87437">EditorManager::ActivateNext()</a>, <a class="el" href="classEditorManager.xhtml#a36983fab9080a6a88657b564883dc6cc">EditorManager::ActivatePrevious()</a>, and <a class="el" href="classcbAuiNotebook.xhtml#aa5183ead990040c4329e22e36ea8d29b">OnTabCtrlMouseWheel()</a>.</p>

</div>
</div>
<a class="anchor" id="ad3c4f715351603763e2dde5a6b2d361b"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void cbAuiNotebook::AllowScrolling </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>allow</em> = <code>true</code></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Enable or disable tab-scrolling with mousewheel. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">allow</td><td>If true scrolling is allowed </td></tr>
  </table>
  </dd>
</dl>

<p>References <a class="el" href="classcbAuiNotebook.xhtml#a8a79b7b60a118f4ff47cf6b4dc3ef1bc">s_AllowMousewheel</a>, and <a class="el" href="classcbAuiNotebook.xhtml#aa7192d879ace8ea2e819015995b2c88c">s_cbAuiNotebookArray</a>.</p>

</div>
</div>
<a class="anchor" id="a82ff14d18765046a202a1f6c0fc10d89"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool cbAuiNotebook::CheckKeyModifier </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Check for pressed modifier-keys. </p>
<p>Check whether all modifier keys in keyModifier are pressed or not </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">keyModifier</td><td>wxSTring containing the modifier(s) to check for </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>true If all modifier-keys are pressed </dd></dl>

<p>References <a class="el" href="classcbAuiNotebook.xhtml#a9b6a025db44ff933e783fc0b98e1ef5a">s_modKeys</a>.</p>

<p>Referenced by <a class="el" href="classcbAuiNotebook.xhtml#aa5183ead990040c4329e22e36ea8d29b">OnTabCtrlMouseWheel()</a>.</p>

</div>
</div>
<a class="anchor" id="adc9ea61a21d36a64b2076a361073ddaa"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool cbAuiNotebook::DeletePage </td>
          <td>(</td>
          <td class="paramtype">size_t&#160;</td>
          <td class="paramname"><em>page</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Delete Page. </p>
<p>Calls the base-class function and after that MinmizeFreeSpace(), needed to hook into the close-events. The system generated close event has to be veto'd, and Close() has to be called manually, so we can handle it ourselves. </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">The</td><td>index of the tab to be closed </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>true if successfull </dd></dl>

<p>References <a class="el" href="classcbAuiNotebook.xhtml#ade8fb4c0fe12b6b3bb91f8e4de2443eb">IsFocusStored()</a>, <a class="el" href="classcbAuiNotebook.xhtml#ac210ced06ba70bcb69b24a7cbf9098c0">m_LastId</a>, <a class="el" href="classcbAuiNotebook.xhtml#a3076aa11b0894f470aae1765ec466ad7">m_LastSelected</a>, and <a class="el" href="classcbAuiNotebook.xhtml#a1774dc042d14016360fd8273ce234a02">MinimizeFreeSpace()</a>.</p>

<p>Referenced by <a class="el" href="classEditorManager.xhtml#a95bac9d60bde13a57ce79e3a6d792ec9">EditorManager::Close()</a>.</p>

</div>
</div>
<a class="anchor" id="a2e754857199d3411e161860c49a2b915"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void cbAuiNotebook::FocusActiveTabCtrl </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Set Focus on the tabCtrl belonging to the active tab. </p>

<p>References <a class="el" href="classcbAuiNotebook.xhtml#aad4104c12abde95c86ff57f734f8c429">m_TabCtrls</a>, and <a class="el" href="classcbAuiNotebook.xhtml#a9f74c168d12b42e0d937ba60a923649f">UpdateTabControlsArray()</a>.</p>

</div>
</div>
<a class="anchor" id="a44298172bce32f46b6053dbb6d8e74eb"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">wxString cbAuiNotebook::GetPageToolTip </td>
          <td>(</td>
          <td class="paramtype">size_t&#160;</td>
          <td class="paramname"><em>idx</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Get a tab tooltip. </p>
<p>Returns the tooltip for the tab label of the page. </p><dl class="section remark"><dt>Remarks</dt><dd>Uses the name of the wxWindow to store the message </dd></dl>
<dl class="section return"><dt>Returns</dt><dd>wxString the tooltip of the page with the given index </dd></dl>

<p>Referenced by <a class="el" href="classcbAuiNotebook.xhtml#a9033ad5038d4b676e672f2a8c96cb6c8">GetTabIndexFromTooltip()</a>, <a class="el" href="classcbAuiNotebook.xhtml#a07f123507069a9e590b6d7d57e361e5e">LoadPerspective()</a>, and <a class="el" href="classcbAuiNotebook.xhtml#a7a5368ef9bce2ad1921c1958520c11c5">SavePerspective()</a>.</p>

</div>
</div>
<a class="anchor" id="a9033ad5038d4b676e672f2a8c96cb6c8"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int cbAuiNotebook::GetTabIndexFromTooltip </td>
          <td>(</td>
          <td class="paramtype">const wxString &amp;&#160;</td>
          <td class="paramname"><em>text</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Get the tab index from tooltiptext. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">text</td><td>the notebooks name </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>int the tab's index </dd></dl>
<dl class="section remark"><dt>Remarks</dt><dd>We use the name internally to store the tooltip-text. To use it in this function, we create a unique string from the relative filename and the projects title. So it should be unique even after a restart of C::B. </dd></dl>

<p>References <a class="el" href="classcbAuiNotebook.xhtml#a44298172bce32f46b6053dbb6d8e74eb">GetPageToolTip()</a>, and <a class="el" href="classcbAuiNotebook.xhtml#ae06e08f6c0861f7340122f4d9b800ea9">UniqueIdFromTooltip()</a>.</p>

<p>Referenced by <a class="el" href="classcbAuiNotebook.xhtml#a07f123507069a9e590b6d7d57e361e5e">LoadPerspective()</a>.</p>

</div>
</div>
<a class="anchor" id="a1a4b4bcb7f6b5d107be4cc385a01bb2d"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int cbAuiNotebook::GetTabPositionFromIndex </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>index</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Get the tab position. </p>
<p>Returns the position of the tab as it is visible. Starts with 0 </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">index</td><td>the index of the tab in order of creation </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>int the visible position </dd></dl>

<p>References <a class="el" href="classcbAuiNotebook.xhtml#aad4104c12abde95c86ff57f734f8c429">m_TabCtrls</a>, and <a class="el" href="classcbAuiNotebook.xhtml#a9f74c168d12b42e0d937ba60a923649f">UpdateTabControlsArray()</a>.</p>

<p>Referenced by <a class="el" href="classEditorManager.xhtml#af6d0745aab7dbc7b9bc118f383defacb">EditorManager::UpdateProjectFiles()</a>.</p>

</div>
</div>
<a class="anchor" id="a8585e0c1c19ead5e45297afb86b02c7b"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool cbAuiNotebook::InsertPage </td>
          <td>(</td>
          <td class="paramtype">size_t&#160;</td>
          <td class="paramname"><em>page_idx</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">wxWindow *&#160;</td>
          <td class="paramname"><em>page</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const wxString &amp;&#160;</td>
          <td class="paramname"><em>caption</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>select</em> = <code>false</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const wxBitmap &amp;&#160;</td>
          <td class="paramname"><em>bitmap</em> = <code>wxNullBitmap</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Insert Page. </p>
<p>Calls the base-class function and after that MinmizeFreeSpace(). </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">page_idx</td><td>The index where the page should be inserted </td></tr>
    <tr><td class="paramname">page</td><td>The page to add </td></tr>
    <tr><td class="paramname">caption</td><td>The caption of the page </td></tr>
    <tr><td class="paramname">select</td><td>If true the page gets selected </td></tr>
    <tr><td class="paramname">bitmap</td><td>The bitmap of the tab </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>true if successfull </dd></dl>

<p>References <a class="el" href="classcbAuiNotebook.xhtml#a1774dc042d14016360fd8273ce234a02">MinimizeFreeSpace()</a>.</p>

</div>
</div>
<a class="anchor" id="ae048242a62cc94309e4520953ced7769"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void cbAuiNotebook::InvertAdvanceDirection </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>invert</em> = <code>false</code></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Change direction of tab-advancing with mousewheel. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">invert</td><td>If true advance direction is inverted </td></tr>
  </table>
  </dd>
</dl>

<p>References <a class="el" href="classcbAuiNotebook.xhtml#aea5098339030658a2d6fc8d74ce576ca">s_advanceDirection</a>.</p>

<p>Referenced by <a class="el" href="classcbAuiNotebook.xhtml#af50e18d02a356b2dcb3aec83d4f4290d">cbAuiNotebook()</a>.</p>

</div>
</div>
<a class="anchor" id="a232559ba004f85b9128ab039c9da13cb"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void cbAuiNotebook::InvertMoveDirection </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>invert</em> = <code>false</code></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Change direction of tab-moving with mousewheel. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">invert</td><td>If true move direction is inverted </td></tr>
  </table>
  </dd>
</dl>

<p>References <a class="el" href="classcbAuiNotebook.xhtml#ae8d999488cabf3d351cf65c5b31b4efb">s_moveDirection</a>.</p>

<p>Referenced by <a class="el" href="classcbAuiNotebook.xhtml#af50e18d02a356b2dcb3aec83d4f4290d">cbAuiNotebook()</a>.</p>

</div>
</div>
<a class="anchor" id="ade8fb4c0fe12b6b3bb91f8e4de2443eb"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool cbAuiNotebook::IsFocusStored </td>
          <td>(</td>
          <td class="paramtype">wxWindow *&#160;</td>
          <td class="paramname"><em>page</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Checks the old focus. </p>
<p>Checks whether the old focused window or one of it's parents is the same as page. If they are equal, we have to reset the stored pointer, because we get a crash otherwise. </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">page</td><td>The page to check against </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>bool </dd></dl>

<p>References <a class="el" href="classcbAuiNotebook.xhtml#ac210ced06ba70bcb69b24a7cbf9098c0">m_LastId</a>.</p>

<p>Referenced by <a class="el" href="classcbAuiNotebook.xhtml#adc9ea61a21d36a64b2076a361073ddaa">DeletePage()</a>, and <a class="el" href="classcbAuiNotebook.xhtml#acc89c9481fab2d9ca4029f23a63b72e1">RemovePage()</a>.</p>

</div>
</div>
<a class="anchor" id="a07f123507069a9e590b6d7d57e361e5e"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool cbAuiNotebook::LoadPerspective </td>
          <td>(</td>
          <td class="paramtype">const wxString &amp;&#160;</td>
          <td class="paramname"><em>layout</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>mergeLayouts</em> = <code>false</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Loads serialized notebook layout. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">layout</td><td>the serialized layout </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>bool true if successfull </dd></dl>

<p>References <a class="el" href="classcbAuiNotebook.xhtml#a44298172bce32f46b6053dbb6d8e74eb">GetPageToolTip()</a>, <a class="el" href="classcbAuiNotebook.xhtml#a9033ad5038d4b676e672f2a8c96cb6c8">GetTabIndexFromTooltip()</a>, <a class="el" href="classcbAuiNotebook.xhtml#aad4104c12abde95c86ff57f734f8c429">m_TabCtrls</a>, <a class="el" href="namespaceHTMLTags.xhtml#a71934279c87b75ee1d587516664a3b41">HTMLTags::tab</a>, <a class="el" href="classcbAuiNotebook.xhtml#ae06e08f6c0861f7340122f4d9b800ea9">UniqueIdFromTooltip()</a>, and <a class="el" href="classcbAuiNotebook.xhtml#a9f74c168d12b42e0d937ba60a923649f">UpdateTabControlsArray()</a>.</p>

<p>Referenced by <a class="el" href="classWorkspaceLoader.xhtml#a7b932dc39ed184987a5d4a0ab386e762">WorkspaceLoader::LoadLayout()</a>, and <a class="el" href="classProjectLayoutLoader.xhtml#aa525768434f9cb439512a62aab48a83b">ProjectLayoutLoader::LoadNotebookLayout()</a>.</p>

</div>
</div>
<a class="anchor" id="a1774dc042d14016360fd8273ce234a02"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void cbAuiNotebook::MinimizeFreeSpace </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Minmize free horizontal page. </p>
<p>Moves the active tab of all tabCtrl's to the rightmost place, to show as many tabs as possible. </p>

<p>References <a class="el" href="classcbAuiNotebook.xhtml#a8a4add6486da5408e7f2157943a7e437">m_MinimizeFreeSpaceOnIdle</a>.</p>

<p>Referenced by <a class="el" href="classcbAuiNotebook.xhtml#a64a3f67c23537fa3bb57fea00a669d40">AddPage()</a>, <a class="el" href="classcbAuiNotebook.xhtml#adc9ea61a21d36a64b2076a361073ddaa">DeletePage()</a>, <a class="el" href="classcbAuiNotebook.xhtml#a8585e0c1c19ead5e45297afb86b02c7b">InsertPage()</a>, <a class="el" href="classcbAuiNotebook.xhtml#a8468d5884af0a34d6c72c439dd303ce9">MovePage()</a>, <a class="el" href="classcbAuiNotebook.xhtml#aa4e1e078d17ee180dd4b2e813699317d">OnIdle()</a>, <a class="el" href="classcbAuiNotebook.xhtml#aca9efe60f804b9f971c5fbadac18de52">OnResize()</a>, <a class="el" href="classcbAuiNotebook.xhtml#acc89c9481fab2d9ca4029f23a63b72e1">RemovePage()</a>, and <a class="el" href="classProjectManager.xhtml#a24f4ede0b98d346254d87a84a3d89af0">ProjectManager::WorkspaceChanged()</a>.</p>

</div>
</div>
<a class="anchor" id="a09e22fd9a831151641bcbff47827cbc6"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void cbAuiNotebook::MinimizeFreeSpace </td>
          <td>(</td>
          <td class="paramtype">wxAuiTabCtrl *&#160;</td>
          <td class="paramname"><em>tabCtrl</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Minmize free horizontal page of tabCtrl. </p>
<p>Moves the active tab of tabCtrl to the rightmost place, to show as many tabs as possible. </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">tabCtrl</td><td>The tabCtrl to act on </td></tr>
  </table>
  </dd>
</dl>

<p>References <a class="el" href="globals_8h.xhtml#a7b6036d8064b1ee5ee5d77368f0afff0">IsWindowReallyShown()</a>.</p>

</div>
</div>
<a class="anchor" id="a8468d5884af0a34d6c72c439dd303ce9"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool cbAuiNotebook::MovePage </td>
          <td>(</td>
          <td class="paramtype">wxWindow *&#160;</td>
          <td class="paramname"><em>page</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">size_t&#160;</td>
          <td class="paramname"><em>new_idx</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Move page. </p>
<p>Moves the tab containing page to new_idx </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">page</td><td>The page to move (e.g. cbEditor*) </td></tr>
    <tr><td class="paramname">new_idx</td><td>The index the page should be moved to </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>true if successfull </dd></dl>

<p>References <a class="el" href="classcbAuiNotebook.xhtml#aad4104c12abde95c86ff57f734f8c429">m_TabCtrls</a>, <a class="el" href="classcbAuiNotebook.xhtml#a1774dc042d14016360fd8273ce234a02">MinimizeFreeSpace()</a>, and <a class="el" href="classcbAuiNotebook.xhtml#a9f74c168d12b42e0d937ba60a923649f">UpdateTabControlsArray()</a>.</p>

</div>
</div>
<a class="anchor" id="a8d092e091c0ff7da34ae3b13b10d0835"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void cbAuiNotebook::OnDragDone </td>
          <td>(</td>
          <td class="paramtype">wxAuiNotebookEvent &amp;&#160;</td>
          <td class="paramname"><em>event</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Catch dragdone-events from wxTabCtrl. </p>

<p>References <a class="el" href="classcbAuiNotebook.xhtml#a9f74c168d12b42e0d937ba60a923649f">UpdateTabControlsArray()</a>.</p>

</div>
</div>
<a class="anchor" id="ac2187ec706f95196c6d3c682ad8cf2a5"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void cbAuiNotebook::OnEnterTabCtrl </td>
          <td>(</td>
          <td class="paramtype">wxMouseEvent &amp;&#160;</td>
          <td class="paramname"><em>event</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Catch mouseenter-events from wxTabCtrl. </p>
<p>Set focus on wxTabCtrl </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">event</td><td>holds the wxTabCtrl, that sends the event </td></tr>
  </table>
  </dd>
</dl>

<p>References <a class="el" href="classcbAuiNotebook.xhtml#ac210ced06ba70bcb69b24a7cbf9098c0">m_LastId</a>, <a class="el" href="classcbAuiNotebook.xhtml#a3076aa11b0894f470aae1765ec466ad7">m_LastSelected</a>, <a class="el" href="classcbAuiNotebook.xhtml#a8a79b7b60a118f4ff47cf6b4dc3ef1bc">s_AllowMousewheel</a>, and <a class="el" href="classcbAuiNotebook.xhtml#a370d212da0cd5396aca025fd3589d51e">StoreFocus()</a>.</p>

<p>Referenced by <a class="el" href="classcbAuiNotebook.xhtml#afefb87cb1a6de28a62c0af497b688ad9">ResetTabCtrlEvents()</a>.</p>

</div>
</div>
<a class="anchor" id="aa4e1e078d17ee180dd4b2e813699317d"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void cbAuiNotebook::OnIdle </td>
          <td>(</td>
          <td class="paramtype">cb_unused wxIdleEvent &amp;&#160;</td>
          <td class="paramname"><em>event</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>OnIdle. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">event</td><td>unused </td></tr>
  </table>
  </dd>
</dl>

<p>References <a class="el" href="classManager.xhtml#acf40c9bf3465914dd64d9fdf3b3dc80a">Manager::Get()</a>, <a class="el" href="classManager.xhtml#a66c9757eaea9fce292dc74ae43a6d637">Manager::GetEditorManager()</a>, <a class="el" href="classEditorManager.xhtml#a026003374f7bcd1bd6ea4510075be5a0">EditorManager::GetZoom()</a>, <a class="el" href="classcbAuiNotebook.xhtml#a8a4add6486da5408e7f2157943a7e437">m_MinimizeFreeSpaceOnIdle</a>, <a class="el" href="classcbAuiNotebook.xhtml#a70a13bf09ea9357789b8fbfacfed201b">m_SetZoomOnIdle</a>, <a class="el" href="classcbAuiNotebook.xhtml#aad4104c12abde95c86ff57f734f8c429">m_TabCtrls</a>, <a class="el" href="classcbAuiNotebook.xhtml#a1774dc042d14016360fd8273ce234a02">MinimizeFreeSpace()</a>, <a class="el" href="classcbAuiNotebook.xhtml#ac1edba5c3d0a9e7ae84124473e27d341">SetZoom()</a>, and <a class="el" href="classcbAuiNotebook.xhtml#a9f74c168d12b42e0d937ba60a923649f">UpdateTabControlsArray()</a>.</p>

</div>
</div>
<a class="anchor" id="ad4bb91e22cc4a2601381376c2e4f5d5d"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void cbAuiNotebook::OnLeaveTabCtrl </td>
          <td>(</td>
          <td class="paramtype">wxMouseEvent &amp;&#160;</td>
          <td class="paramname"><em>event</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Catch mouseleave-events from wxTabCtrl. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">event</td><td>holds the wxTabCtrl, that sends the event </td></tr>
  </table>
  </dd>
</dl>

<p>References <a class="el" href="classcbAuiNotebook.xhtml#ac29738c79da25a7407a0e1fcfcd0025d">RestoreFocus()</a>.</p>

<p>Referenced by <a class="el" href="classcbAuiNotebook.xhtml#afefb87cb1a6de28a62c0af497b688ad9">ResetTabCtrlEvents()</a>.</p>

</div>
</div>
<a class="anchor" id="a0eb5cff72d4810447af90111b0d62eaa"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void cbAuiNotebook::OnMotion </td>
          <td>(</td>
          <td class="paramtype">wxMouseEvent &amp;&#160;</td>
          <td class="paramname"><em>event</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Catch mousemotion-events. </p>
<p>Needed for the backport of tabtooltip from wx2.9</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">event</td><td>holds the wxTabCtrl, that sends the event </td></tr>
  </table>
  </dd>
</dl>

<p>References <a class="el" href="classcbAuiNotebook.xhtml#a6c6de8d09fce158249183a800931c16f">m_HasToolTip</a>.</p>

<p>Referenced by <a class="el" href="classcbAuiNotebook.xhtml#afefb87cb1a6de28a62c0af497b688ad9">ResetTabCtrlEvents()</a>.</p>

</div>
</div>
<a class="anchor" id="a0a92b9044facd7feb3d1d4c65a4f1bcb"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void cbAuiNotebook::OnNavigationKey </td>
          <td>(</td>
          <td class="paramtype">wxNavigationKeyEvent &amp;&#160;</td>
          <td class="paramname"><em>event</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Handle the navigation key event. </p>
<p>Tries to handle the navigation key-event and use "our" <a class="el" href="classcbAuiNotebook.xhtml#af68db52d126ff3f246c63528fb983f67" title="Advances the selection. ">AdvanceSelection()</a>. </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">event</td><td></td></tr>
  </table>
  </dd>
</dl>
<dl class="section remark"><dt>Remarks</dt><dd>Works not reliable, due to OS/wxWidgets-limitations </dd></dl>

</div>
</div>
<a class="anchor" id="aca9efe60f804b9f971c5fbadac18de52"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void cbAuiNotebook::OnResize </td>
          <td>(</td>
          <td class="paramtype">wxSizeEvent &amp;&#160;</td>
          <td class="paramname"><em>event</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Catch resize-events and call <a class="el" href="classcbAuiNotebook.xhtml#a1774dc042d14016360fd8273ce234a02" title="Minmize free horizontal page. ">MinimizeFreeSpace()</a> </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">event</td><td>unused </td></tr>
  </table>
  </dd>
</dl>

<p>References <a class="el" href="classcbAuiNotebook.xhtml#a1330ff7fdf878b5eb110cbd9247659ae">m_TabCtrlSize</a>, and <a class="el" href="classcbAuiNotebook.xhtml#a1774dc042d14016360fd8273ce234a02">MinimizeFreeSpace()</a>.</p>

<p>Referenced by <a class="el" href="classcbAuiNotebook.xhtml#afefb87cb1a6de28a62c0af497b688ad9">ResetTabCtrlEvents()</a>.</p>

</div>
</div>
<a class="anchor" id="a8913d152f53e3f3113582af4b43c26b2"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void cbAuiNotebook::OnTabCtrlDblClick </td>
          <td>(</td>
          <td class="paramtype">wxMouseEvent &amp;&#160;</td>
          <td class="paramname"><em>event</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Catch doubleclick-events from wxTabCtrl. </p>
<p>Sends cbEVT_CBAUIBOOK_LEFT_DCLICK, if doubleclick was on a tab, event-Id is the notebook-Id, event-object is the pointer to the window the tab belongs to. </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">event</td><td>holds the wxTabCtrl, that sends the event </td></tr>
  </table>
  </dd>
</dl>

<p>References <a class="el" href="sdk__events_8h.xhtml#a233bc5177c03a49442e80cfb57d4c8b0">cbEVT_CBAUIBOOK_LEFT_DCLICK</a>.</p>

<p>Referenced by <a class="el" href="classcbAuiNotebook.xhtml#afefb87cb1a6de28a62c0af497b688ad9">ResetTabCtrlEvents()</a>.</p>

</div>
</div>
<a class="anchor" id="aa5183ead990040c4329e22e36ea8d29b"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void cbAuiNotebook::OnTabCtrlMouseWheel </td>
          <td>(</td>
          <td class="paramtype">wxMouseEvent &amp;&#160;</td>
          <td class="paramname"><em>event</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Catch mousewheel-events from wxTabCtrl. </p>
<p>Sends cbEVT_CBAUIBOOK_MOUSEWHEEL, if doubleclick was on a tab, event-Id is the notebook-Id, event-object is the pointer to the window the tab belongs to. </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">event</td><td>holds the wxTabCtrl, that sends the event </td></tr>
  </table>
  </dd>
</dl>

<p>References <a class="el" href="classcbAuiNotebook.xhtml#af68db52d126ff3f246c63528fb983f67">AdvanceSelection()</a>, <a class="el" href="classcbAuiNotebook.xhtml#a82ff14d18765046a202a1f6c0fc10d89">CheckKeyModifier()</a>, <a class="el" href="classcbAuiNotebook.xhtml#aea5098339030658a2d6fc8d74ce576ca">s_advanceDirection</a>, <a class="el" href="classcbAuiNotebook.xhtml#a4731213afeea0b86b9489d226b249420">s_modToAdvance</a>, and <a class="el" href="classcbAuiNotebook.xhtml#ae8d999488cabf3d351cf65c5b31b4efb">s_moveDirection</a>.</p>

<p>Referenced by <a class="el" href="classcbAuiNotebook.xhtml#afefb87cb1a6de28a62c0af497b688ad9">ResetTabCtrlEvents()</a>.</p>

</div>
</div>
<a class="anchor" id="acc89c9481fab2d9ca4029f23a63b72e1"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool cbAuiNotebook::RemovePage </td>
          <td>(</td>
          <td class="paramtype">size_t&#160;</td>
          <td class="paramname"><em>page</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Remove Page. </p>
<p>Calls the base-class function and after that MinmizeFreeSpace(), needed to hook into the close-events. The system generated close event has to be veto'd, and Close() has to be called manually, so we can handle it ourselves. </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">The</td><td>index of the tab to be closed </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>true if successfull </dd></dl>

<p>References <a class="el" href="classcbAuiNotebook.xhtml#ade8fb4c0fe12b6b3bb91f8e4de2443eb">IsFocusStored()</a>, <a class="el" href="classcbAuiNotebook.xhtml#ac210ced06ba70bcb69b24a7cbf9098c0">m_LastId</a>, <a class="el" href="classcbAuiNotebook.xhtml#a3076aa11b0894f470aae1765ec466ad7">m_LastSelected</a>, and <a class="el" href="classcbAuiNotebook.xhtml#a1774dc042d14016360fd8273ce234a02">MinimizeFreeSpace()</a>.</p>

<p>Referenced by <a class="el" href="classNativeParser.xhtml#a4a8a205cec95ccd80ab11a2194de6aa2">NativeParser::RemoveClassBrowser()</a>, and <a class="el" href="classEditorManager.xhtml#a28c584ec0d3fa3591d4bc8e03a7bde38">EditorManager::RemoveEditorBase()</a>.</p>

</div>
</div>
<a class="anchor" id="afefb87cb1a6de28a62c0af497b688ad9"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void cbAuiNotebook::ResetTabCtrlEvents </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Reset tabctrl events. </p>

<p>References <a class="el" href="classcbAuiNotebook.xhtml#aad4104c12abde95c86ff57f734f8c429">m_TabCtrls</a>, <a class="el" href="classcbAuiNotebook.xhtml#ac2187ec706f95196c6d3c682ad8cf2a5">OnEnterTabCtrl()</a>, <a class="el" href="classcbAuiNotebook.xhtml#ad4bb91e22cc4a2601381376c2e4f5d5d">OnLeaveTabCtrl()</a>, <a class="el" href="classcbAuiNotebook.xhtml#a0eb5cff72d4810447af90111b0d62eaa">OnMotion()</a>, <a class="el" href="classcbAuiNotebook.xhtml#aca9efe60f804b9f971c5fbadac18de52">OnResize()</a>, <a class="el" href="classcbAuiNotebook.xhtml#a8913d152f53e3f3113582af4b43c26b2">OnTabCtrlDblClick()</a>, <a class="el" href="classcbAuiNotebook.xhtml#aa5183ead990040c4329e22e36ea8d29b">OnTabCtrlMouseWheel()</a>, and <a class="el" href="classcbAuiNotebook.xhtml#a8a79b7b60a118f4ff47cf6b4dc3ef1bc">s_AllowMousewheel</a>.</p>

<p>Referenced by <a class="el" href="classcbAuiNotebook.xhtml#a9f74c168d12b42e0d937ba60a923649f">UpdateTabControlsArray()</a>.</p>

</div>
</div>
<a class="anchor" id="ac29738c79da25a7407a0e1fcfcd0025d"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void cbAuiNotebook::RestoreFocus </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Restore old focus. </p>
<p>Restore old focus or set the focus on the activated tab </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">event</td><td>holds the wxTabCtrl, that sends the event </td></tr>
  </table>
  </dd>
</dl>

<p>References <a class="el" href="classcbAuiNotebook.xhtml#ac210ced06ba70bcb69b24a7cbf9098c0">m_LastId</a>, and <a class="el" href="classcbAuiNotebook.xhtml#a3076aa11b0894f470aae1765ec466ad7">m_LastSelected</a>.</p>

<p>Referenced by <a class="el" href="classcbAuiNotebook.xhtml#ad4bb91e22cc4a2601381376c2e4f5d5d">OnLeaveTabCtrl()</a>.</p>

</div>
</div>
<a class="anchor" id="a7a5368ef9bce2ad1921c1958520c11c5"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">wxString cbAuiNotebook::SavePerspective </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Save layout of the notebook. </p>
<dl class="section return"><dt>Returns</dt><dd>wxString the serialized layout </dd></dl>

<p>References <a class="el" href="classcbAuiNotebook.xhtml#a44298172bce32f46b6053dbb6d8e74eb">GetPageToolTip()</a>, <a class="el" href="classcbAuiNotebook.xhtml#aad4104c12abde95c86ff57f734f8c429">m_TabCtrls</a>, <a class="el" href="classcbAuiNotebook.xhtml#ae06e08f6c0861f7340122f4d9b800ea9">UniqueIdFromTooltip()</a>, and <a class="el" href="classcbAuiNotebook.xhtml#a9f74c168d12b42e0d937ba60a923649f">UpdateTabControlsArray()</a>.</p>

</div>
</div>
<a class="anchor" id="ae42865e1999b1efd2fa0282cf3a1c4a7"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void cbAuiNotebook::SetModKeys </td>
          <td>(</td>
          <td class="paramtype">wxString&#160;</td>
          <td class="paramname"><em>keys</em> = <code>_T(&quot;Strg&quot;)</code></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Sets the modifier keys for scrolling. </p>

<p>References <a class="el" href="classcbAuiNotebook.xhtml#a9b6a025db44ff933e783fc0b98e1ef5a">s_modKeys</a>.</p>

</div>
</div>
<a class="anchor" id="a7b1891cde924a83cd88e96ab82fb1c7f"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool cbAuiNotebook::SetPageToolTip </td>
          <td>(</td>
          <td class="paramtype">size_t&#160;</td>
          <td class="paramname"><em>idx</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const wxString &amp;&#160;</td>
          <td class="paramname"><em>text</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Set a tab tooltip. </p>
<p>Sets the tooltip for the tab belonging to win. Starts the dwell timer and the stopwatch if it is not already done. </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">idx</td><td>the index of the pane that belongs to the tab </td></tr>
    <tr><td class="paramname">text</td><td>the tooltip </td></tr>
  </table>
  </dd>
</dl>
<dl class="section remark"><dt>Remarks</dt><dd>Uses the name of the wxWindow to store the message </dd></dl>
<dl class="section return"><dt>Returns</dt><dd>bool true if tooltip was updated </dd></dl>

<p>References <a class="el" href="classcbAuiNotebook.xhtml#a6c6de8d09fce158249183a800931c16f">m_HasToolTip</a>, and <a class="el" href="classcbAuiNotebook.xhtml#a9f74c168d12b42e0d937ba60a923649f">UpdateTabControlsArray()</a>.</p>

<p>Referenced by <a class="el" href="classEditorBase.xhtml#ae101719afabeded9433ae9b4bf3ccc38">EditorBase::SetTitle()</a>.</p>

</div>
</div>
<a class="anchor" id="ac1edba5c3d0a9e7ae84124473e27d341"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void cbAuiNotebook::SetZoom </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>zoom</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Set zoomfactor for builtin editors. </p>
<p>Sets the zoomfactor for all visible builtin editors. </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">zoom</td><td>zoomfactor to use </td></tr>
  </table>
  </dd>
</dl>

<p>References <a class="el" href="classcbAuiNotebook.xhtml#a70a13bf09ea9357789b8fbfacfed201b">m_SetZoomOnIdle</a>, <a class="el" href="classcbAuiNotebook.xhtml#aad4104c12abde95c86ff57f734f8c429">m_TabCtrls</a>, and <a class="el" href="classcbAuiNotebook.xhtml#a9f74c168d12b42e0d937ba60a923649f">UpdateTabControlsArray()</a>.</p>

<p>Referenced by <a class="el" href="classcbAuiNotebook.xhtml#aa4e1e078d17ee180dd4b2e813699317d">OnIdle()</a>, and <a class="el" href="classcbEditor.xhtml#a7fe4fdcd4dd851be48bc66538afd5128">cbEditor::OnZoom()</a>.</p>

</div>
</div>
<a class="anchor" id="a370d212da0cd5396aca025fd3589d51e"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void cbAuiNotebook::StoreFocus </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Save old focus. </p>
<p>Save old focus and tab-selection, </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">event</td><td>holds the wxTabCtrl, that sends the event </td></tr>
  </table>
  </dd>
</dl>

<p>References <a class="el" href="classcbAuiNotebook.xhtml#ac210ced06ba70bcb69b24a7cbf9098c0">m_LastId</a>, and <a class="el" href="classcbAuiNotebook.xhtml#a3076aa11b0894f470aae1765ec466ad7">m_LastSelected</a>.</p>

<p>Referenced by <a class="el" href="classcbAuiNotebook.xhtml#ac2187ec706f95196c6d3c682ad8cf2a5">OnEnterTabCtrl()</a>.</p>

</div>
</div>
<a class="anchor" id="ae06e08f6c0861f7340122f4d9b800ea9"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">wxString cbAuiNotebook::UniqueIdFromTooltip </td>
          <td>(</td>
          <td class="paramtype">const wxString &amp;&#160;</td>
          <td class="paramname"><em>text</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Create a unique id from the tooltip-text. </p>
<p>Tries to create a unique id from the tooltip. Find the projectfile, geet the relative filename and put it together with the projects name. We use it to save and load the pane layout. By using the relative filename, it works even if the project gets moved to another place. </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">text</td><td>The tooltip text </td></tr>
  </table>
  </dd>
</dl>

<p>References <a class="el" href="classProjectManager.xhtml#a4594616ec35dbed81cbbeedab3ab846d">ProjectManager::FindProjectForFile()</a>, <a class="el" href="classManager.xhtml#acf40c9bf3465914dd64d9fdf3b3dc80a">Manager::Get()</a>, <a class="el" href="classManager.xhtml#a257bd7c728150123cab119f95809a443">Manager::GetProjectManager()</a>, <a class="el" href="classCompileTargetBase.xhtml#a85d1e1963e93e5da19a4f07993bfab27">CompileTargetBase::GetTitle()</a>, and <a class="el" href="classProjectFile.xhtml#a3b08eb658a73e9549eaf5fd7a3ae7e50">ProjectFile::relativeFilename</a>.</p>

<p>Referenced by <a class="el" href="classcbAuiNotebook.xhtml#a9033ad5038d4b676e672f2a8c96cb6c8">GetTabIndexFromTooltip()</a>, <a class="el" href="classcbAuiNotebook.xhtml#a07f123507069a9e590b6d7d57e361e5e">LoadPerspective()</a>, and <a class="el" href="classcbAuiNotebook.xhtml#a7a5368ef9bce2ad1921c1958520c11c5">SavePerspective()</a>.</p>

</div>
</div>
<a class="anchor" id="a9f74c168d12b42e0d937ba60a923649f"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void cbAuiNotebook::UpdateTabControlsArray </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Updates the array, that holds the wxTabCtrls. </p>

<p>References <a class="el" href="classcbAuiNotebook.xhtml#aad4104c12abde95c86ff57f734f8c429">m_TabCtrls</a>, and <a class="el" href="classcbAuiNotebook.xhtml#afefb87cb1a6de28a62c0af497b688ad9">ResetTabCtrlEvents()</a>.</p>

<p>Referenced by <a class="el" href="classcbAuiNotebook.xhtml#a2e754857199d3411e161860c49a2b915">FocusActiveTabCtrl()</a>, <a class="el" href="classcbAuiNotebook.xhtml#a1a4b4bcb7f6b5d107be4cc385a01bb2d">GetTabPositionFromIndex()</a>, <a class="el" href="classcbAuiNotebook.xhtml#a07f123507069a9e590b6d7d57e361e5e">LoadPerspective()</a>, <a class="el" href="classcbAuiNotebook.xhtml#a8468d5884af0a34d6c72c439dd303ce9">MovePage()</a>, <a class="el" href="classcbAuiNotebook.xhtml#a8d092e091c0ff7da34ae3b13b10d0835">OnDragDone()</a>, <a class="el" href="classcbAuiNotebook.xhtml#aa4e1e078d17ee180dd4b2e813699317d">OnIdle()</a>, <a class="el" href="classcbAuiNotebook.xhtml#a7a5368ef9bce2ad1921c1958520c11c5">SavePerspective()</a>, <a class="el" href="classcbAuiNotebook.xhtml#a7b1891cde924a83cd88e96ab82fb1c7f">SetPageToolTip()</a>, and <a class="el" href="classcbAuiNotebook.xhtml#ac1edba5c3d0a9e7ae84124473e27d341">SetZoom()</a>.</p>

</div>
</div>
<a class="anchor" id="a79dedac25fbcfe88cf182987e8e88057"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void cbAuiNotebook::UseModToAdvance </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>use</em> = <code>false</code></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Use modkey to advance through tabs with mousewheel. </p>

<p>References <a class="el" href="classcbAuiNotebook.xhtml#a4731213afeea0b86b9489d226b249420">s_modToAdvance</a>.</p>

</div>
</div>
<a class="anchor" id="a8396d841d1ae61fd8b0de5c14c062128"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static void cbAuiNotebook::UseToolTips </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>use</em> = <code>true</code></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Enable or disable tabtooltips globally. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">use</td><td>If true tooltips are allowed </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<h2 class="groupheader">Member Data Documentation</h2>
<a class="anchor" id="a6c6de8d09fce158249183a800931c16f"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool cbAuiNotebook::m_HasToolTip</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>If false, tooltips are not shown. </p>
<p>Needed to only show tooltips, if they have been explicitely set. We store the tooltip-text in the tabs name, without this flag, we get the wxWidgets default-names as tooltips. </p>

<p>Referenced by <a class="el" href="classcbAuiNotebook.xhtml#a0eb5cff72d4810447af90111b0d62eaa">OnMotion()</a>, and <a class="el" href="classcbAuiNotebook.xhtml#a7b1891cde924a83cd88e96ab82fb1c7f">SetPageToolTip()</a>.</p>

</div>
</div>
<a class="anchor" id="ac210ced06ba70bcb69b24a7cbf9098c0"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">long cbAuiNotebook::m_LastId</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Id of last focused window. </p>
<p>Used to restore the focus after a mouseleave-event on wxTabCtrl. </p>

<p>Referenced by <a class="el" href="classcbAuiNotebook.xhtml#adc9ea61a21d36a64b2076a361073ddaa">DeletePage()</a>, <a class="el" href="classcbAuiNotebook.xhtml#ade8fb4c0fe12b6b3bb91f8e4de2443eb">IsFocusStored()</a>, <a class="el" href="classcbAuiNotebook.xhtml#ac2187ec706f95196c6d3c682ad8cf2a5">OnEnterTabCtrl()</a>, <a class="el" href="classcbAuiNotebook.xhtml#acc89c9481fab2d9ca4029f23a63b72e1">RemovePage()</a>, <a class="el" href="classcbAuiNotebook.xhtml#ac29738c79da25a7407a0e1fcfcd0025d">RestoreFocus()</a>, and <a class="el" href="classcbAuiNotebook.xhtml#a370d212da0cd5396aca025fd3589d51e">StoreFocus()</a>.</p>

</div>
</div>
<a class="anchor" id="a3076aa11b0894f470aae1765ec466ad7"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int cbAuiNotebook::m_LastSelected</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Last selected tab. </p>
<p>Used to determine whether the tab-selection has changed btween mouseenter and mouseleave-event. </p>

<p>Referenced by <a class="el" href="classcbAuiNotebook.xhtml#adc9ea61a21d36a64b2076a361073ddaa">DeletePage()</a>, <a class="el" href="classcbAuiNotebook.xhtml#ac2187ec706f95196c6d3c682ad8cf2a5">OnEnterTabCtrl()</a>, <a class="el" href="classcbAuiNotebook.xhtml#acc89c9481fab2d9ca4029f23a63b72e1">RemovePage()</a>, <a class="el" href="classcbAuiNotebook.xhtml#ac29738c79da25a7407a0e1fcfcd0025d">RestoreFocus()</a>, and <a class="el" href="classcbAuiNotebook.xhtml#a370d212da0cd5396aca025fd3589d51e">StoreFocus()</a>.</p>

</div>
</div>
<a class="anchor" id="a8a4add6486da5408e7f2157943a7e437"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool cbAuiNotebook::m_MinimizeFreeSpaceOnIdle</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>If true, MinimizeFreeSpace is called in next OnIdle-call. </p>

<p>Referenced by <a class="el" href="classcbAuiNotebook.xhtml#a1774dc042d14016360fd8273ce234a02">MinimizeFreeSpace()</a>, and <a class="el" href="classcbAuiNotebook.xhtml#aa4e1e078d17ee180dd4b2e813699317d">OnIdle()</a>.</p>

</div>
</div>
<a class="anchor" id="a70a13bf09ea9357789b8fbfacfed201b"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool cbAuiNotebook::m_SetZoomOnIdle</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>If true, zoom for all editors is set in next OnIdle-call. </p>

<p>Referenced by <a class="el" href="classcbAuiNotebook.xhtml#aa4e1e078d17ee180dd4b2e813699317d">OnIdle()</a>, and <a class="el" href="classcbAuiNotebook.xhtml#ac1edba5c3d0a9e7ae84124473e27d341">SetZoom()</a>.</p>

</div>
</div>
<a class="anchor" id="aad4104c12abde95c86ff57f734f8c429"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">cbAuiTabCtrlArray cbAuiNotebook::m_TabCtrls</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Holds the wxTabCtrls used by the notebook. </p>
<dl class="section remark"><dt>Remarks</dt><dd>Should be updated with <a class="el" href="classcbAuiNotebook.xhtml#a9f74c168d12b42e0d937ba60a923649f" title="Updates the array, that holds the wxTabCtrls. ">UpdateTabControlsArray()</a>, before it's used </dd></dl>

<p>Referenced by <a class="el" href="classcbAuiNotebook.xhtml#a2e754857199d3411e161860c49a2b915">FocusActiveTabCtrl()</a>, <a class="el" href="classcbAuiNotebook.xhtml#a1a4b4bcb7f6b5d107be4cc385a01bb2d">GetTabPositionFromIndex()</a>, <a class="el" href="classcbAuiNotebook.xhtml#a07f123507069a9e590b6d7d57e361e5e">LoadPerspective()</a>, <a class="el" href="classcbAuiNotebook.xhtml#a8468d5884af0a34d6c72c439dd303ce9">MovePage()</a>, <a class="el" href="classcbAuiNotebook.xhtml#aa4e1e078d17ee180dd4b2e813699317d">OnIdle()</a>, <a class="el" href="classcbAuiNotebook.xhtml#afefb87cb1a6de28a62c0af497b688ad9">ResetTabCtrlEvents()</a>, <a class="el" href="classcbAuiNotebook.xhtml#a7a5368ef9bce2ad1921c1958520c11c5">SavePerspective()</a>, <a class="el" href="classcbAuiNotebook.xhtml#ac1edba5c3d0a9e7ae84124473e27d341">SetZoom()</a>, and <a class="el" href="classcbAuiNotebook.xhtml#a9f74c168d12b42e0d937ba60a923649f">UpdateTabControlsArray()</a>.</p>

</div>
</div>
<a class="anchor" id="a1330ff7fdf878b5eb110cbd9247659ae"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">wxSize cbAuiNotebook::m_TabCtrlSize</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Holds the size of a tabCtrl after a resize event. </p>
<p>Needed to skip a resize event, if size did not change it gets triggered on any tab-click </p>

<p>Referenced by <a class="el" href="classcbAuiNotebook.xhtml#aca9efe60f804b9f971c5fbadac18de52">OnResize()</a>.</p>

</div>
</div>
<a class="anchor" id="aea5098339030658a2d6fc8d74ce576ca"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int cbAuiNotebook::s_advanceDirection = 1</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Mouseweheel advance direction: negative =&gt; invert. </p>

<p>Referenced by <a class="el" href="classcbAuiNotebook.xhtml#ae048242a62cc94309e4520953ced7769">InvertAdvanceDirection()</a>, and <a class="el" href="classcbAuiNotebook.xhtml#aa5183ead990040c4329e22e36ea8d29b">OnTabCtrlMouseWheel()</a>.</p>

</div>
</div>
<a class="anchor" id="a8a79b7b60a118f4ff47cf6b4dc3ef1bc"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool cbAuiNotebook::s_AllowMousewheel = true</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Enable or disable scrolling tabs with mousewheel. </p>

<p>Referenced by <a class="el" href="classcbAuiNotebook.xhtml#ad3c4f715351603763e2dde5a6b2d361b">AllowScrolling()</a>, <a class="el" href="classcbAuiNotebook.xhtml#ac2187ec706f95196c6d3c682ad8cf2a5">OnEnterTabCtrl()</a>, and <a class="el" href="classcbAuiNotebook.xhtml#afefb87cb1a6de28a62c0af497b688ad9">ResetTabCtrlEvents()</a>.</p>

</div>
</div>
<a class="anchor" id="aa7192d879ace8ea2e819015995b2c88c"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">cbAuiNotebookArray cbAuiNotebook::s_cbAuiNotebookArray</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Holds an array of all existing cbAuiNotebooks. </p>

<p>Referenced by <a class="el" href="classcbAuiNotebook.xhtml#ad3c4f715351603763e2dde5a6b2d361b">AllowScrolling()</a>, and <a class="el" href="classcbAuiNotebook.xhtml#a31a7d88a64c48ed69173d7adda5e9817">~cbAuiNotebook()</a>.</p>

</div>
</div>
<a class="anchor" id="a9b6a025db44ff933e783fc0b98e1ef5a"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">wxString cbAuiNotebook::s_modKeys = _T(&quot;Ctrl&quot;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Holds the modifier keys for scrolling. </p>

<p>Referenced by <a class="el" href="classcbAuiNotebook.xhtml#a82ff14d18765046a202a1f6c0fc10d89">CheckKeyModifier()</a>, and <a class="el" href="classcbAuiNotebook.xhtml#ae42865e1999b1efd2fa0282cf3a1c4a7">SetModKeys()</a>.</p>

</div>
</div>
<a class="anchor" id="a4731213afeea0b86b9489d226b249420"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool cbAuiNotebook::s_modToAdvance = false</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Use modkey to advance through tabs with mousewheel. </p>

<p>Referenced by <a class="el" href="classcbAuiNotebook.xhtml#aa5183ead990040c4329e22e36ea8d29b">OnTabCtrlMouseWheel()</a>, and <a class="el" href="classcbAuiNotebook.xhtml#a79dedac25fbcfe88cf182987e8e88057">UseModToAdvance()</a>.</p>

</div>
</div>
<a class="anchor" id="ae8d999488cabf3d351cf65c5b31b4efb"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int cbAuiNotebook::s_moveDirection = 1</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Mousewheel move direction: negative =&gt; invert. </p>

<p>Referenced by <a class="el" href="classcbAuiNotebook.xhtml#a232559ba004f85b9128ab039c9da13cb">InvertMoveDirection()</a>, and <a class="el" href="classcbAuiNotebook.xhtml#aa5183ead990040c4329e22e36ea8d29b">OnTabCtrlMouseWheel()</a>.</p>

</div>
</div>
<a class="anchor" id="a890f59d67f6cf386fe9be3dc62660c8d"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool cbAuiNotebook::s_UseTabTooltips</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Enable or disable tab tooltips. </p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li><a class="el" href="cbauibook_8h_source.xhtml">cbauibook.h</a></li>
<li><a class="el" href="cbauibook_8cpp.xhtml">cbauibook.cpp</a></li>
</ul>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.8
</small></address>
</body>
</html>
