<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.8"/>
<title>Code::Blocks: SQCompiler Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">Code::Blocks
   &#160;<span id="projectnumber">SVN r10054</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.8 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li><a href="files.xhtml"><span>Files</span></a></li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.xhtml"><span>Class&#160;List</span></a></li>
      <li><a href="classes.xhtml"><span>Class&#160;Index</span></a></li>
      <li><a href="inherits.xhtml"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.xhtml"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-static-methods">Static Public Member Functions</a> &#124;
<a href="#pri-attribs">Private Attributes</a> &#124;
<a href="classSQCompiler-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">SQCompiler Class Reference</div>  </div>
</div><!--header-->
<div class="contents">
<div class="dynheader">
Collaboration diagram for SQCompiler:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="classSQCompiler__coll__graph.svg" width="211" height="411"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a70b5da16126b868ed56de4dacc541c6e"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classSQCompiler.xhtml#a70b5da16126b868ed56de4dacc541c6e">SQCompiler</a> (SQVM *v, SQLEXREADFUNC rg, SQUserPointer up, const SQChar *sourcename, bool raiseerror, bool lineinfo)</td></tr>
<tr class="separator:a70b5da16126b868ed56de4dacc541c6e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a101d3143a4a8b35f1b9dd270b670874e"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classSQCompiler.xhtml#a101d3143a4a8b35f1b9dd270b670874e">Error</a> (const SQChar *s,...)</td></tr>
<tr class="separator:a101d3143a4a8b35f1b9dd270b670874e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a487f759767eb1b0e74065a35021d704f"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classSQCompiler.xhtml#a487f759767eb1b0e74065a35021d704f">Lex</a> ()</td></tr>
<tr class="separator:a487f759767eb1b0e74065a35021d704f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa9dac4e753b07b7ad62b084d70340c88"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classSQCompiler.xhtml#aa9dac4e753b07b7ad62b084d70340c88">PushExpState</a> ()</td></tr>
<tr class="separator:aa9dac4e753b07b7ad62b084d70340c88"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac88aac2949be9983993c0d3255ff2f91"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classSQCompiler.xhtml#ac88aac2949be9983993c0d3255ff2f91">IsDerefToken</a> (SQInteger tok)</td></tr>
<tr class="separator:ac88aac2949be9983993c0d3255ff2f91"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a47dbe5f07c4ade1519f159781de7a7b4"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structExpState.xhtml">ExpState</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classSQCompiler.xhtml#a47dbe5f07c4ade1519f159781de7a7b4">PopExpState</a> ()</td></tr>
<tr class="separator:a47dbe5f07c4ade1519f159781de7a7b4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a99d30c29c6afc80dcbb4afe5bd14c583"><td class="memItemLeft" align="right" valign="top">SQObject&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classSQCompiler.xhtml#a99d30c29c6afc80dcbb4afe5bd14c583">Expect</a> (SQInteger tok)</td></tr>
<tr class="separator:a99d30c29c6afc80dcbb4afe5bd14c583"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a360bb03322356a03b823dee3c5798391"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classSQCompiler.xhtml#a360bb03322356a03b823dee3c5798391">IsEndOfStatement</a> ()</td></tr>
<tr class="separator:a360bb03322356a03b823dee3c5798391"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af3f80f047fe50aa32beebf54fe36ed95"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classSQCompiler.xhtml#af3f80f047fe50aa32beebf54fe36ed95">OptionalSemicolon</a> ()</td></tr>
<tr class="separator:af3f80f047fe50aa32beebf54fe36ed95"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a25e648be9ff27b001af5f34af01f3645"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classSQCompiler.xhtml#a25e648be9ff27b001af5f34af01f3645">MoveIfCurrentTargetIsLocal</a> ()</td></tr>
<tr class="separator:a25e648be9ff27b001af5f34af01f3645"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a77a8db2b1019cdebc75b19af93d0882e"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classSQCompiler.xhtml#a77a8db2b1019cdebc75b19af93d0882e">Compile</a> (SQObjectPtr &amp;o)</td></tr>
<tr class="separator:a77a8db2b1019cdebc75b19af93d0882e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a49e64ea1810874c901bd7c3fefc9dca7"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classSQCompiler.xhtml#a49e64ea1810874c901bd7c3fefc9dca7">Statements</a> ()</td></tr>
<tr class="separator:a49e64ea1810874c901bd7c3fefc9dca7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af1801d03469d133d2a24a60c882b5467"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classSQCompiler.xhtml#af1801d03469d133d2a24a60c882b5467">Statement</a> ()</td></tr>
<tr class="separator:af1801d03469d133d2a24a60c882b5467"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4af832e2c832a83140aada59d4bca706"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classSQCompiler.xhtml#a4af832e2c832a83140aada59d4bca706">EmitDerefOp</a> (SQOpcode op)</td></tr>
<tr class="separator:a4af832e2c832a83140aada59d4bca706"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2158f18885cd1213471ed1e5e224cb1c"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classSQCompiler.xhtml#a2158f18885cd1213471ed1e5e224cb1c">Emit2ArgsOP</a> (SQOpcode op, SQInteger p3=0)</td></tr>
<tr class="separator:a2158f18885cd1213471ed1e5e224cb1c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a483fb98667518d14bc040b5f1ffe2831"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classSQCompiler.xhtml#a483fb98667518d14bc040b5f1ffe2831">EmitCompoundArith</a> (SQInteger tok, bool deref)</td></tr>
<tr class="separator:a483fb98667518d14bc040b5f1ffe2831"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a73eeb5bacd889fbba91957a748a87f5d"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classSQCompiler.xhtml#a73eeb5bacd889fbba91957a748a87f5d">CommaExpr</a> ()</td></tr>
<tr class="separator:a73eeb5bacd889fbba91957a748a87f5d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6989acd1ad5821d976def13ba684fce5"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structExpState.xhtml">ExpState</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classSQCompiler.xhtml#a6989acd1ad5821d976def13ba684fce5">Expression</a> (bool funcarg=false)</td></tr>
<tr class="separator:a6989acd1ad5821d976def13ba684fce5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a83df4f13e0cb24fdd05ddd3d9791241d"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classSQCompiler.xhtml#a83df4f13e0cb24fdd05ddd3d9791241d">BIN_EXP</a> (SQOpcode op, void(SQCompiler::*f)(void), SQInteger op3=0)</td></tr>
<tr class="separator:a83df4f13e0cb24fdd05ddd3d9791241d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a78c393e142d7ed831b5230451fee588d"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classSQCompiler.xhtml#a78c393e142d7ed831b5230451fee588d">LogicalOrExp</a> ()</td></tr>
<tr class="separator:a78c393e142d7ed831b5230451fee588d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adf83588a2b1f023234d9a166cb22548f"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classSQCompiler.xhtml#adf83588a2b1f023234d9a166cb22548f">LogicalAndExp</a> ()</td></tr>
<tr class="separator:adf83588a2b1f023234d9a166cb22548f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab3c29886d0f504a4866a8bcd1d99fbe7"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classSQCompiler.xhtml#ab3c29886d0f504a4866a8bcd1d99fbe7">BitwiseOrExp</a> ()</td></tr>
<tr class="separator:ab3c29886d0f504a4866a8bcd1d99fbe7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad89842a1c23b6c61c7a65d4570d4eeed"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classSQCompiler.xhtml#ad89842a1c23b6c61c7a65d4570d4eeed">BitwiseXorExp</a> ()</td></tr>
<tr class="separator:ad89842a1c23b6c61c7a65d4570d4eeed"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5a1f6d4aa52e8bcefde3b231cf587380"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classSQCompiler.xhtml#a5a1f6d4aa52e8bcefde3b231cf587380">BitwiseAndExp</a> ()</td></tr>
<tr class="separator:a5a1f6d4aa52e8bcefde3b231cf587380"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a00b27cd6609f56579aef2c792424099c"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classSQCompiler.xhtml#a00b27cd6609f56579aef2c792424099c">CompExp</a> ()</td></tr>
<tr class="separator:a00b27cd6609f56579aef2c792424099c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5bc5faa44288c58bd3beb3cd0feac35f"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classSQCompiler.xhtml#a5bc5faa44288c58bd3beb3cd0feac35f">ShiftExp</a> ()</td></tr>
<tr class="separator:a5bc5faa44288c58bd3beb3cd0feac35f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a136e932ec0a26f24694663ee1b183ea6"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classSQCompiler.xhtml#a136e932ec0a26f24694663ee1b183ea6">PlusExp</a> ()</td></tr>
<tr class="separator:a136e932ec0a26f24694663ee1b183ea6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a735a989c43e2e6b6cf77e1a641be61a6"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classSQCompiler.xhtml#a735a989c43e2e6b6cf77e1a641be61a6">MultExp</a> ()</td></tr>
<tr class="separator:a735a989c43e2e6b6cf77e1a641be61a6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a43a11a449ea5738ac9522406f51190ea"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classSQCompiler.xhtml#a43a11a449ea5738ac9522406f51190ea">PrefixedExpr</a> ()</td></tr>
<tr class="separator:a43a11a449ea5738ac9522406f51190ea"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9a963e83277da03fe593cbda963767ae"><td class="memItemLeft" align="right" valign="top">SQInteger&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classSQCompiler.xhtml#a9a963e83277da03fe593cbda963767ae">Factor</a> ()</td></tr>
<tr class="separator:a9a963e83277da03fe593cbda963767ae"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a93ddacc819c4e543d11165bda38abb9e"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classSQCompiler.xhtml#a93ddacc819c4e543d11165bda38abb9e">UnaryOP</a> (SQOpcode op)</td></tr>
<tr class="separator:a93ddacc819c4e543d11165bda38abb9e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5b81fac18b3e0c53d91df064172d52eb"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classSQCompiler.xhtml#a5b81fac18b3e0c53d91df064172d52eb">NeedGet</a> ()</td></tr>
<tr class="separator:a5b81fac18b3e0c53d91df064172d52eb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a87fea75589becb9123a21c1e77ce7e65"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classSQCompiler.xhtml#a87fea75589becb9123a21c1e77ce7e65">FunctionCallArgs</a> ()</td></tr>
<tr class="separator:a87fea75589becb9123a21c1e77ce7e65"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a131a27247f577419d6d33de7f6d643db"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classSQCompiler.xhtml#a131a27247f577419d6d33de7f6d643db">ParseTableOrClass</a> (SQInteger separator, SQInteger terminator= '}')</td></tr>
<tr class="separator:a131a27247f577419d6d33de7f6d643db"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab70ecd203eb8bd21ea58a8ea1572843c"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classSQCompiler.xhtml#ab70ecd203eb8bd21ea58a8ea1572843c">LocalDeclStatement</a> ()</td></tr>
<tr class="separator:ab70ecd203eb8bd21ea58a8ea1572843c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad75bbadf66ec03530ccf8108712e4f30"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classSQCompiler.xhtml#ad75bbadf66ec03530ccf8108712e4f30">IfStatement</a> ()</td></tr>
<tr class="separator:ad75bbadf66ec03530ccf8108712e4f30"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1ea0500bb37fb9e6574a5706b3450851"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classSQCompiler.xhtml#a1ea0500bb37fb9e6574a5706b3450851">WhileStatement</a> ()</td></tr>
<tr class="separator:a1ea0500bb37fb9e6574a5706b3450851"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaa75fc0c44c91cf785061387a40d1ef1"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classSQCompiler.xhtml#aaa75fc0c44c91cf785061387a40d1ef1">DoWhileStatement</a> ()</td></tr>
<tr class="separator:aaa75fc0c44c91cf785061387a40d1ef1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a02deb3f0ac31f20d8531c49661c8e91f"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classSQCompiler.xhtml#a02deb3f0ac31f20d8531c49661c8e91f">ForStatement</a> ()</td></tr>
<tr class="separator:a02deb3f0ac31f20d8531c49661c8e91f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a05df2946061c8d96783df0ff123872c6"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classSQCompiler.xhtml#a05df2946061c8d96783df0ff123872c6">ForEachStatement</a> ()</td></tr>
<tr class="separator:a05df2946061c8d96783df0ff123872c6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9518569b75e9a9ad0ea140fdeea9bb6f"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classSQCompiler.xhtml#a9518569b75e9a9ad0ea140fdeea9bb6f">SwitchStatement</a> ()</td></tr>
<tr class="separator:a9518569b75e9a9ad0ea140fdeea9bb6f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad46168272dbdc570bedf563ac7368e00"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classSQCompiler.xhtml#ad46168272dbdc570bedf563ac7368e00">FunctionStatement</a> ()</td></tr>
<tr class="separator:ad46168272dbdc570bedf563ac7368e00"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a02ff7d0e5d3694082d16f756a70e7ba3"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classSQCompiler.xhtml#a02ff7d0e5d3694082d16f756a70e7ba3">ClassStatement</a> ()</td></tr>
<tr class="separator:a02ff7d0e5d3694082d16f756a70e7ba3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2cff88b179f8a12b773996f40816d136"><td class="memItemLeft" align="right" valign="top">SQObject&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classSQCompiler.xhtml#a2cff88b179f8a12b773996f40816d136">ExpectScalar</a> ()</td></tr>
<tr class="separator:a2cff88b179f8a12b773996f40816d136"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab18a57cb55ed5fdad9da5de8d7755407"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classSQCompiler.xhtml#ab18a57cb55ed5fdad9da5de8d7755407">EnumStatement</a> ()</td></tr>
<tr class="separator:ab18a57cb55ed5fdad9da5de8d7755407"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a693546b2f5f14236c4a28b4426fd0c1b"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classSQCompiler.xhtml#a693546b2f5f14236c4a28b4426fd0c1b">TryCatchStatement</a> ()</td></tr>
<tr class="separator:a693546b2f5f14236c4a28b4426fd0c1b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4eca1d3e87315d27a2be7a0675162e65"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classSQCompiler.xhtml#a4eca1d3e87315d27a2be7a0675162e65">FunctionExp</a> (SQInteger ftype)</td></tr>
<tr class="separator:a4eca1d3e87315d27a2be7a0675162e65"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2b95f8faf23581a6f0e646408bcde1ef"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classSQCompiler.xhtml#a2b95f8faf23581a6f0e646408bcde1ef">ClassExp</a> ()</td></tr>
<tr class="separator:a2b95f8faf23581a6f0e646408bcde1ef"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acd94172d0afb9df0627f5a8d375d91a7"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classSQCompiler.xhtml#acd94172d0afb9df0627f5a8d375d91a7">DelegateExpr</a> ()</td></tr>
<tr class="separator:acd94172d0afb9df0627f5a8d375d91a7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1cd77fe06b545963e8f6a3d82e08b9ff"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classSQCompiler.xhtml#a1cd77fe06b545963e8f6a3d82e08b9ff">DeleteExpr</a> ()</td></tr>
<tr class="separator:a1cd77fe06b545963e8f6a3d82e08b9ff"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a76b6ea1c1fae39f855fac7ac7d6f1aac"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classSQCompiler.xhtml#a76b6ea1c1fae39f855fac7ac7d6f1aac">PrefixIncDec</a> (SQInteger token)</td></tr>
<tr class="separator:a76b6ea1c1fae39f855fac7ac7d6f1aac"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac32f270754628d4cdb74f8f94c05bea2"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classSQCompiler.xhtml#ac32f270754628d4cdb74f8f94c05bea2">CreateFunction</a> (SQObject &amp;name)</td></tr>
<tr class="separator:ac32f270754628d4cdb74f8f94c05bea2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a76912dd217834299a5463237b40ff8e3"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classSQCompiler.xhtml#a76912dd217834299a5463237b40ff8e3">CleanStack</a> (SQInteger stacksize)</td></tr>
<tr class="separator:a76912dd217834299a5463237b40ff8e3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1359a08e5611242d9d4ad42475170601"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classSQCompiler.xhtml#a1359a08e5611242d9d4ad42475170601">ResolveBreaks</a> (SQFuncState *funcstate, SQInteger ntoresolve)</td></tr>
<tr class="separator:a1359a08e5611242d9d4ad42475170601"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3250f2afdd3622f6e9cd175cf80d06ce"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classSQCompiler.xhtml#a3250f2afdd3622f6e9cd175cf80d06ce">ResolveContinues</a> (SQFuncState *funcstate, SQInteger ntoresolve, SQInteger targetpos)</td></tr>
<tr class="separator:a3250f2afdd3622f6e9cd175cf80d06ce"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-static-methods"></a>
Static Public Member Functions</h2></td></tr>
<tr class="memitem:a7f542ea432310849546e81e7942d39e8"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classSQCompiler.xhtml#a7f542ea432310849546e81e7942d39e8">ThrowError</a> (void *ud, const SQChar *s)</td></tr>
<tr class="separator:a7f542ea432310849546e81e7942d39e8"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pri-attribs"></a>
Private Attributes</h2></td></tr>
<tr class="memitem:ae92d9cd56a99407c9d1756a044fdbc63"><td class="memItemLeft" align="right" valign="top">SQInteger&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classSQCompiler.xhtml#ae92d9cd56a99407c9d1756a044fdbc63">_token</a></td></tr>
<tr class="separator:ae92d9cd56a99407c9d1756a044fdbc63"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5f85e29517253d5696e2a6e273b91eb3"><td class="memItemLeft" align="right" valign="top">SQFuncState *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classSQCompiler.xhtml#a5f85e29517253d5696e2a6e273b91eb3">_fs</a></td></tr>
<tr class="separator:a5f85e29517253d5696e2a6e273b91eb3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad64255b5636aa8a4a54929aa723a35ac"><td class="memItemLeft" align="right" valign="top">SQObjectPtr&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classSQCompiler.xhtml#ad64255b5636aa8a4a54929aa723a35ac">_sourcename</a></td></tr>
<tr class="separator:ad64255b5636aa8a4a54929aa723a35ac"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad79e17b67e25df1ed1d3fde970afd8a1"><td class="memItemLeft" align="right" valign="top">SQLexer&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classSQCompiler.xhtml#ad79e17b67e25df1ed1d3fde970afd8a1">_lex</a></td></tr>
<tr class="separator:ad79e17b67e25df1ed1d3fde970afd8a1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a92af80512f716be6d146595414aef1ea"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classSQCompiler.xhtml#a92af80512f716be6d146595414aef1ea">_lineinfo</a></td></tr>
<tr class="separator:a92af80512f716be6d146595414aef1ea"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a091475a5ea43bd2720b5d3ed939436ba"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classSQCompiler.xhtml#a091475a5ea43bd2720b5d3ed939436ba">_raiseerror</a></td></tr>
<tr class="separator:a091475a5ea43bd2720b5d3ed939436ba"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a59c1fb68b81900b2b034532c252d73bd"><td class="memItemLeft" align="right" valign="top">SQInteger&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classSQCompiler.xhtml#a59c1fb68b81900b2b034532c252d73bd">_debugline</a></td></tr>
<tr class="separator:a59c1fb68b81900b2b034532c252d73bd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a62a80518a3dc8104d160381dee6a136d"><td class="memItemLeft" align="right" valign="top">SQInteger&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classSQCompiler.xhtml#a62a80518a3dc8104d160381dee6a136d">_debugop</a></td></tr>
<tr class="separator:a62a80518a3dc8104d160381dee6a136d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a25e6e9a19395f0c84057ef7d45d9b4b3"><td class="memItemLeft" align="right" valign="top"><a class="el" href="sqcompiler_8cpp.xhtml#a41ad1241f39b98a04f5f089ccab8de04">ExpStateVec</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classSQCompiler.xhtml#a25e6e9a19395f0c84057ef7d45d9b4b3">_expstates</a></td></tr>
<tr class="separator:a25e6e9a19395f0c84057ef7d45d9b4b3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a277878311fea9e0a32d44fae6ba0f91d"><td class="memItemLeft" align="right" valign="top">SQChar *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classSQCompiler.xhtml#a277878311fea9e0a32d44fae6ba0f91d">compilererror</a></td></tr>
<tr class="separator:a277878311fea9e0a32d44fae6ba0f91d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a286791a91d9f5700af446b604730c67f"><td class="memItemLeft" align="right" valign="top">jmp_buf&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classSQCompiler.xhtml#a286791a91d9f5700af446b604730c67f">_errorjmp</a></td></tr>
<tr class="separator:a286791a91d9f5700af446b604730c67f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab062a2f258dc4413ada43e05ed007b7a"><td class="memItemLeft" align="right" valign="top">SQVM *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classSQCompiler.xhtml#ab062a2f258dc4413ada43e05ed007b7a">_vm</a></td></tr>
<tr class="separator:ab062a2f258dc4413ada43e05ed007b7a"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="a70b5da16126b868ed56de4dacc541c6e"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">SQCompiler::SQCompiler </td>
          <td>(</td>
          <td class="paramtype">SQVM *&#160;</td>
          <td class="paramname"><em>v</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">SQLEXREADFUNC&#160;</td>
          <td class="paramname"><em>rg</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">SQUserPointer&#160;</td>
          <td class="paramname"><em>up</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const SQChar *&#160;</td>
          <td class="paramname"><em>sourcename</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>raiseerror</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>lineinfo</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>References <a class="el" href="classSQCompiler.xhtml#ad79e17b67e25df1ed1d3fde970afd8a1">_lex</a>, <a class="el" href="classSQCompiler.xhtml#a92af80512f716be6d146595414aef1ea">_lineinfo</a>, <a class="el" href="classSQCompiler.xhtml#a091475a5ea43bd2720b5d3ed939436ba">_raiseerror</a>, <a class="el" href="classSQCompiler.xhtml#ad64255b5636aa8a4a54929aa723a35ac">_sourcename</a>, <a class="el" href="classSQCompiler.xhtml#ab062a2f258dc4413ada43e05ed007b7a">_vm</a>, <a class="el" href="classSQCompiler.xhtml#a277878311fea9e0a32d44fae6ba0f91d">compilererror</a>, and <a class="el" href="classSQCompiler.xhtml#a7f542ea432310849546e81e7942d39e8">ThrowError()</a>.</p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a class="anchor" id="a83df4f13e0cb24fdd05ddd3d9791241d"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void SQCompiler::BIN_EXP </td>
          <td>(</td>
          <td class="paramtype">SQOpcode&#160;</td>
          <td class="paramname"><em>op</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void(SQCompiler::*)(void)&#160;</td>
          <td class="paramname"><em>f</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">SQInteger&#160;</td>
          <td class="paramname"><em>op3</em> = <code>0</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>References <a class="el" href="classSQCompiler.xhtml#a5f85e29517253d5696e2a6e273b91eb3">_fs</a>, and <a class="el" href="classSQCompiler.xhtml#a487f759767eb1b0e74065a35021d704f">Lex()</a>.</p>

<p>Referenced by <a class="el" href="classSQCompiler.xhtml#a5a1f6d4aa52e8bcefde3b231cf587380">BitwiseAndExp()</a>, <a class="el" href="classSQCompiler.xhtml#ab3c29886d0f504a4866a8bcd1d99fbe7">BitwiseOrExp()</a>, <a class="el" href="classSQCompiler.xhtml#ad89842a1c23b6c61c7a65d4570d4eeed">BitwiseXorExp()</a>, <a class="el" href="classSQCompiler.xhtml#a00b27cd6609f56579aef2c792424099c">CompExp()</a>, <a class="el" href="classSQCompiler.xhtml#adf83588a2b1f023234d9a166cb22548f">LogicalAndExp()</a>, <a class="el" href="classSQCompiler.xhtml#a735a989c43e2e6b6cf77e1a641be61a6">MultExp()</a>, <a class="el" href="classSQCompiler.xhtml#a136e932ec0a26f24694663ee1b183ea6">PlusExp()</a>, and <a class="el" href="classSQCompiler.xhtml#a5bc5faa44288c58bd3beb3cd0feac35f">ShiftExp()</a>.</p>

</div>
</div>
<a class="anchor" id="a5a1f6d4aa52e8bcefde3b231cf587380"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void SQCompiler::BitwiseAndExp </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>References <a class="el" href="classSQCompiler.xhtml#ae92d9cd56a99407c9d1756a044fdbc63">_token</a>, <a class="el" href="classSQCompiler.xhtml#a83df4f13e0cb24fdd05ddd3d9791241d">BIN_EXP()</a>, and <a class="el" href="classSQCompiler.xhtml#a00b27cd6609f56579aef2c792424099c">CompExp()</a>.</p>

<p>Referenced by <a class="el" href="classSQCompiler.xhtml#ad89842a1c23b6c61c7a65d4570d4eeed">BitwiseXorExp()</a>.</p>

</div>
</div>
<a class="anchor" id="ab3c29886d0f504a4866a8bcd1d99fbe7"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void SQCompiler::BitwiseOrExp </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>References <a class="el" href="classSQCompiler.xhtml#ae92d9cd56a99407c9d1756a044fdbc63">_token</a>, <a class="el" href="classSQCompiler.xhtml#a83df4f13e0cb24fdd05ddd3d9791241d">BIN_EXP()</a>, and <a class="el" href="classSQCompiler.xhtml#ad89842a1c23b6c61c7a65d4570d4eeed">BitwiseXorExp()</a>.</p>

<p>Referenced by <a class="el" href="classSQCompiler.xhtml#adf83588a2b1f023234d9a166cb22548f">LogicalAndExp()</a>.</p>

</div>
</div>
<a class="anchor" id="ad89842a1c23b6c61c7a65d4570d4eeed"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void SQCompiler::BitwiseXorExp </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>References <a class="el" href="classSQCompiler.xhtml#ae92d9cd56a99407c9d1756a044fdbc63">_token</a>, <a class="el" href="classSQCompiler.xhtml#a83df4f13e0cb24fdd05ddd3d9791241d">BIN_EXP()</a>, and <a class="el" href="classSQCompiler.xhtml#a5a1f6d4aa52e8bcefde3b231cf587380">BitwiseAndExp()</a>.</p>

<p>Referenced by <a class="el" href="classSQCompiler.xhtml#ab3c29886d0f504a4866a8bcd1d99fbe7">BitwiseOrExp()</a>.</p>

</div>
</div>
<a class="anchor" id="a2b95f8faf23581a6f0e646408bcde1ef"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void SQCompiler::ClassExp </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>References <a class="el" href="classSQCompiler.xhtml#a5f85e29517253d5696e2a6e273b91eb3">_fs</a>, <a class="el" href="classSQCompiler.xhtml#ae92d9cd56a99407c9d1756a044fdbc63">_token</a>, <a class="el" href="classSQCompiler.xhtml#a99d30c29c6afc80dcbb4afe5bd14c583">Expect()</a>, <a class="el" href="classSQCompiler.xhtml#a6989acd1ad5821d976def13ba684fce5">Expression()</a>, <a class="el" href="classSQCompiler.xhtml#a487f759767eb1b0e74065a35021d704f">Lex()</a>, and <a class="el" href="classSQCompiler.xhtml#a131a27247f577419d6d33de7f6d643db">ParseTableOrClass()</a>.</p>

<p>Referenced by <a class="el" href="classSQCompiler.xhtml#a02ff7d0e5d3694082d16f756a70e7ba3">ClassStatement()</a>, and <a class="el" href="classSQCompiler.xhtml#a9a963e83277da03fe593cbda963767ae">Factor()</a>.</p>

</div>
</div>
<a class="anchor" id="a02ff7d0e5d3694082d16f756a70e7ba3"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void SQCompiler::ClassStatement </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>References <a class="el" href="structExpState.xhtml#ae89ef5eb38798c65ceb0099eafeffc99">ExpState::_deref</a>, <a class="el" href="sqcompiler_8cpp.xhtml#a311a4ddfec075f7c817d8806f7cb3e13">_exst</a>, <a class="el" href="classSQCompiler.xhtml#a5f85e29517253d5696e2a6e273b91eb3">_fs</a>, <a class="el" href="classSQCompiler.xhtml#a2b95f8faf23581a6f0e646408bcde1ef">ClassExp()</a>, <a class="el" href="sqcompiler_8cpp.xhtml#a2fa43ac892862b629c2a9a267aec4dd5">DEREF_FIELD</a>, <a class="el" href="sqcompiler_8cpp.xhtml#a6efed6af23cbe6d6150c7c0331b2b8c6">DEREF_NO_DEREF</a>, <a class="el" href="classSQCompiler.xhtml#a4af832e2c832a83140aada59d4bca706">EmitDerefOp()</a>, <a class="el" href="classSQCompiler.xhtml#a101d3143a4a8b35f1b9dd270b670874e">Error()</a>, <a class="el" href="classSQCompiler.xhtml#a487f759767eb1b0e74065a35021d704f">Lex()</a>, <a class="el" href="classSQCompiler.xhtml#a47dbe5f07c4ade1519f159781de7a7b4">PopExpState()</a>, <a class="el" href="classSQCompiler.xhtml#a43a11a449ea5738ac9522406f51190ea">PrefixedExpr()</a>, and <a class="el" href="classSQCompiler.xhtml#aa9dac4e753b07b7ad62b084d70340c88">PushExpState()</a>.</p>

<p>Referenced by <a class="el" href="classSQCompiler.xhtml#af1801d03469d133d2a24a60c882b5467">Statement()</a>.</p>

</div>
</div>
<a class="anchor" id="a76912dd217834299a5463237b40ff8e3"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void SQCompiler::CleanStack </td>
          <td>(</td>
          <td class="paramtype">SQInteger&#160;</td>
          <td class="paramname"><em>stacksize</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>References <a class="el" href="classSQCompiler.xhtml#a5f85e29517253d5696e2a6e273b91eb3">_fs</a>.</p>

<p>Referenced by <a class="el" href="classSQCompiler.xhtml#a77a8db2b1019cdebc75b19af93d0882e">Compile()</a>, <a class="el" href="classSQCompiler.xhtml#aaa75fc0c44c91cf785061387a40d1ef1">DoWhileStatement()</a>, <a class="el" href="classSQCompiler.xhtml#a05df2946061c8d96783df0ff123872c6">ForEachStatement()</a>, <a class="el" href="classSQCompiler.xhtml#a02deb3f0ac31f20d8531c49661c8e91f">ForStatement()</a>, <a class="el" href="classSQCompiler.xhtml#ad75bbadf66ec03530ccf8108712e4f30">IfStatement()</a>, <a class="el" href="classSQCompiler.xhtml#a693546b2f5f14236c4a28b4426fd0c1b">TryCatchStatement()</a>, and <a class="el" href="classSQCompiler.xhtml#a1ea0500bb37fb9e6574a5706b3450851">WhileStatement()</a>.</p>

</div>
</div>
<a class="anchor" id="a73eeb5bacd889fbba91957a748a87f5d"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void SQCompiler::CommaExpr </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>References <a class="el" href="classSQCompiler.xhtml#a5f85e29517253d5696e2a6e273b91eb3">_fs</a>, <a class="el" href="classSQCompiler.xhtml#ae92d9cd56a99407c9d1756a044fdbc63">_token</a>, <a class="el" href="classSQCompiler.xhtml#a6989acd1ad5821d976def13ba684fce5">Expression()</a>, and <a class="el" href="classSQCompiler.xhtml#a487f759767eb1b0e74065a35021d704f">Lex()</a>.</p>

<p>Referenced by <a class="el" href="classSQCompiler.xhtml#acd94172d0afb9df0627f5a8d375d91a7">DelegateExpr()</a>, <a class="el" href="classSQCompiler.xhtml#aaa75fc0c44c91cf785061387a40d1ef1">DoWhileStatement()</a>, <a class="el" href="classSQCompiler.xhtml#a9a963e83277da03fe593cbda963767ae">Factor()</a>, <a class="el" href="classSQCompiler.xhtml#a02deb3f0ac31f20d8531c49661c8e91f">ForStatement()</a>, <a class="el" href="classSQCompiler.xhtml#ad75bbadf66ec03530ccf8108712e4f30">IfStatement()</a>, <a class="el" href="classSQCompiler.xhtml#a131a27247f577419d6d33de7f6d643db">ParseTableOrClass()</a>, <a class="el" href="classSQCompiler.xhtml#af1801d03469d133d2a24a60c882b5467">Statement()</a>, <a class="el" href="classSQCompiler.xhtml#a9518569b75e9a9ad0ea140fdeea9bb6f">SwitchStatement()</a>, and <a class="el" href="classSQCompiler.xhtml#a1ea0500bb37fb9e6574a5706b3450851">WhileStatement()</a>.</p>

</div>
</div>
<a class="anchor" id="a00b27cd6609f56579aef2c792424099c"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void SQCompiler::CompExp </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>References <a class="el" href="classSQCompiler.xhtml#ae92d9cd56a99407c9d1756a044fdbc63">_token</a>, <a class="el" href="classSQCompiler.xhtml#a83df4f13e0cb24fdd05ddd3d9791241d">BIN_EXP()</a>, and <a class="el" href="classSQCompiler.xhtml#a5bc5faa44288c58bd3beb3cd0feac35f">ShiftExp()</a>.</p>

<p>Referenced by <a class="el" href="classSQCompiler.xhtml#a5a1f6d4aa52e8bcefde3b231cf587380">BitwiseAndExp()</a>.</p>

</div>
</div>
<a class="anchor" id="a77a8db2b1019cdebc75b19af93d0882e"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool SQCompiler::Compile </td>
          <td>(</td>
          <td class="paramtype">SQObjectPtr &amp;&#160;</td>
          <td class="paramname"><em>o</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>References <a class="el" href="classSQCompiler.xhtml#a59c1fb68b81900b2b034532c252d73bd">_debugline</a>, <a class="el" href="classSQCompiler.xhtml#a62a80518a3dc8104d160381dee6a136d">_debugop</a>, <a class="el" href="classSQCompiler.xhtml#a286791a91d9f5700af446b604730c67f">_errorjmp</a>, <a class="el" href="classSQCompiler.xhtml#a5f85e29517253d5696e2a6e273b91eb3">_fs</a>, <a class="el" href="classSQCompiler.xhtml#ad79e17b67e25df1ed1d3fde970afd8a1">_lex</a>, <a class="el" href="classSQCompiler.xhtml#a92af80512f716be6d146595414aef1ea">_lineinfo</a>, <a class="el" href="classSQCompiler.xhtml#a091475a5ea43bd2720b5d3ed939436ba">_raiseerror</a>, <a class="el" href="classSQCompiler.xhtml#ad64255b5636aa8a4a54929aa723a35ac">_sourcename</a>, <a class="el" href="classSQCompiler.xhtml#ae92d9cd56a99407c9d1756a044fdbc63">_token</a>, <a class="el" href="classSQCompiler.xhtml#ab062a2f258dc4413ada43e05ed007b7a">_vm</a>, <a class="el" href="classSQCompiler.xhtml#a76912dd217834299a5463237b40ff8e3">CleanStack()</a>, <a class="el" href="classSQCompiler.xhtml#a277878311fea9e0a32d44fae6ba0f91d">compilererror</a>, <a class="el" href="classSQCompiler.xhtml#a487f759767eb1b0e74065a35021d704f">Lex()</a>, <a class="el" href="classSQCompiler.xhtml#af3f80f047fe50aa32beebf54fe36ed95">OptionalSemicolon()</a>, <a class="el" href="classSQCompiler.xhtml#af1801d03469d133d2a24a60c882b5467">Statement()</a>, and <a class="el" href="classSQCompiler.xhtml#a7f542ea432310849546e81e7942d39e8">ThrowError()</a>.</p>

<p>Referenced by <a class="el" href="sqcompiler_8cpp.xhtml#a7efa63cefc29340c682fc0d25eb2139a">Compile()</a>.</p>

</div>
</div>
<a class="anchor" id="ac32f270754628d4cdb74f8f94c05bea2"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void SQCompiler::CreateFunction </td>
          <td>(</td>
          <td class="paramtype">SQObject &amp;&#160;</td>
          <td class="paramname"><em>name</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>References <a class="el" href="classSQCompiler.xhtml#a5f85e29517253d5696e2a6e273b91eb3">_fs</a>, <a class="el" href="classSQCompiler.xhtml#ad79e17b67e25df1ed1d3fde970afd8a1">_lex</a>, <a class="el" href="classSQCompiler.xhtml#a92af80512f716be6d146595414aef1ea">_lineinfo</a>, <a class="el" href="classSQCompiler.xhtml#ad64255b5636aa8a4a54929aa723a35ac">_sourcename</a>, <a class="el" href="classSQCompiler.xhtml#ae92d9cd56a99407c9d1756a044fdbc63">_token</a>, <a class="el" href="classSQCompiler.xhtml#ab062a2f258dc4413ada43e05ed007b7a">_vm</a>, <a class="el" href="classSQCompiler.xhtml#a101d3143a4a8b35f1b9dd270b670874e">Error()</a>, <a class="el" href="classSQCompiler.xhtml#a99d30c29c6afc80dcbb4afe5bd14c583">Expect()</a>, <a class="el" href="classSQCompiler.xhtml#a6989acd1ad5821d976def13ba684fce5">Expression()</a>, <a class="el" href="classSQCompiler.xhtml#a487f759767eb1b0e74065a35021d704f">Lex()</a>, and <a class="el" href="classSQCompiler.xhtml#af1801d03469d133d2a24a60c882b5467">Statement()</a>.</p>

<p>Referenced by <a class="el" href="classSQCompiler.xhtml#a4eca1d3e87315d27a2be7a0675162e65">FunctionExp()</a>, <a class="el" href="classSQCompiler.xhtml#ad46168272dbdc570bedf563ac7368e00">FunctionStatement()</a>, and <a class="el" href="classSQCompiler.xhtml#a131a27247f577419d6d33de7f6d643db">ParseTableOrClass()</a>.</p>

</div>
</div>
<a class="anchor" id="acd94172d0afb9df0627f5a8d375d91a7"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void SQCompiler::DelegateExpr </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>References <a class="el" href="classSQCompiler.xhtml#a5f85e29517253d5696e2a6e273b91eb3">_fs</a>, <a class="el" href="classSQCompiler.xhtml#a73eeb5bacd889fbba91957a748a87f5d">CommaExpr()</a>, <a class="el" href="classSQCompiler.xhtml#a99d30c29c6afc80dcbb4afe5bd14c583">Expect()</a>, and <a class="el" href="classSQCompiler.xhtml#a487f759767eb1b0e74065a35021d704f">Lex()</a>.</p>

<p>Referenced by <a class="el" href="classSQCompiler.xhtml#a9a963e83277da03fe593cbda963767ae">Factor()</a>.</p>

</div>
</div>
<a class="anchor" id="a1cd77fe06b545963e8f6a3d82e08b9ff"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void SQCompiler::DeleteExpr </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>References <a class="el" href="structExpState.xhtml#ae89ef5eb38798c65ceb0099eafeffc99">ExpState::_deref</a>, <a class="el" href="sqcompiler_8cpp.xhtml#a311a4ddfec075f7c817d8806f7cb3e13">_exst</a>, <a class="el" href="sqcompiler_8cpp.xhtml#a2fa43ac892862b629c2a9a267aec4dd5">DEREF_FIELD</a>, <a class="el" href="sqcompiler_8cpp.xhtml#a6efed6af23cbe6d6150c7c0331b2b8c6">DEREF_NO_DEREF</a>, <a class="el" href="classSQCompiler.xhtml#a2158f18885cd1213471ed1e5e224cb1c">Emit2ArgsOP()</a>, <a class="el" href="classSQCompiler.xhtml#a101d3143a4a8b35f1b9dd270b670874e">Error()</a>, <a class="el" href="classSQCompiler.xhtml#a487f759767eb1b0e74065a35021d704f">Lex()</a>, <a class="el" href="classSQCompiler.xhtml#a47dbe5f07c4ade1519f159781de7a7b4">PopExpState()</a>, <a class="el" href="classSQCompiler.xhtml#a43a11a449ea5738ac9522406f51190ea">PrefixedExpr()</a>, and <a class="el" href="classSQCompiler.xhtml#aa9dac4e753b07b7ad62b084d70340c88">PushExpState()</a>.</p>

<p>Referenced by <a class="el" href="classSQCompiler.xhtml#a9a963e83277da03fe593cbda963767ae">Factor()</a>.</p>

</div>
</div>
<a class="anchor" id="aaa75fc0c44c91cf785061387a40d1ef1"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void SQCompiler::DoWhileStatement </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>References <a class="el" href="classSQCompiler.xhtml#a5f85e29517253d5696e2a6e273b91eb3">_fs</a>, <a class="el" href="sqcompiler_8cpp.xhtml#a7b907f6aaa33ba7c361570a6dd204b6a">BEGIN_BREAKBLE_BLOCK</a>, <a class="el" href="classSQCompiler.xhtml#a76912dd217834299a5463237b40ff8e3">CleanStack()</a>, <a class="el" href="classSQCompiler.xhtml#a73eeb5bacd889fbba91957a748a87f5d">CommaExpr()</a>, <a class="el" href="sqcompiler_8cpp.xhtml#a2d8f18ace84575905881bd3531461914">END_BREAKBLE_BLOCK</a>, <a class="el" href="classSQCompiler.xhtml#a99d30c29c6afc80dcbb4afe5bd14c583">Expect()</a>, <a class="el" href="classSQCompiler.xhtml#a487f759767eb1b0e74065a35021d704f">Lex()</a>, and <a class="el" href="classSQCompiler.xhtml#af1801d03469d133d2a24a60c882b5467">Statement()</a>.</p>

<p>Referenced by <a class="el" href="classSQCompiler.xhtml#af1801d03469d133d2a24a60c882b5467">Statement()</a>.</p>

</div>
</div>
<a class="anchor" id="a2158f18885cd1213471ed1e5e224cb1c"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void SQCompiler::Emit2ArgsOP </td>
          <td>(</td>
          <td class="paramtype">SQOpcode&#160;</td>
          <td class="paramname"><em>op</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">SQInteger&#160;</td>
          <td class="paramname"><em>p3</em> = <code>0</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>References <a class="el" href="classSQCompiler.xhtml#a5f85e29517253d5696e2a6e273b91eb3">_fs</a>.</p>

<p>Referenced by <a class="el" href="classSQCompiler.xhtml#a1cd77fe06b545963e8f6a3d82e08b9ff">DeleteExpr()</a>, <a class="el" href="classSQCompiler.xhtml#a483fb98667518d14bc040b5f1ffe2831">EmitCompoundArith()</a>, <a class="el" href="classSQCompiler.xhtml#a9a963e83277da03fe593cbda963767ae">Factor()</a>, <a class="el" href="classSQCompiler.xhtml#ad46168272dbdc570bedf563ac7368e00">FunctionStatement()</a>, <a class="el" href="classSQCompiler.xhtml#a43a11a449ea5738ac9522406f51190ea">PrefixedExpr()</a>, and <a class="el" href="classSQCompiler.xhtml#a76b6ea1c1fae39f855fac7ac7d6f1aac">PrefixIncDec()</a>.</p>

</div>
</div>
<a class="anchor" id="a483fb98667518d14bc040b5f1ffe2831"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void SQCompiler::EmitCompoundArith </td>
          <td>(</td>
          <td class="paramtype">SQInteger&#160;</td>
          <td class="paramname"><em>tok</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>deref</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>References <a class="el" href="classSQCompiler.xhtml#a5f85e29517253d5696e2a6e273b91eb3">_fs</a>, and <a class="el" href="classSQCompiler.xhtml#a2158f18885cd1213471ed1e5e224cb1c">Emit2ArgsOP()</a>.</p>

<p>Referenced by <a class="el" href="classSQCompiler.xhtml#a6989acd1ad5821d976def13ba684fce5">Expression()</a>.</p>

</div>
</div>
<a class="anchor" id="a4af832e2c832a83140aada59d4bca706"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void SQCompiler::EmitDerefOp </td>
          <td>(</td>
          <td class="paramtype">SQOpcode&#160;</td>
          <td class="paramname"><em>op</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>References <a class="el" href="classSQCompiler.xhtml#a5f85e29517253d5696e2a6e273b91eb3">_fs</a>.</p>

<p>Referenced by <a class="el" href="classSQCompiler.xhtml#a02ff7d0e5d3694082d16f756a70e7ba3">ClassStatement()</a>, <a class="el" href="classSQCompiler.xhtml#a6989acd1ad5821d976def13ba684fce5">Expression()</a>, and <a class="el" href="classSQCompiler.xhtml#ad46168272dbdc570bedf563ac7368e00">FunctionStatement()</a>.</p>

</div>
</div>
<a class="anchor" id="ab18a57cb55ed5fdad9da5de8d7755407"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void SQCompiler::EnumStatement </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>References <a class="el" href="classSQCompiler.xhtml#a5f85e29517253d5696e2a6e273b91eb3">_fs</a>, <a class="el" href="classSQCompiler.xhtml#ae92d9cd56a99407c9d1756a044fdbc63">_token</a>, <a class="el" href="classSQCompiler.xhtml#ab062a2f258dc4413ada43e05ed007b7a">_vm</a>, <a class="el" href="classSQCompiler.xhtml#a99d30c29c6afc80dcbb4afe5bd14c583">Expect()</a>, <a class="el" href="classSQCompiler.xhtml#a2cff88b179f8a12b773996f40816d136">ExpectScalar()</a>, and <a class="el" href="classSQCompiler.xhtml#a487f759767eb1b0e74065a35021d704f">Lex()</a>.</p>

<p>Referenced by <a class="el" href="classSQCompiler.xhtml#af1801d03469d133d2a24a60c882b5467">Statement()</a>.</p>

</div>
</div>
<a class="anchor" id="a101d3143a4a8b35f1b9dd270b670874e"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void SQCompiler::Error </td>
          <td>(</td>
          <td class="paramtype">const SQChar *&#160;</td>
          <td class="paramname"><em>s</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>...</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>References <a class="el" href="classSQCompiler.xhtml#a286791a91d9f5700af446b604730c67f">_errorjmp</a>, and <a class="el" href="classSQCompiler.xhtml#a277878311fea9e0a32d44fae6ba0f91d">compilererror</a>.</p>

<p>Referenced by <a class="el" href="classSQCompiler.xhtml#a02ff7d0e5d3694082d16f756a70e7ba3">ClassStatement()</a>, <a class="el" href="classSQCompiler.xhtml#ac32f270754628d4cdb74f8f94c05bea2">CreateFunction()</a>, <a class="el" href="classSQCompiler.xhtml#a1cd77fe06b545963e8f6a3d82e08b9ff">DeleteExpr()</a>, <a class="el" href="classSQCompiler.xhtml#a99d30c29c6afc80dcbb4afe5bd14c583">Expect()</a>, <a class="el" href="classSQCompiler.xhtml#a2cff88b179f8a12b773996f40816d136">ExpectScalar()</a>, <a class="el" href="classSQCompiler.xhtml#a6989acd1ad5821d976def13ba684fce5">Expression()</a>, <a class="el" href="classSQCompiler.xhtml#a9a963e83277da03fe593cbda963767ae">Factor()</a>, <a class="el" href="classSQCompiler.xhtml#a87fea75589becb9123a21c1e77ce7e65">FunctionCallArgs()</a>, <a class="el" href="classSQCompiler.xhtml#af3f80f047fe50aa32beebf54fe36ed95">OptionalSemicolon()</a>, <a class="el" href="classSQCompiler.xhtml#a43a11a449ea5738ac9522406f51190ea">PrefixedExpr()</a>, <a class="el" href="classSQCompiler.xhtml#af1801d03469d133d2a24a60c882b5467">Statement()</a>, and <a class="el" href="classSQCompiler.xhtml#a7f542ea432310849546e81e7942d39e8">ThrowError()</a>.</p>

</div>
</div>
<a class="anchor" id="a99d30c29c6afc80dcbb4afe5bd14c583"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">SQObject SQCompiler::Expect </td>
          <td>(</td>
          <td class="paramtype">SQInteger&#160;</td>
          <td class="paramname"><em>tok</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>References <a class="el" href="classSQCompiler.xhtml#a5f85e29517253d5696e2a6e273b91eb3">_fs</a>, <a class="el" href="classSQCompiler.xhtml#ad79e17b67e25df1ed1d3fde970afd8a1">_lex</a>, <a class="el" href="classSQCompiler.xhtml#ae92d9cd56a99407c9d1756a044fdbc63">_token</a>, <a class="el" href="classSQCompiler.xhtml#a101d3143a4a8b35f1b9dd270b670874e">Error()</a>, and <a class="el" href="classSQCompiler.xhtml#a487f759767eb1b0e74065a35021d704f">Lex()</a>.</p>

<p>Referenced by <a class="el" href="classSQCompiler.xhtml#a2b95f8faf23581a6f0e646408bcde1ef">ClassExp()</a>, <a class="el" href="classSQCompiler.xhtml#ac32f270754628d4cdb74f8f94c05bea2">CreateFunction()</a>, <a class="el" href="classSQCompiler.xhtml#acd94172d0afb9df0627f5a8d375d91a7">DelegateExpr()</a>, <a class="el" href="classSQCompiler.xhtml#aaa75fc0c44c91cf785061387a40d1ef1">DoWhileStatement()</a>, <a class="el" href="classSQCompiler.xhtml#ab18a57cb55ed5fdad9da5de8d7755407">EnumStatement()</a>, <a class="el" href="classSQCompiler.xhtml#a6989acd1ad5821d976def13ba684fce5">Expression()</a>, <a class="el" href="classSQCompiler.xhtml#a9a963e83277da03fe593cbda963767ae">Factor()</a>, <a class="el" href="classSQCompiler.xhtml#a05df2946061c8d96783df0ff123872c6">ForEachStatement()</a>, <a class="el" href="classSQCompiler.xhtml#a02deb3f0ac31f20d8531c49661c8e91f">ForStatement()</a>, <a class="el" href="classSQCompiler.xhtml#a4eca1d3e87315d27a2be7a0675162e65">FunctionExp()</a>, <a class="el" href="classSQCompiler.xhtml#ad46168272dbdc570bedf563ac7368e00">FunctionStatement()</a>, <a class="el" href="classSQCompiler.xhtml#ad75bbadf66ec03530ccf8108712e4f30">IfStatement()</a>, <a class="el" href="classSQCompiler.xhtml#ab70ecd203eb8bd21ea58a8ea1572843c">LocalDeclStatement()</a>, <a class="el" href="classSQCompiler.xhtml#a131a27247f577419d6d33de7f6d643db">ParseTableOrClass()</a>, <a class="el" href="classSQCompiler.xhtml#a43a11a449ea5738ac9522406f51190ea">PrefixedExpr()</a>, <a class="el" href="classSQCompiler.xhtml#af1801d03469d133d2a24a60c882b5467">Statement()</a>, <a class="el" href="classSQCompiler.xhtml#a9518569b75e9a9ad0ea140fdeea9bb6f">SwitchStatement()</a>, <a class="el" href="classSQCompiler.xhtml#a693546b2f5f14236c4a28b4426fd0c1b">TryCatchStatement()</a>, and <a class="el" href="classSQCompiler.xhtml#a1ea0500bb37fb9e6574a5706b3450851">WhileStatement()</a>.</p>

</div>
</div>
<a class="anchor" id="a2cff88b179f8a12b773996f40816d136"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">SQObject SQCompiler::ExpectScalar </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>References <a class="el" href="classSQCompiler.xhtml#a5f85e29517253d5696e2a6e273b91eb3">_fs</a>, <a class="el" href="classSQCompiler.xhtml#ad79e17b67e25df1ed1d3fde970afd8a1">_lex</a>, <a class="el" href="classSQCompiler.xhtml#ae92d9cd56a99407c9d1756a044fdbc63">_token</a>, <a class="el" href="classSQCompiler.xhtml#a101d3143a4a8b35f1b9dd270b670874e">Error()</a>, and <a class="el" href="classSQCompiler.xhtml#a487f759767eb1b0e74065a35021d704f">Lex()</a>.</p>

<p>Referenced by <a class="el" href="classSQCompiler.xhtml#ab18a57cb55ed5fdad9da5de8d7755407">EnumStatement()</a>, and <a class="el" href="classSQCompiler.xhtml#af1801d03469d133d2a24a60c882b5467">Statement()</a>.</p>

</div>
</div>
<a class="anchor" id="a6989acd1ad5821d976def13ba684fce5"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structExpState.xhtml">ExpState</a> SQCompiler::Expression </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>funcarg</em> = <code>false</code></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>References <a class="el" href="sqcompiler_8cpp.xhtml#a311a4ddfec075f7c817d8806f7cb3e13">_exst</a>, <a class="el" href="classSQCompiler.xhtml#a5f85e29517253d5696e2a6e273b91eb3">_fs</a>, <a class="el" href="classSQCompiler.xhtml#ae92d9cd56a99407c9d1756a044fdbc63">_token</a>, <a class="el" href="sqcompiler_8cpp.xhtml#a2fa43ac892862b629c2a9a267aec4dd5">DEREF_FIELD</a>, <a class="el" href="sqcompiler_8cpp.xhtml#a6efed6af23cbe6d6150c7c0331b2b8c6">DEREF_NO_DEREF</a>, <a class="el" href="classSQCompiler.xhtml#a483fb98667518d14bc040b5f1ffe2831">EmitCompoundArith()</a>, <a class="el" href="classSQCompiler.xhtml#a4af832e2c832a83140aada59d4bca706">EmitDerefOp()</a>, <a class="el" href="classSQCompiler.xhtml#a101d3143a4a8b35f1b9dd270b670874e">Error()</a>, <a class="el" href="classSQCompiler.xhtml#a99d30c29c6afc80dcbb4afe5bd14c583">Expect()</a>, <a class="el" href="classSQCompiler.xhtml#a487f759767eb1b0e74065a35021d704f">Lex()</a>, <a class="el" href="classSQCompiler.xhtml#a78c393e142d7ed831b5230451fee588d">LogicalOrExp()</a>, <a class="el" href="classSQCompiler.xhtml#a47dbe5f07c4ade1519f159781de7a7b4">PopExpState()</a>, and <a class="el" href="classSQCompiler.xhtml#aa9dac4e753b07b7ad62b084d70340c88">PushExpState()</a>.</p>

<p>Referenced by <a class="el" href="classSQCompiler.xhtml#a2b95f8faf23581a6f0e646408bcde1ef">ClassExp()</a>, <a class="el" href="classSQCompiler.xhtml#a73eeb5bacd889fbba91957a748a87f5d">CommaExpr()</a>, <a class="el" href="classSQCompiler.xhtml#ac32f270754628d4cdb74f8f94c05bea2">CreateFunction()</a>, <a class="el" href="classSQCompiler.xhtml#a9a963e83277da03fe593cbda963767ae">Factor()</a>, <a class="el" href="classSQCompiler.xhtml#a05df2946061c8d96783df0ff123872c6">ForEachStatement()</a>, <a class="el" href="classSQCompiler.xhtml#a87fea75589becb9123a21c1e77ce7e65">FunctionCallArgs()</a>, <a class="el" href="classSQCompiler.xhtml#ab70ecd203eb8bd21ea58a8ea1572843c">LocalDeclStatement()</a>, <a class="el" href="classSQCompiler.xhtml#a131a27247f577419d6d33de7f6d643db">ParseTableOrClass()</a>, <a class="el" href="classSQCompiler.xhtml#a43a11a449ea5738ac9522406f51190ea">PrefixedExpr()</a>, and <a class="el" href="classSQCompiler.xhtml#a9518569b75e9a9ad0ea140fdeea9bb6f">SwitchStatement()</a>.</p>

</div>
</div>
<a class="anchor" id="a9a963e83277da03fe593cbda963767ae"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">SQInteger SQCompiler::Factor </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>References <a class="el" href="sqcompiler_8cpp.xhtml#a311a4ddfec075f7c817d8806f7cb3e13">_exst</a>, <a class="el" href="classSQCompiler.xhtml#a5f85e29517253d5696e2a6e273b91eb3">_fs</a>, <a class="el" href="classSQCompiler.xhtml#ad79e17b67e25df1ed1d3fde970afd8a1">_lex</a>, <a class="el" href="classSQCompiler.xhtml#ae92d9cd56a99407c9d1756a044fdbc63">_token</a>, <a class="el" href="classSQCompiler.xhtml#a2b95f8faf23581a6f0e646408bcde1ef">ClassExp()</a>, <a class="el" href="classSQCompiler.xhtml#a73eeb5bacd889fbba91957a748a87f5d">CommaExpr()</a>, <a class="el" href="classSQCompiler.xhtml#acd94172d0afb9df0627f5a8d375d91a7">DelegateExpr()</a>, <a class="el" href="classSQCompiler.xhtml#a1cd77fe06b545963e8f6a3d82e08b9ff">DeleteExpr()</a>, <a class="el" href="sqcompiler_8cpp.xhtml#a2fa43ac892862b629c2a9a267aec4dd5">DEREF_FIELD</a>, <a class="el" href="sqcompiler_8cpp.xhtml#a6efed6af23cbe6d6150c7c0331b2b8c6">DEREF_NO_DEREF</a>, <a class="el" href="classSQCompiler.xhtml#a2158f18885cd1213471ed1e5e224cb1c">Emit2ArgsOP()</a>, <a class="el" href="classSQCompiler.xhtml#a101d3143a4a8b35f1b9dd270b670874e">Error()</a>, <a class="el" href="classSQCompiler.xhtml#a99d30c29c6afc80dcbb4afe5bd14c583">Expect()</a>, <a class="el" href="classSQCompiler.xhtml#a6989acd1ad5821d976def13ba684fce5">Expression()</a>, <a class="el" href="classSQCompiler.xhtml#a4eca1d3e87315d27a2be7a0675162e65">FunctionExp()</a>, <a class="el" href="classSQCompiler.xhtml#a487f759767eb1b0e74065a35021d704f">Lex()</a>, <a class="el" href="classSQCompiler.xhtml#a5b81fac18b3e0c53d91df064172d52eb">NeedGet()</a>, <a class="el" href="classSQCompiler.xhtml#a131a27247f577419d6d33de7f6d643db">ParseTableOrClass()</a>, <a class="el" href="classSQCompiler.xhtml#a76b6ea1c1fae39f855fac7ac7d6f1aac">PrefixIncDec()</a>, and <a class="el" href="classSQCompiler.xhtml#a93ddacc819c4e543d11165bda38abb9e">UnaryOP()</a>.</p>

<p>Referenced by <a class="el" href="classSQCompiler.xhtml#a43a11a449ea5738ac9522406f51190ea">PrefixedExpr()</a>.</p>

</div>
</div>
<a class="anchor" id="a05df2946061c8d96783df0ff123872c6"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void SQCompiler::ForEachStatement </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>References <a class="el" href="classSQCompiler.xhtml#a5f85e29517253d5696e2a6e273b91eb3">_fs</a>, <a class="el" href="classSQCompiler.xhtml#ae92d9cd56a99407c9d1756a044fdbc63">_token</a>, <a class="el" href="sqcompiler_8cpp.xhtml#a7b907f6aaa33ba7c361570a6dd204b6a">BEGIN_BREAKBLE_BLOCK</a>, <a class="el" href="classSQCompiler.xhtml#a76912dd217834299a5463237b40ff8e3">CleanStack()</a>, <a class="el" href="sqcompiler_8cpp.xhtml#a2d8f18ace84575905881bd3531461914">END_BREAKBLE_BLOCK</a>, <a class="el" href="classSQCompiler.xhtml#a99d30c29c6afc80dcbb4afe5bd14c583">Expect()</a>, <a class="el" href="classSQCompiler.xhtml#a6989acd1ad5821d976def13ba684fce5">Expression()</a>, <a class="el" href="classSQCompiler.xhtml#a487f759767eb1b0e74065a35021d704f">Lex()</a>, and <a class="el" href="classSQCompiler.xhtml#af1801d03469d133d2a24a60c882b5467">Statement()</a>.</p>

<p>Referenced by <a class="el" href="classSQCompiler.xhtml#af1801d03469d133d2a24a60c882b5467">Statement()</a>.</p>

</div>
</div>
<a class="anchor" id="a02deb3f0ac31f20d8531c49661c8e91f"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void SQCompiler::ForStatement </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>References <a class="el" href="classSQCompiler.xhtml#a5f85e29517253d5696e2a6e273b91eb3">_fs</a>, <a class="el" href="classSQCompiler.xhtml#ae92d9cd56a99407c9d1756a044fdbc63">_token</a>, <a class="el" href="sqcompiler_8cpp.xhtml#a7b907f6aaa33ba7c361570a6dd204b6a">BEGIN_BREAKBLE_BLOCK</a>, <a class="el" href="classSQCompiler.xhtml#a76912dd217834299a5463237b40ff8e3">CleanStack()</a>, <a class="el" href="classSQCompiler.xhtml#a73eeb5bacd889fbba91957a748a87f5d">CommaExpr()</a>, <a class="el" href="sqcompiler_8cpp.xhtml#a2d8f18ace84575905881bd3531461914">END_BREAKBLE_BLOCK</a>, <a class="el" href="classSQCompiler.xhtml#a99d30c29c6afc80dcbb4afe5bd14c583">Expect()</a>, <a class="el" href="classSQCompiler.xhtml#a487f759767eb1b0e74065a35021d704f">Lex()</a>, <a class="el" href="classSQCompiler.xhtml#ab70ecd203eb8bd21ea58a8ea1572843c">LocalDeclStatement()</a>, and <a class="el" href="classSQCompiler.xhtml#af1801d03469d133d2a24a60c882b5467">Statement()</a>.</p>

<p>Referenced by <a class="el" href="classSQCompiler.xhtml#af1801d03469d133d2a24a60c882b5467">Statement()</a>.</p>

</div>
</div>
<a class="anchor" id="a87fea75589becb9123a21c1e77ce7e65"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void SQCompiler::FunctionCallArgs </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>References <a class="el" href="classSQCompiler.xhtml#a5f85e29517253d5696e2a6e273b91eb3">_fs</a>, <a class="el" href="classSQCompiler.xhtml#ae92d9cd56a99407c9d1756a044fdbc63">_token</a>, <a class="el" href="classSQCompiler.xhtml#a101d3143a4a8b35f1b9dd270b670874e">Error()</a>, <a class="el" href="classSQCompiler.xhtml#a6989acd1ad5821d976def13ba684fce5">Expression()</a>, <a class="el" href="classSQCompiler.xhtml#a487f759767eb1b0e74065a35021d704f">Lex()</a>, and <a class="el" href="classSQCompiler.xhtml#a25e648be9ff27b001af5f34af01f3645">MoveIfCurrentTargetIsLocal()</a>.</p>

<p>Referenced by <a class="el" href="classSQCompiler.xhtml#a43a11a449ea5738ac9522406f51190ea">PrefixedExpr()</a>.</p>

</div>
</div>
<a class="anchor" id="a4eca1d3e87315d27a2be7a0675162e65"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void SQCompiler::FunctionExp </td>
          <td>(</td>
          <td class="paramtype">SQInteger&#160;</td>
          <td class="paramname"><em>ftype</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>References <a class="el" href="classSQCompiler.xhtml#a5f85e29517253d5696e2a6e273b91eb3">_fs</a>, <a class="el" href="sqstate_8cpp.xhtml#a2dd3f919f5b0951170554f5af785c34b">_null_</a>, <a class="el" href="classSQCompiler.xhtml#ac32f270754628d4cdb74f8f94c05bea2">CreateFunction()</a>, <a class="el" href="classSQCompiler.xhtml#a99d30c29c6afc80dcbb4afe5bd14c583">Expect()</a>, and <a class="el" href="classSQCompiler.xhtml#a487f759767eb1b0e74065a35021d704f">Lex()</a>.</p>

<p>Referenced by <a class="el" href="classSQCompiler.xhtml#a9a963e83277da03fe593cbda963767ae">Factor()</a>.</p>

</div>
</div>
<a class="anchor" id="ad46168272dbdc570bedf563ac7368e00"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void SQCompiler::FunctionStatement </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>References <a class="el" href="classSQCompiler.xhtml#a5f85e29517253d5696e2a6e273b91eb3">_fs</a>, <a class="el" href="classSQCompiler.xhtml#ae92d9cd56a99407c9d1756a044fdbc63">_token</a>, <a class="el" href="classSQCompiler.xhtml#ac32f270754628d4cdb74f8f94c05bea2">CreateFunction()</a>, <a class="el" href="classSQCompiler.xhtml#a2158f18885cd1213471ed1e5e224cb1c">Emit2ArgsOP()</a>, <a class="el" href="classSQCompiler.xhtml#a4af832e2c832a83140aada59d4bca706">EmitDerefOp()</a>, <a class="el" href="classSQCompiler.xhtml#a99d30c29c6afc80dcbb4afe5bd14c583">Expect()</a>, and <a class="el" href="classSQCompiler.xhtml#a487f759767eb1b0e74065a35021d704f">Lex()</a>.</p>

<p>Referenced by <a class="el" href="classSQCompiler.xhtml#af1801d03469d133d2a24a60c882b5467">Statement()</a>.</p>

</div>
</div>
<a class="anchor" id="ad75bbadf66ec03530ccf8108712e4f30"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void SQCompiler::IfStatement </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>References <a class="el" href="classSQCompiler.xhtml#a5f85e29517253d5696e2a6e273b91eb3">_fs</a>, <a class="el" href="classSQCompiler.xhtml#ae92d9cd56a99407c9d1756a044fdbc63">_token</a>, <a class="el" href="classSQCompiler.xhtml#a76912dd217834299a5463237b40ff8e3">CleanStack()</a>, <a class="el" href="classSQCompiler.xhtml#a73eeb5bacd889fbba91957a748a87f5d">CommaExpr()</a>, <a class="el" href="classSQCompiler.xhtml#a99d30c29c6afc80dcbb4afe5bd14c583">Expect()</a>, <a class="el" href="classSQCompiler.xhtml#a487f759767eb1b0e74065a35021d704f">Lex()</a>, <a class="el" href="classSQCompiler.xhtml#af3f80f047fe50aa32beebf54fe36ed95">OptionalSemicolon()</a>, and <a class="el" href="classSQCompiler.xhtml#af1801d03469d133d2a24a60c882b5467">Statement()</a>.</p>

<p>Referenced by <a class="el" href="classSQCompiler.xhtml#af1801d03469d133d2a24a60c882b5467">Statement()</a>.</p>

</div>
</div>
<a class="anchor" id="ac88aac2949be9983993c0d3255ff2f91"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool SQCompiler::IsDerefToken </td>
          <td>(</td>
          <td class="paramtype">SQInteger&#160;</td>
          <td class="paramname"><em>tok</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a360bb03322356a03b823dee3c5798391"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool SQCompiler::IsEndOfStatement </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>References <a class="el" href="classSQCompiler.xhtml#ad79e17b67e25df1ed1d3fde970afd8a1">_lex</a>, and <a class="el" href="classSQCompiler.xhtml#ae92d9cd56a99407c9d1756a044fdbc63">_token</a>.</p>

<p>Referenced by <a class="el" href="classSQCompiler.xhtml#af3f80f047fe50aa32beebf54fe36ed95">OptionalSemicolon()</a>, <a class="el" href="classSQCompiler.xhtml#a43a11a449ea5738ac9522406f51190ea">PrefixedExpr()</a>, and <a class="el" href="classSQCompiler.xhtml#af1801d03469d133d2a24a60c882b5467">Statement()</a>.</p>

</div>
</div>
<a class="anchor" id="a487f759767eb1b0e74065a35021d704f"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void SQCompiler::Lex </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>References <a class="el" href="classSQCompiler.xhtml#ad79e17b67e25df1ed1d3fde970afd8a1">_lex</a>, and <a class="el" href="classSQCompiler.xhtml#ae92d9cd56a99407c9d1756a044fdbc63">_token</a>.</p>

<p>Referenced by <a class="el" href="classSQCompiler.xhtml#a83df4f13e0cb24fdd05ddd3d9791241d">BIN_EXP()</a>, <a class="el" href="classSQCompiler.xhtml#a2b95f8faf23581a6f0e646408bcde1ef">ClassExp()</a>, <a class="el" href="classSQCompiler.xhtml#a02ff7d0e5d3694082d16f756a70e7ba3">ClassStatement()</a>, <a class="el" href="classSQCompiler.xhtml#a73eeb5bacd889fbba91957a748a87f5d">CommaExpr()</a>, <a class="el" href="classSQCompiler.xhtml#a77a8db2b1019cdebc75b19af93d0882e">Compile()</a>, <a class="el" href="classSQCompiler.xhtml#ac32f270754628d4cdb74f8f94c05bea2">CreateFunction()</a>, <a class="el" href="classSQCompiler.xhtml#acd94172d0afb9df0627f5a8d375d91a7">DelegateExpr()</a>, <a class="el" href="classSQCompiler.xhtml#a1cd77fe06b545963e8f6a3d82e08b9ff">DeleteExpr()</a>, <a class="el" href="classSQCompiler.xhtml#aaa75fc0c44c91cf785061387a40d1ef1">DoWhileStatement()</a>, <a class="el" href="classSQCompiler.xhtml#ab18a57cb55ed5fdad9da5de8d7755407">EnumStatement()</a>, <a class="el" href="classSQCompiler.xhtml#a99d30c29c6afc80dcbb4afe5bd14c583">Expect()</a>, <a class="el" href="classSQCompiler.xhtml#a2cff88b179f8a12b773996f40816d136">ExpectScalar()</a>, <a class="el" href="classSQCompiler.xhtml#a6989acd1ad5821d976def13ba684fce5">Expression()</a>, <a class="el" href="classSQCompiler.xhtml#a9a963e83277da03fe593cbda963767ae">Factor()</a>, <a class="el" href="classSQCompiler.xhtml#a05df2946061c8d96783df0ff123872c6">ForEachStatement()</a>, <a class="el" href="classSQCompiler.xhtml#a02deb3f0ac31f20d8531c49661c8e91f">ForStatement()</a>, <a class="el" href="classSQCompiler.xhtml#a87fea75589becb9123a21c1e77ce7e65">FunctionCallArgs()</a>, <a class="el" href="classSQCompiler.xhtml#a4eca1d3e87315d27a2be7a0675162e65">FunctionExp()</a>, <a class="el" href="classSQCompiler.xhtml#ad46168272dbdc570bedf563ac7368e00">FunctionStatement()</a>, <a class="el" href="classSQCompiler.xhtml#ad75bbadf66ec03530ccf8108712e4f30">IfStatement()</a>, <a class="el" href="classSQCompiler.xhtml#ab70ecd203eb8bd21ea58a8ea1572843c">LocalDeclStatement()</a>, <a class="el" href="classSQCompiler.xhtml#adf83588a2b1f023234d9a166cb22548f">LogicalAndExp()</a>, <a class="el" href="classSQCompiler.xhtml#a78c393e142d7ed831b5230451fee588d">LogicalOrExp()</a>, <a class="el" href="classSQCompiler.xhtml#af3f80f047fe50aa32beebf54fe36ed95">OptionalSemicolon()</a>, <a class="el" href="classSQCompiler.xhtml#a131a27247f577419d6d33de7f6d643db">ParseTableOrClass()</a>, <a class="el" href="classSQCompiler.xhtml#a43a11a449ea5738ac9522406f51190ea">PrefixedExpr()</a>, <a class="el" href="classSQCompiler.xhtml#a76b6ea1c1fae39f855fac7ac7d6f1aac">PrefixIncDec()</a>, <a class="el" href="classSQCompiler.xhtml#af1801d03469d133d2a24a60c882b5467">Statement()</a>, <a class="el" href="classSQCompiler.xhtml#a9518569b75e9a9ad0ea140fdeea9bb6f">SwitchStatement()</a>, <a class="el" href="classSQCompiler.xhtml#a693546b2f5f14236c4a28b4426fd0c1b">TryCatchStatement()</a>, <a class="el" href="classSQCompiler.xhtml#a93ddacc819c4e543d11165bda38abb9e">UnaryOP()</a>, and <a class="el" href="classSQCompiler.xhtml#a1ea0500bb37fb9e6574a5706b3450851">WhileStatement()</a>.</p>

</div>
</div>
<a class="anchor" id="ab70ecd203eb8bd21ea58a8ea1572843c"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void SQCompiler::LocalDeclStatement </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>References <a class="el" href="classSQCompiler.xhtml#a5f85e29517253d5696e2a6e273b91eb3">_fs</a>, <a class="el" href="classSQCompiler.xhtml#ae92d9cd56a99407c9d1756a044fdbc63">_token</a>, <a class="el" href="classSQCompiler.xhtml#a99d30c29c6afc80dcbb4afe5bd14c583">Expect()</a>, <a class="el" href="classSQCompiler.xhtml#a6989acd1ad5821d976def13ba684fce5">Expression()</a>, and <a class="el" href="classSQCompiler.xhtml#a487f759767eb1b0e74065a35021d704f">Lex()</a>.</p>

<p>Referenced by <a class="el" href="classSQCompiler.xhtml#a02deb3f0ac31f20d8531c49661c8e91f">ForStatement()</a>, and <a class="el" href="classSQCompiler.xhtml#af1801d03469d133d2a24a60c882b5467">Statement()</a>.</p>

</div>
</div>
<a class="anchor" id="adf83588a2b1f023234d9a166cb22548f"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void SQCompiler::LogicalAndExp </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>References <a class="el" href="classSQCompiler.xhtml#a5f85e29517253d5696e2a6e273b91eb3">_fs</a>, <a class="el" href="classSQCompiler.xhtml#ae92d9cd56a99407c9d1756a044fdbc63">_token</a>, <a class="el" href="classSQCompiler.xhtml#a83df4f13e0cb24fdd05ddd3d9791241d">BIN_EXP()</a>, <a class="el" href="classSQCompiler.xhtml#ab3c29886d0f504a4866a8bcd1d99fbe7">BitwiseOrExp()</a>, and <a class="el" href="classSQCompiler.xhtml#a487f759767eb1b0e74065a35021d704f">Lex()</a>.</p>

<p>Referenced by <a class="el" href="classSQCompiler.xhtml#a78c393e142d7ed831b5230451fee588d">LogicalOrExp()</a>.</p>

</div>
</div>
<a class="anchor" id="a78c393e142d7ed831b5230451fee588d"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void SQCompiler::LogicalOrExp </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>References <a class="el" href="classSQCompiler.xhtml#a5f85e29517253d5696e2a6e273b91eb3">_fs</a>, <a class="el" href="classSQCompiler.xhtml#ae92d9cd56a99407c9d1756a044fdbc63">_token</a>, <a class="el" href="classSQCompiler.xhtml#a487f759767eb1b0e74065a35021d704f">Lex()</a>, and <a class="el" href="classSQCompiler.xhtml#adf83588a2b1f023234d9a166cb22548f">LogicalAndExp()</a>.</p>

<p>Referenced by <a class="el" href="classSQCompiler.xhtml#a6989acd1ad5821d976def13ba684fce5">Expression()</a>.</p>

</div>
</div>
<a class="anchor" id="a25e648be9ff27b001af5f34af01f3645"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void SQCompiler::MoveIfCurrentTargetIsLocal </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>References <a class="el" href="classSQCompiler.xhtml#a5f85e29517253d5696e2a6e273b91eb3">_fs</a>.</p>

<p>Referenced by <a class="el" href="classSQCompiler.xhtml#a87fea75589becb9123a21c1e77ce7e65">FunctionCallArgs()</a>.</p>

</div>
</div>
<a class="anchor" id="a735a989c43e2e6b6cf77e1a641be61a6"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void SQCompiler::MultExp </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>References <a class="el" href="classSQCompiler.xhtml#ae92d9cd56a99407c9d1756a044fdbc63">_token</a>, <a class="el" href="classSQCompiler.xhtml#a83df4f13e0cb24fdd05ddd3d9791241d">BIN_EXP()</a>, and <a class="el" href="classSQCompiler.xhtml#a43a11a449ea5738ac9522406f51190ea">PrefixedExpr()</a>.</p>

<p>Referenced by <a class="el" href="classSQCompiler.xhtml#a136e932ec0a26f24694663ee1b183ea6">PlusExp()</a>.</p>

</div>
</div>
<a class="anchor" id="a5b81fac18b3e0c53d91df064172d52eb"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool SQCompiler::NeedGet </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>References <a class="el" href="sqcompiler_8cpp.xhtml#a311a4ddfec075f7c817d8806f7cb3e13">_exst</a>, and <a class="el" href="classSQCompiler.xhtml#ae92d9cd56a99407c9d1756a044fdbc63">_token</a>.</p>

<p>Referenced by <a class="el" href="classSQCompiler.xhtml#a9a963e83277da03fe593cbda963767ae">Factor()</a>, and <a class="el" href="classSQCompiler.xhtml#a43a11a449ea5738ac9522406f51190ea">PrefixedExpr()</a>.</p>

</div>
</div>
<a class="anchor" id="af3f80f047fe50aa32beebf54fe36ed95"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void SQCompiler::OptionalSemicolon </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>References <a class="el" href="classSQCompiler.xhtml#ae92d9cd56a99407c9d1756a044fdbc63">_token</a>, <a class="el" href="classSQCompiler.xhtml#a101d3143a4a8b35f1b9dd270b670874e">Error()</a>, <a class="el" href="classSQCompiler.xhtml#a360bb03322356a03b823dee3c5798391">IsEndOfStatement()</a>, and <a class="el" href="classSQCompiler.xhtml#a487f759767eb1b0e74065a35021d704f">Lex()</a>.</p>

<p>Referenced by <a class="el" href="classSQCompiler.xhtml#a77a8db2b1019cdebc75b19af93d0882e">Compile()</a>, <a class="el" href="classSQCompiler.xhtml#ad75bbadf66ec03530ccf8108712e4f30">IfStatement()</a>, <a class="el" href="classSQCompiler.xhtml#af1801d03469d133d2a24a60c882b5467">Statement()</a>, and <a class="el" href="classSQCompiler.xhtml#a49e64ea1810874c901bd7c3fefc9dca7">Statements()</a>.</p>

</div>
</div>
<a class="anchor" id="a131a27247f577419d6d33de7f6d643db"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void SQCompiler::ParseTableOrClass </td>
          <td>(</td>
          <td class="paramtype">SQInteger&#160;</td>
          <td class="paramname"><em>separator</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">SQInteger&#160;</td>
          <td class="paramname"><em>terminator</em> = <code>'}'</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>References <a class="el" href="classSQCompiler.xhtml#a5f85e29517253d5696e2a6e273b91eb3">_fs</a>, <a class="el" href="classSQCompiler.xhtml#ae92d9cd56a99407c9d1756a044fdbc63">_token</a>, <a class="el" href="classSQCompiler.xhtml#a73eeb5bacd889fbba91957a748a87f5d">CommaExpr()</a>, <a class="el" href="classSQCompiler.xhtml#ac32f270754628d4cdb74f8f94c05bea2">CreateFunction()</a>, <a class="el" href="classSQCompiler.xhtml#a99d30c29c6afc80dcbb4afe5bd14c583">Expect()</a>, <a class="el" href="classSQCompiler.xhtml#a6989acd1ad5821d976def13ba684fce5">Expression()</a>, and <a class="el" href="classSQCompiler.xhtml#a487f759767eb1b0e74065a35021d704f">Lex()</a>.</p>

<p>Referenced by <a class="el" href="classSQCompiler.xhtml#a2b95f8faf23581a6f0e646408bcde1ef">ClassExp()</a>, and <a class="el" href="classSQCompiler.xhtml#a9a963e83277da03fe593cbda963767ae">Factor()</a>.</p>

</div>
</div>
<a class="anchor" id="a136e932ec0a26f24694663ee1b183ea6"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void SQCompiler::PlusExp </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>References <a class="el" href="classSQCompiler.xhtml#ae92d9cd56a99407c9d1756a044fdbc63">_token</a>, <a class="el" href="classSQCompiler.xhtml#a83df4f13e0cb24fdd05ddd3d9791241d">BIN_EXP()</a>, and <a class="el" href="classSQCompiler.xhtml#a735a989c43e2e6b6cf77e1a641be61a6">MultExp()</a>.</p>

<p>Referenced by <a class="el" href="classSQCompiler.xhtml#a5bc5faa44288c58bd3beb3cd0feac35f">ShiftExp()</a>.</p>

</div>
</div>
<a class="anchor" id="a47dbe5f07c4ade1519f159781de7a7b4"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structExpState.xhtml">ExpState</a> SQCompiler::PopExpState </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>References <a class="el" href="classSQCompiler.xhtml#a25e6e9a19395f0c84057ef7d45d9b4b3">_expstates</a>.</p>

<p>Referenced by <a class="el" href="classSQCompiler.xhtml#a02ff7d0e5d3694082d16f756a70e7ba3">ClassStatement()</a>, <a class="el" href="classSQCompiler.xhtml#a1cd77fe06b545963e8f6a3d82e08b9ff">DeleteExpr()</a>, <a class="el" href="classSQCompiler.xhtml#a6989acd1ad5821d976def13ba684fce5">Expression()</a>, and <a class="el" href="classSQCompiler.xhtml#a76b6ea1c1fae39f855fac7ac7d6f1aac">PrefixIncDec()</a>.</p>

</div>
</div>
<a class="anchor" id="a43a11a449ea5738ac9522406f51190ea"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void SQCompiler::PrefixedExpr </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>References <a class="el" href="sqcompiler_8cpp.xhtml#a311a4ddfec075f7c817d8806f7cb3e13">_exst</a>, <a class="el" href="classSQCompiler.xhtml#a5f85e29517253d5696e2a6e273b91eb3">_fs</a>, <a class="el" href="classSQCompiler.xhtml#ad79e17b67e25df1ed1d3fde970afd8a1">_lex</a>, <a class="el" href="classSQCompiler.xhtml#ae92d9cd56a99407c9d1756a044fdbc63">_token</a>, <a class="el" href="sqcompiler_8cpp.xhtml#a2fa43ac892862b629c2a9a267aec4dd5">DEREF_FIELD</a>, <a class="el" href="sqcompiler_8cpp.xhtml#a6efed6af23cbe6d6150c7c0331b2b8c6">DEREF_NO_DEREF</a>, <a class="el" href="classSQCompiler.xhtml#a2158f18885cd1213471ed1e5e224cb1c">Emit2ArgsOP()</a>, <a class="el" href="classSQCompiler.xhtml#a101d3143a4a8b35f1b9dd270b670874e">Error()</a>, <a class="el" href="classSQCompiler.xhtml#a99d30c29c6afc80dcbb4afe5bd14c583">Expect()</a>, <a class="el" href="classSQCompiler.xhtml#a6989acd1ad5821d976def13ba684fce5">Expression()</a>, <a class="el" href="classSQCompiler.xhtml#a9a963e83277da03fe593cbda963767ae">Factor()</a>, <a class="el" href="classSQCompiler.xhtml#a87fea75589becb9123a21c1e77ce7e65">FunctionCallArgs()</a>, <a class="el" href="classSQCompiler.xhtml#a360bb03322356a03b823dee3c5798391">IsEndOfStatement()</a>, <a class="el" href="classSQCompiler.xhtml#a487f759767eb1b0e74065a35021d704f">Lex()</a>, and <a class="el" href="classSQCompiler.xhtml#a5b81fac18b3e0c53d91df064172d52eb">NeedGet()</a>.</p>

<p>Referenced by <a class="el" href="classSQCompiler.xhtml#a02ff7d0e5d3694082d16f756a70e7ba3">ClassStatement()</a>, <a class="el" href="classSQCompiler.xhtml#a1cd77fe06b545963e8f6a3d82e08b9ff">DeleteExpr()</a>, <a class="el" href="classSQCompiler.xhtml#a735a989c43e2e6b6cf77e1a641be61a6">MultExp()</a>, <a class="el" href="classSQCompiler.xhtml#a76b6ea1c1fae39f855fac7ac7d6f1aac">PrefixIncDec()</a>, and <a class="el" href="classSQCompiler.xhtml#a93ddacc819c4e543d11165bda38abb9e">UnaryOP()</a>.</p>

</div>
</div>
<a class="anchor" id="a76b6ea1c1fae39f855fac7ac7d6f1aac"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void SQCompiler::PrefixIncDec </td>
          <td>(</td>
          <td class="paramtype">SQInteger&#160;</td>
          <td class="paramname"><em>token</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>References <a class="el" href="structExpState.xhtml#ae89ef5eb38798c65ceb0099eafeffc99">ExpState::_deref</a>, <a class="el" href="sqcompiler_8cpp.xhtml#a311a4ddfec075f7c817d8806f7cb3e13">_exst</a>, <a class="el" href="classSQCompiler.xhtml#a5f85e29517253d5696e2a6e273b91eb3">_fs</a>, <a class="el" href="sqcompiler_8cpp.xhtml#a2fa43ac892862b629c2a9a267aec4dd5">DEREF_FIELD</a>, <a class="el" href="classSQCompiler.xhtml#a2158f18885cd1213471ed1e5e224cb1c">Emit2ArgsOP()</a>, <a class="el" href="classSQCompiler.xhtml#a487f759767eb1b0e74065a35021d704f">Lex()</a>, <a class="el" href="classSQCompiler.xhtml#a47dbe5f07c4ade1519f159781de7a7b4">PopExpState()</a>, <a class="el" href="classSQCompiler.xhtml#a43a11a449ea5738ac9522406f51190ea">PrefixedExpr()</a>, and <a class="el" href="classSQCompiler.xhtml#aa9dac4e753b07b7ad62b084d70340c88">PushExpState()</a>.</p>

<p>Referenced by <a class="el" href="classSQCompiler.xhtml#a9a963e83277da03fe593cbda963767ae">Factor()</a>.</p>

</div>
</div>
<a class="anchor" id="aa9dac4e753b07b7ad62b084d70340c88"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void SQCompiler::PushExpState </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>References <a class="el" href="classSQCompiler.xhtml#a25e6e9a19395f0c84057ef7d45d9b4b3">_expstates</a>.</p>

<p>Referenced by <a class="el" href="classSQCompiler.xhtml#a02ff7d0e5d3694082d16f756a70e7ba3">ClassStatement()</a>, <a class="el" href="classSQCompiler.xhtml#a1cd77fe06b545963e8f6a3d82e08b9ff">DeleteExpr()</a>, <a class="el" href="classSQCompiler.xhtml#a6989acd1ad5821d976def13ba684fce5">Expression()</a>, and <a class="el" href="classSQCompiler.xhtml#a76b6ea1c1fae39f855fac7ac7d6f1aac">PrefixIncDec()</a>.</p>

</div>
</div>
<a class="anchor" id="a1359a08e5611242d9d4ad42475170601"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void SQCompiler::ResolveBreaks </td>
          <td>(</td>
          <td class="paramtype">SQFuncState *&#160;</td>
          <td class="paramname"><em>funcstate</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">SQInteger&#160;</td>
          <td class="paramname"><em>ntoresolve</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Referenced by <a class="el" href="classSQCompiler.xhtml#a9518569b75e9a9ad0ea140fdeea9bb6f">SwitchStatement()</a>.</p>

</div>
</div>
<a class="anchor" id="a3250f2afdd3622f6e9cd175cf80d06ce"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void SQCompiler::ResolveContinues </td>
          <td>(</td>
          <td class="paramtype">SQFuncState *&#160;</td>
          <td class="paramname"><em>funcstate</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">SQInteger&#160;</td>
          <td class="paramname"><em>ntoresolve</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">SQInteger&#160;</td>
          <td class="paramname"><em>targetpos</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a5bc5faa44288c58bd3beb3cd0feac35f"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void SQCompiler::ShiftExp </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>References <a class="el" href="classSQCompiler.xhtml#ae92d9cd56a99407c9d1756a044fdbc63">_token</a>, <a class="el" href="classSQCompiler.xhtml#a83df4f13e0cb24fdd05ddd3d9791241d">BIN_EXP()</a>, and <a class="el" href="classSQCompiler.xhtml#a136e932ec0a26f24694663ee1b183ea6">PlusExp()</a>.</p>

<p>Referenced by <a class="el" href="classSQCompiler.xhtml#a00b27cd6609f56579aef2c792424099c">CompExp()</a>.</p>

</div>
</div>
<a class="anchor" id="af1801d03469d133d2a24a60c882b5467"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void SQCompiler::Statement </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>References <a class="el" href="classSQCompiler.xhtml#a5f85e29517253d5696e2a6e273b91eb3">_fs</a>, <a class="el" href="classSQCompiler.xhtml#ad79e17b67e25df1ed1d3fde970afd8a1">_lex</a>, <a class="el" href="classSQCompiler.xhtml#a92af80512f716be6d146595414aef1ea">_lineinfo</a>, <a class="el" href="classSQCompiler.xhtml#ae92d9cd56a99407c9d1756a044fdbc63">_token</a>, <a class="el" href="classSQCompiler.xhtml#ab062a2f258dc4413ada43e05ed007b7a">_vm</a>, <a class="el" href="classSQCompiler.xhtml#a02ff7d0e5d3694082d16f756a70e7ba3">ClassStatement()</a>, <a class="el" href="classSQCompiler.xhtml#a73eeb5bacd889fbba91957a748a87f5d">CommaExpr()</a>, <a class="el" href="classSQCompiler.xhtml#aaa75fc0c44c91cf785061387a40d1ef1">DoWhileStatement()</a>, <a class="el" href="classSQCompiler.xhtml#ab18a57cb55ed5fdad9da5de8d7755407">EnumStatement()</a>, <a class="el" href="classSQCompiler.xhtml#a101d3143a4a8b35f1b9dd270b670874e">Error()</a>, <a class="el" href="classSQCompiler.xhtml#a99d30c29c6afc80dcbb4afe5bd14c583">Expect()</a>, <a class="el" href="classSQCompiler.xhtml#a2cff88b179f8a12b773996f40816d136">ExpectScalar()</a>, <a class="el" href="classSQCompiler.xhtml#a05df2946061c8d96783df0ff123872c6">ForEachStatement()</a>, <a class="el" href="classSQCompiler.xhtml#a02deb3f0ac31f20d8531c49661c8e91f">ForStatement()</a>, <a class="el" href="classSQCompiler.xhtml#ad46168272dbdc570bedf563ac7368e00">FunctionStatement()</a>, <a class="el" href="classSQCompiler.xhtml#ad75bbadf66ec03530ccf8108712e4f30">IfStatement()</a>, <a class="el" href="classSQCompiler.xhtml#a360bb03322356a03b823dee3c5798391">IsEndOfStatement()</a>, <a class="el" href="classSQCompiler.xhtml#a487f759767eb1b0e74065a35021d704f">Lex()</a>, <a class="el" href="classSQCompiler.xhtml#ab70ecd203eb8bd21ea58a8ea1572843c">LocalDeclStatement()</a>, <a class="el" href="classSQCompiler.xhtml#af3f80f047fe50aa32beebf54fe36ed95">OptionalSemicolon()</a>, <a class="el" href="classSQCompiler.xhtml#a49e64ea1810874c901bd7c3fefc9dca7">Statements()</a>, <a class="el" href="classSQCompiler.xhtml#a9518569b75e9a9ad0ea140fdeea9bb6f">SwitchStatement()</a>, <a class="el" href="classSQCompiler.xhtml#a693546b2f5f14236c4a28b4426fd0c1b">TryCatchStatement()</a>, and <a class="el" href="classSQCompiler.xhtml#a1ea0500bb37fb9e6574a5706b3450851">WhileStatement()</a>.</p>

<p>Referenced by <a class="el" href="classSQCompiler.xhtml#a77a8db2b1019cdebc75b19af93d0882e">Compile()</a>, <a class="el" href="classSQCompiler.xhtml#ac32f270754628d4cdb74f8f94c05bea2">CreateFunction()</a>, <a class="el" href="classSQCompiler.xhtml#aaa75fc0c44c91cf785061387a40d1ef1">DoWhileStatement()</a>, <a class="el" href="classSQCompiler.xhtml#a05df2946061c8d96783df0ff123872c6">ForEachStatement()</a>, <a class="el" href="classSQCompiler.xhtml#a02deb3f0ac31f20d8531c49661c8e91f">ForStatement()</a>, <a class="el" href="classSQCompiler.xhtml#ad75bbadf66ec03530ccf8108712e4f30">IfStatement()</a>, <a class="el" href="classSQCompiler.xhtml#a49e64ea1810874c901bd7c3fefc9dca7">Statements()</a>, <a class="el" href="classSQCompiler.xhtml#a693546b2f5f14236c4a28b4426fd0c1b">TryCatchStatement()</a>, and <a class="el" href="classSQCompiler.xhtml#a1ea0500bb37fb9e6574a5706b3450851">WhileStatement()</a>.</p>

</div>
</div>
<a class="anchor" id="a49e64ea1810874c901bd7c3fefc9dca7"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void SQCompiler::Statements </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>References <a class="el" href="classSQCompiler.xhtml#ad79e17b67e25df1ed1d3fde970afd8a1">_lex</a>, <a class="el" href="classSQCompiler.xhtml#ae92d9cd56a99407c9d1756a044fdbc63">_token</a>, <a class="el" href="classSQCompiler.xhtml#af3f80f047fe50aa32beebf54fe36ed95">OptionalSemicolon()</a>, and <a class="el" href="classSQCompiler.xhtml#af1801d03469d133d2a24a60c882b5467">Statement()</a>.</p>

<p>Referenced by <a class="el" href="classSQCompiler.xhtml#af1801d03469d133d2a24a60c882b5467">Statement()</a>, and <a class="el" href="classSQCompiler.xhtml#a9518569b75e9a9ad0ea140fdeea9bb6f">SwitchStatement()</a>.</p>

</div>
</div>
<a class="anchor" id="a9518569b75e9a9ad0ea140fdeea9bb6f"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void SQCompiler::SwitchStatement </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>References <a class="el" href="classSQCompiler.xhtml#a5f85e29517253d5696e2a6e273b91eb3">_fs</a>, <a class="el" href="classSQCompiler.xhtml#ae92d9cd56a99407c9d1756a044fdbc63">_token</a>, <a class="el" href="classSQCompiler.xhtml#a73eeb5bacd889fbba91957a748a87f5d">CommaExpr()</a>, <a class="el" href="classSQCompiler.xhtml#a99d30c29c6afc80dcbb4afe5bd14c583">Expect()</a>, <a class="el" href="classSQCompiler.xhtml#a6989acd1ad5821d976def13ba684fce5">Expression()</a>, <a class="el" href="classSQCompiler.xhtml#a487f759767eb1b0e74065a35021d704f">Lex()</a>, <a class="el" href="classSQCompiler.xhtml#a1359a08e5611242d9d4ad42475170601">ResolveBreaks()</a>, and <a class="el" href="classSQCompiler.xhtml#a49e64ea1810874c901bd7c3fefc9dca7">Statements()</a>.</p>

<p>Referenced by <a class="el" href="classSQCompiler.xhtml#af1801d03469d133d2a24a60c882b5467">Statement()</a>.</p>

</div>
</div>
<a class="anchor" id="a7f542ea432310849546e81e7942d39e8"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static void SQCompiler::ThrowError </td>
          <td>(</td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>ud</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const SQChar *&#160;</td>
          <td class="paramname"><em>s</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>References <a class="el" href="classSQCompiler.xhtml#a101d3143a4a8b35f1b9dd270b670874e">Error()</a>.</p>

<p>Referenced by <a class="el" href="classSQCompiler.xhtml#a77a8db2b1019cdebc75b19af93d0882e">Compile()</a>, and <a class="el" href="classSQCompiler.xhtml#a70b5da16126b868ed56de4dacc541c6e">SQCompiler()</a>.</p>

</div>
</div>
<a class="anchor" id="a693546b2f5f14236c4a28b4426fd0c1b"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void SQCompiler::TryCatchStatement </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>References <a class="el" href="classSQCompiler.xhtml#a5f85e29517253d5696e2a6e273b91eb3">_fs</a>, <a class="el" href="classSQCompiler.xhtml#a76912dd217834299a5463237b40ff8e3">CleanStack()</a>, <a class="el" href="classSQCompiler.xhtml#a99d30c29c6afc80dcbb4afe5bd14c583">Expect()</a>, <a class="el" href="classSQCompiler.xhtml#a487f759767eb1b0e74065a35021d704f">Lex()</a>, and <a class="el" href="classSQCompiler.xhtml#af1801d03469d133d2a24a60c882b5467">Statement()</a>.</p>

<p>Referenced by <a class="el" href="classSQCompiler.xhtml#af1801d03469d133d2a24a60c882b5467">Statement()</a>.</p>

</div>
</div>
<a class="anchor" id="a93ddacc819c4e543d11165bda38abb9e"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void SQCompiler::UnaryOP </td>
          <td>(</td>
          <td class="paramtype">SQOpcode&#160;</td>
          <td class="paramname"><em>op</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>References <a class="el" href="classSQCompiler.xhtml#a5f85e29517253d5696e2a6e273b91eb3">_fs</a>, <a class="el" href="classSQCompiler.xhtml#a487f759767eb1b0e74065a35021d704f">Lex()</a>, and <a class="el" href="classSQCompiler.xhtml#a43a11a449ea5738ac9522406f51190ea">PrefixedExpr()</a>.</p>

<p>Referenced by <a class="el" href="classSQCompiler.xhtml#a9a963e83277da03fe593cbda963767ae">Factor()</a>.</p>

</div>
</div>
<a class="anchor" id="a1ea0500bb37fb9e6574a5706b3450851"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void SQCompiler::WhileStatement </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>References <a class="el" href="classSQCompiler.xhtml#a5f85e29517253d5696e2a6e273b91eb3">_fs</a>, <a class="el" href="sqcompiler_8cpp.xhtml#a7b907f6aaa33ba7c361570a6dd204b6a">BEGIN_BREAKBLE_BLOCK</a>, <a class="el" href="classSQCompiler.xhtml#a76912dd217834299a5463237b40ff8e3">CleanStack()</a>, <a class="el" href="classSQCompiler.xhtml#a73eeb5bacd889fbba91957a748a87f5d">CommaExpr()</a>, <a class="el" href="sqcompiler_8cpp.xhtml#a2d8f18ace84575905881bd3531461914">END_BREAKBLE_BLOCK</a>, <a class="el" href="classSQCompiler.xhtml#a99d30c29c6afc80dcbb4afe5bd14c583">Expect()</a>, <a class="el" href="classSQCompiler.xhtml#a487f759767eb1b0e74065a35021d704f">Lex()</a>, and <a class="el" href="classSQCompiler.xhtml#af1801d03469d133d2a24a60c882b5467">Statement()</a>.</p>

<p>Referenced by <a class="el" href="classSQCompiler.xhtml#af1801d03469d133d2a24a60c882b5467">Statement()</a>.</p>

</div>
</div>
<h2 class="groupheader">Member Data Documentation</h2>
<a class="anchor" id="a59c1fb68b81900b2b034532c252d73bd"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">SQInteger SQCompiler::_debugline</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Referenced by <a class="el" href="classSQCompiler.xhtml#a77a8db2b1019cdebc75b19af93d0882e">Compile()</a>.</p>

</div>
</div>
<a class="anchor" id="a62a80518a3dc8104d160381dee6a136d"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">SQInteger SQCompiler::_debugop</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Referenced by <a class="el" href="classSQCompiler.xhtml#a77a8db2b1019cdebc75b19af93d0882e">Compile()</a>.</p>

</div>
</div>
<a class="anchor" id="a286791a91d9f5700af446b604730c67f"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">jmp_buf SQCompiler::_errorjmp</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Referenced by <a class="el" href="classSQCompiler.xhtml#a77a8db2b1019cdebc75b19af93d0882e">Compile()</a>, and <a class="el" href="classSQCompiler.xhtml#a101d3143a4a8b35f1b9dd270b670874e">Error()</a>.</p>

</div>
</div>
<a class="anchor" id="a25e6e9a19395f0c84057ef7d45d9b4b3"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="sqcompiler_8cpp.xhtml#a41ad1241f39b98a04f5f089ccab8de04">ExpStateVec</a> SQCompiler::_expstates</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Referenced by <a class="el" href="classSQCompiler.xhtml#a47dbe5f07c4ade1519f159781de7a7b4">PopExpState()</a>, and <a class="el" href="classSQCompiler.xhtml#aa9dac4e753b07b7ad62b084d70340c88">PushExpState()</a>.</p>

</div>
</div>
<a class="anchor" id="a5f85e29517253d5696e2a6e273b91eb3"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">SQFuncState* SQCompiler::_fs</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Referenced by <a class="el" href="classSQCompiler.xhtml#a83df4f13e0cb24fdd05ddd3d9791241d">BIN_EXP()</a>, <a class="el" href="classSQCompiler.xhtml#a2b95f8faf23581a6f0e646408bcde1ef">ClassExp()</a>, <a class="el" href="classSQCompiler.xhtml#a02ff7d0e5d3694082d16f756a70e7ba3">ClassStatement()</a>, <a class="el" href="classSQCompiler.xhtml#a76912dd217834299a5463237b40ff8e3">CleanStack()</a>, <a class="el" href="classSQCompiler.xhtml#a73eeb5bacd889fbba91957a748a87f5d">CommaExpr()</a>, <a class="el" href="classSQCompiler.xhtml#a77a8db2b1019cdebc75b19af93d0882e">Compile()</a>, <a class="el" href="classSQCompiler.xhtml#ac32f270754628d4cdb74f8f94c05bea2">CreateFunction()</a>, <a class="el" href="classSQCompiler.xhtml#acd94172d0afb9df0627f5a8d375d91a7">DelegateExpr()</a>, <a class="el" href="classSQCompiler.xhtml#aaa75fc0c44c91cf785061387a40d1ef1">DoWhileStatement()</a>, <a class="el" href="classSQCompiler.xhtml#a2158f18885cd1213471ed1e5e224cb1c">Emit2ArgsOP()</a>, <a class="el" href="classSQCompiler.xhtml#a483fb98667518d14bc040b5f1ffe2831">EmitCompoundArith()</a>, <a class="el" href="classSQCompiler.xhtml#a4af832e2c832a83140aada59d4bca706">EmitDerefOp()</a>, <a class="el" href="classSQCompiler.xhtml#ab18a57cb55ed5fdad9da5de8d7755407">EnumStatement()</a>, <a class="el" href="classSQCompiler.xhtml#a99d30c29c6afc80dcbb4afe5bd14c583">Expect()</a>, <a class="el" href="classSQCompiler.xhtml#a2cff88b179f8a12b773996f40816d136">ExpectScalar()</a>, <a class="el" href="classSQCompiler.xhtml#a6989acd1ad5821d976def13ba684fce5">Expression()</a>, <a class="el" href="classSQCompiler.xhtml#a9a963e83277da03fe593cbda963767ae">Factor()</a>, <a class="el" href="classSQCompiler.xhtml#a05df2946061c8d96783df0ff123872c6">ForEachStatement()</a>, <a class="el" href="classSQCompiler.xhtml#a02deb3f0ac31f20d8531c49661c8e91f">ForStatement()</a>, <a class="el" href="classSQCompiler.xhtml#a87fea75589becb9123a21c1e77ce7e65">FunctionCallArgs()</a>, <a class="el" href="classSQCompiler.xhtml#a4eca1d3e87315d27a2be7a0675162e65">FunctionExp()</a>, <a class="el" href="classSQCompiler.xhtml#ad46168272dbdc570bedf563ac7368e00">FunctionStatement()</a>, <a class="el" href="classSQCompiler.xhtml#ad75bbadf66ec03530ccf8108712e4f30">IfStatement()</a>, <a class="el" href="classSQCompiler.xhtml#ab70ecd203eb8bd21ea58a8ea1572843c">LocalDeclStatement()</a>, <a class="el" href="classSQCompiler.xhtml#adf83588a2b1f023234d9a166cb22548f">LogicalAndExp()</a>, <a class="el" href="classSQCompiler.xhtml#a78c393e142d7ed831b5230451fee588d">LogicalOrExp()</a>, <a class="el" href="classSQCompiler.xhtml#a25e648be9ff27b001af5f34af01f3645">MoveIfCurrentTargetIsLocal()</a>, <a class="el" href="classSQCompiler.xhtml#a131a27247f577419d6d33de7f6d643db">ParseTableOrClass()</a>, <a class="el" href="classSQCompiler.xhtml#a43a11a449ea5738ac9522406f51190ea">PrefixedExpr()</a>, <a class="el" href="classSQCompiler.xhtml#a76b6ea1c1fae39f855fac7ac7d6f1aac">PrefixIncDec()</a>, <a class="el" href="classSQCompiler.xhtml#af1801d03469d133d2a24a60c882b5467">Statement()</a>, <a class="el" href="classSQCompiler.xhtml#a9518569b75e9a9ad0ea140fdeea9bb6f">SwitchStatement()</a>, <a class="el" href="classSQCompiler.xhtml#a693546b2f5f14236c4a28b4426fd0c1b">TryCatchStatement()</a>, <a class="el" href="classSQCompiler.xhtml#a93ddacc819c4e543d11165bda38abb9e">UnaryOP()</a>, and <a class="el" href="classSQCompiler.xhtml#a1ea0500bb37fb9e6574a5706b3450851">WhileStatement()</a>.</p>

</div>
</div>
<a class="anchor" id="ad79e17b67e25df1ed1d3fde970afd8a1"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">SQLexer SQCompiler::_lex</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Referenced by <a class="el" href="classSQCompiler.xhtml#a77a8db2b1019cdebc75b19af93d0882e">Compile()</a>, <a class="el" href="classSQCompiler.xhtml#ac32f270754628d4cdb74f8f94c05bea2">CreateFunction()</a>, <a class="el" href="classSQCompiler.xhtml#a99d30c29c6afc80dcbb4afe5bd14c583">Expect()</a>, <a class="el" href="classSQCompiler.xhtml#a2cff88b179f8a12b773996f40816d136">ExpectScalar()</a>, <a class="el" href="classSQCompiler.xhtml#a9a963e83277da03fe593cbda963767ae">Factor()</a>, <a class="el" href="classSQCompiler.xhtml#a360bb03322356a03b823dee3c5798391">IsEndOfStatement()</a>, <a class="el" href="classSQCompiler.xhtml#a487f759767eb1b0e74065a35021d704f">Lex()</a>, <a class="el" href="classSQCompiler.xhtml#a43a11a449ea5738ac9522406f51190ea">PrefixedExpr()</a>, <a class="el" href="classSQCompiler.xhtml#a70b5da16126b868ed56de4dacc541c6e">SQCompiler()</a>, <a class="el" href="classSQCompiler.xhtml#af1801d03469d133d2a24a60c882b5467">Statement()</a>, and <a class="el" href="classSQCompiler.xhtml#a49e64ea1810874c901bd7c3fefc9dca7">Statements()</a>.</p>

</div>
</div>
<a class="anchor" id="a92af80512f716be6d146595414aef1ea"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool SQCompiler::_lineinfo</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Referenced by <a class="el" href="classSQCompiler.xhtml#a77a8db2b1019cdebc75b19af93d0882e">Compile()</a>, <a class="el" href="classSQCompiler.xhtml#ac32f270754628d4cdb74f8f94c05bea2">CreateFunction()</a>, <a class="el" href="classSQCompiler.xhtml#a70b5da16126b868ed56de4dacc541c6e">SQCompiler()</a>, and <a class="el" href="classSQCompiler.xhtml#af1801d03469d133d2a24a60c882b5467">Statement()</a>.</p>

</div>
</div>
<a class="anchor" id="a091475a5ea43bd2720b5d3ed939436ba"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool SQCompiler::_raiseerror</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Referenced by <a class="el" href="classSQCompiler.xhtml#a77a8db2b1019cdebc75b19af93d0882e">Compile()</a>, and <a class="el" href="classSQCompiler.xhtml#a70b5da16126b868ed56de4dacc541c6e">SQCompiler()</a>.</p>

</div>
</div>
<a class="anchor" id="ad64255b5636aa8a4a54929aa723a35ac"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">SQObjectPtr SQCompiler::_sourcename</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Referenced by <a class="el" href="classSQCompiler.xhtml#a77a8db2b1019cdebc75b19af93d0882e">Compile()</a>, <a class="el" href="classSQCompiler.xhtml#ac32f270754628d4cdb74f8f94c05bea2">CreateFunction()</a>, and <a class="el" href="classSQCompiler.xhtml#a70b5da16126b868ed56de4dacc541c6e">SQCompiler()</a>.</p>

</div>
</div>
<a class="anchor" id="ae92d9cd56a99407c9d1756a044fdbc63"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">SQInteger SQCompiler::_token</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Referenced by <a class="el" href="classSQCompiler.xhtml#a5a1f6d4aa52e8bcefde3b231cf587380">BitwiseAndExp()</a>, <a class="el" href="classSQCompiler.xhtml#ab3c29886d0f504a4866a8bcd1d99fbe7">BitwiseOrExp()</a>, <a class="el" href="classSQCompiler.xhtml#ad89842a1c23b6c61c7a65d4570d4eeed">BitwiseXorExp()</a>, <a class="el" href="classSQCompiler.xhtml#a2b95f8faf23581a6f0e646408bcde1ef">ClassExp()</a>, <a class="el" href="classSQCompiler.xhtml#a73eeb5bacd889fbba91957a748a87f5d">CommaExpr()</a>, <a class="el" href="classSQCompiler.xhtml#a00b27cd6609f56579aef2c792424099c">CompExp()</a>, <a class="el" href="classSQCompiler.xhtml#a77a8db2b1019cdebc75b19af93d0882e">Compile()</a>, <a class="el" href="classSQCompiler.xhtml#ac32f270754628d4cdb74f8f94c05bea2">CreateFunction()</a>, <a class="el" href="classSQCompiler.xhtml#ab18a57cb55ed5fdad9da5de8d7755407">EnumStatement()</a>, <a class="el" href="classSQCompiler.xhtml#a99d30c29c6afc80dcbb4afe5bd14c583">Expect()</a>, <a class="el" href="classSQCompiler.xhtml#a2cff88b179f8a12b773996f40816d136">ExpectScalar()</a>, <a class="el" href="classSQCompiler.xhtml#a6989acd1ad5821d976def13ba684fce5">Expression()</a>, <a class="el" href="classSQCompiler.xhtml#a9a963e83277da03fe593cbda963767ae">Factor()</a>, <a class="el" href="classSQCompiler.xhtml#a05df2946061c8d96783df0ff123872c6">ForEachStatement()</a>, <a class="el" href="classSQCompiler.xhtml#a02deb3f0ac31f20d8531c49661c8e91f">ForStatement()</a>, <a class="el" href="classSQCompiler.xhtml#a87fea75589becb9123a21c1e77ce7e65">FunctionCallArgs()</a>, <a class="el" href="classSQCompiler.xhtml#ad46168272dbdc570bedf563ac7368e00">FunctionStatement()</a>, <a class="el" href="classSQCompiler.xhtml#ad75bbadf66ec03530ccf8108712e4f30">IfStatement()</a>, <a class="el" href="classSQCompiler.xhtml#a360bb03322356a03b823dee3c5798391">IsEndOfStatement()</a>, <a class="el" href="classSQCompiler.xhtml#a487f759767eb1b0e74065a35021d704f">Lex()</a>, <a class="el" href="classSQCompiler.xhtml#ab70ecd203eb8bd21ea58a8ea1572843c">LocalDeclStatement()</a>, <a class="el" href="classSQCompiler.xhtml#adf83588a2b1f023234d9a166cb22548f">LogicalAndExp()</a>, <a class="el" href="classSQCompiler.xhtml#a78c393e142d7ed831b5230451fee588d">LogicalOrExp()</a>, <a class="el" href="classSQCompiler.xhtml#a735a989c43e2e6b6cf77e1a641be61a6">MultExp()</a>, <a class="el" href="classSQCompiler.xhtml#a5b81fac18b3e0c53d91df064172d52eb">NeedGet()</a>, <a class="el" href="classSQCompiler.xhtml#af3f80f047fe50aa32beebf54fe36ed95">OptionalSemicolon()</a>, <a class="el" href="classSQCompiler.xhtml#a131a27247f577419d6d33de7f6d643db">ParseTableOrClass()</a>, <a class="el" href="classSQCompiler.xhtml#a136e932ec0a26f24694663ee1b183ea6">PlusExp()</a>, <a class="el" href="classSQCompiler.xhtml#a43a11a449ea5738ac9522406f51190ea">PrefixedExpr()</a>, <a class="el" href="classSQCompiler.xhtml#a5bc5faa44288c58bd3beb3cd0feac35f">ShiftExp()</a>, <a class="el" href="classSQCompiler.xhtml#af1801d03469d133d2a24a60c882b5467">Statement()</a>, <a class="el" href="classSQCompiler.xhtml#a49e64ea1810874c901bd7c3fefc9dca7">Statements()</a>, and <a class="el" href="classSQCompiler.xhtml#a9518569b75e9a9ad0ea140fdeea9bb6f">SwitchStatement()</a>.</p>

</div>
</div>
<a class="anchor" id="ab062a2f258dc4413ada43e05ed007b7a"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">SQVM* SQCompiler::_vm</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Referenced by <a class="el" href="classSQCompiler.xhtml#a77a8db2b1019cdebc75b19af93d0882e">Compile()</a>, <a class="el" href="classSQCompiler.xhtml#ac32f270754628d4cdb74f8f94c05bea2">CreateFunction()</a>, <a class="el" href="classSQCompiler.xhtml#ab18a57cb55ed5fdad9da5de8d7755407">EnumStatement()</a>, <a class="el" href="classSQCompiler.xhtml#a70b5da16126b868ed56de4dacc541c6e">SQCompiler()</a>, and <a class="el" href="classSQCompiler.xhtml#af1801d03469d133d2a24a60c882b5467">Statement()</a>.</p>

</div>
</div>
<a class="anchor" id="a277878311fea9e0a32d44fae6ba0f91d"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">SQChar* SQCompiler::compilererror</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Referenced by <a class="el" href="classSQCompiler.xhtml#a77a8db2b1019cdebc75b19af93d0882e">Compile()</a>, <a class="el" href="classSQCompiler.xhtml#a101d3143a4a8b35f1b9dd270b670874e">Error()</a>, and <a class="el" href="classSQCompiler.xhtml#a70b5da16126b868ed56de4dacc541c6e">SQCompiler()</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li><a class="el" href="sqcompiler_8cpp.xhtml">sqcompiler.cpp</a></li>
</ul>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.8
</small></address>
</body>
</html>
